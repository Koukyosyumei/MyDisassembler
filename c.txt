e_entry: 6ab0
sh_offset: 4cf0
section: .text ----
 4cf0: push  eax
 4cf1: call 4700 ; relative offset = -1526
 4cf6: call 4700 ; relative offset = -1531
 4cfb: call 4700 ; relative offset = -1536
 4d00: call 4700 ; relative offset = -1541
 4d05: call 4700 ; relative offset = -1546
 4d0a: call 4700 ; relative offset = -1551
 4d0f: call 4700 ; relative offset = -1556
 4d14: call 4700 ; relative offset = -1561
 4d19: call 4700 ; relative offset = -1566
 4d1e: UNKNOWN-INSTRUCTION
 4d1f: nop 
 4d20: UNKNOWN-INSTRUCTION
 4d24: push  edi
 4d26: push  esi
 4d28: push  ebp
 4d2a: push  esp
 4d2c: push  ebp
 4d2d: push  ebx
 4d2e: sub  rsp 0x78
 4d32: mov  rbp [rsi]
 4d35: UNKNOWN-INSTRUCTION
 4d36: mov  rax 0x00000028
 4d3e: mov  [104 + rsp] rax
 4d43: xor  eax eax
 4d45: UNKNOWN-INSTRUCTION
 4d47: in  eax dx
 4d48: jz 69f4 ; relative offset = 7334
 4d4e: mov  r14d edi
 4d51: mov  rbx rsi
 4d54: mov  rdi rbp
 4d57: mov  esi 0x0000002f
 4d5c: call 4910 ; relative offset = -1105
 4d61: mov  r12 rax
 4d64: UNKNOWN-INSTRUCTION
 4d67: jz 4db8 ; relative offset = 79
 4d69: lea  r13 
 4d6d: mov  rax r13
 4d70: sub  rax rbp
 4d73: cmp  rax 0x06
 4d77: jng 4db8 ; relative offset = 63
 4d79: lea  rdi 
 4d7e: mov  edx 0x00000007
 4d83: lea  rsi 
 4d8a: call 4720 ; relative offset = -1647
 4d8f: UNKNOWN-INSTRUCTION
 4d91: jnz 4db8 ; relative offset = 37
 4d93: mov  edx 0x00000003
 4d98: lea  rsi 
 4d9f: mov  rdi r13
 4da2: mov  rbp r13
 4da5: call 4720 ; relative offset = -1674
 4daa: UNKNOWN-INSTRUCTION
 4dab: ror  [rdi] 0x84
 4dae: UNKNOWN-INSTRUCTION
 4daf: adc  [rax] eax
 4db1: UNKNOWN-INSTRUCTION
 4db3: nop  [0 + rax + rax * 1]
 4db8: mov  rax [RIP + 0x0001d209]
 4dbf: mov  [RIP + 0x0001d692] rbp
 4dc6: mov  edi 0x00000006
 4dcb: lea  rsi 
 4dd2: mov  [rax] rbp
 4dd5: lea  rbp 
 4ddc: call 4b30 ; relative offset = -689
 4de1: lea  rsi 
 4de8: mov  rdi rbp
 4deb: call 4850 ; relative offset = -1440
 4df0: mov  rdi rbp
 4df3: call 4810 ; relative offset = -1512
 4df8: lea  rdi 
 4dff: mov  [RIP + 0x0001d277] 0x00000002
 4e09: call 170d0 ; relative offset = 74434
 4e0e: mov  edi 0x00000001
 4e13: mov  rax 0x8000000000000000
 4e1d: mov  [RIP + 0x0001d945] 0x00000000
 4e27: mov  [RIP + 0x0001d93a] 0x01
 4e2e: mov  [RIP + 0x0001d927] 0x00000000
 4e39: mov  [RIP + 0x0001d910] rax
 4e40: mov  [RIP + 0x0001d90d] 0xffffffff
 4e4b: mov  [RIP + 0x0001d46a] 0x00
 4e52: call 4780 ; relative offset = -1751
 4e57: UNKNOWN-INSTRUCTION
 4e58: ror  [rdi] 0x85
 4e5b: or  [rdi] edx
 4e5d: UNKNOWN-INSTRUCTION
 4e5f: mov  [RIP + 0x0001d4a3] 0x00000001
 4e69: xor  eax eax
 4e6b: lea  rdi 
 4e72: mov  [RIP + 0x0001d444] al
 4e78: mov  [RIP + 0x0001e59e] 0x00000000
 4e82: mov  [RIP + 0x0001e598] 0x00000000
 4e8c: mov  [RIP + 0x0001d60a] 0x00
 4e93: mov  [RIP + 0x0001d602] 0x00
 4e9a: mov  [RIP + 0x0001d46f] 0x00
 4ea1: mov  [RIP + 0x0001d459] 0x00000000
 4eab: mov  [RIP + 0x0001d45f] 0x00
 4eb2: mov  [RIP + 0x0001d888] 0x00000001
 4ebc: mov  [RIP + 0x0001d87d] 0x00
 4ec3: mov  [RIP + 0x0001d877] 0x00
 4eca: mov  [RIP + 0x0001d5c4] 0x00000000
 4ed4: mov  [RIP + 0x0001d5b1] 0x00000000
 4edf: mov  [RIP + 0x0001d59e] 0x00000000
 4eea: mov  [RIP + 0x0001d40f] 0x00
 4ef1: call 46c0 ; relative offset = -2102
 4ef6: mov  rbp rax
 4ef9: UNKNOWN-INSTRUCTION
 4efc: jz 4f2b ; relative offset = 45
 4efe: lea  r12 
 4f05: lea  rsi 
 4f0c: mov  rdi rax
 4f0f: mov  rdx r12
 4f12: call 12e40 ; relative offset = 57129
 4f17: UNKNOWN-INSTRUCTION
 4f18: ror  [rdi] 0x88
 4f1b: UNKNOWN-INSTRUCTION
 4f1c: add  eax 0x98480000
 4f21: mov  eax [r12 + rax * 4]
 4f25: mov  [RIP + 0x0001d395] eax
 4f2b: lea  rdi 
 4f32: mov  [RIP + 0x0001d543] 0x00000050
 4f3d: call 46c0 ; relative offset = -2178
 4f42: mov  rbp rax
 4f45: UNKNOWN-INSTRUCTION
 4f48: jz 4f53 ; relative offset = 9
 4f4a: UNKNOWN-INSTRUCTION
 4f4d: jnz 54e9 ; relative offset = 1430
 4f53: lea  rax 
 4f58: mov  esi 0x00005413
 4f5d: mov  edi 0x00000001
 4f62: mov  [24 + rsp] rax
 4f67: mov  rdx rax
 4f6a: xor  eax eax
 4f6c: call 4970 ; relative offset = -1537
 4f71: cmp  eax 0xff
 4f74: jz 4f84 ; relative offset = 14
 4f76: movzx  eax [82 + rsp]
 4f7b: UNKNOWN-INSTRUCTION
 4f7d: ror  [rdi] 0x85
 4f80: and  eax 0x48000005
 4f85: lea  edi 
 4f8b: call 46c0 ; relative offset = -2256
 4f90: mov  [RIP + 0x0001d4dd] 0x00000008
 4f9b: mov  rbp rax
 4f9e: UNKNOWN-INSTRUCTION
 4fa1: jz 4fcd ; relative offset = 42
 4fa3: mov  rdx [24 + rsp]
 4fa8: xor  esi esi
 4faa: lea  rcx 
 4fb1: mov  rdi rax
 4fb4: call 14ab0 ; relative offset = 64247
 4fb9: UNKNOWN-INSTRUCTION
 4fba: ror  [rdi] 0x85
 4fbd: pop  ecx
 4fbe: UNKNOWN-INSTRUCTION
 4fc1: mov  rax [80 + rsp]
 4fc6: mov  [RIP + 0x0001d4ab] rax
 4fcd: mov  [39 + rsp] 0x00
 4fd2: lea  rbp 
 4fd7: lea  r12 
 4fde: mov  [8 + rsp] 0x00
 4fe3: lea  r13 
 4fea: lea  r15 
 4ff1: mov  [16 + rsp] 0x00000000
 4ffa: UNKNOWN-INSTRUCTION
 4ffb: nop  [0 + rax + rax * 1]
 5000: mov  r8 rbp
 5003: mov  rcx r12
 5006: mov  rdx r13
 5009: mov  rsi rbx
 500c: mov  edi r14d
 500f: mov  [72 + rsp] 0xffffffff
 5017: call 48a0 ; relative offset = -1916
 501c: cmp  eax 0xff
 501f: jz 504e ; relative offset = 45
 5021: add  eax 0x00000083
 5026: UNKNOWN-INSTRUCTION
 5027: adc  eax [rcx]
 5029: UNKNOWN-INSTRUCTION
 5031: movsxd  rax [r15 + rax * 4]
 5035: add  rax r15
 5038: UNKNOWN-INSTRUCTION
 5039: jmp  rax
 503b: mov  [RIP + 0x0001d45a] 0x01
 5042: mov  [RIP + 0x0001d2c0] 0x00000000
 504c: jmp 5000 ; relative offset = -78
 504e: cmp  [RIP + 0x0001d25a] 0x00
 5056: jz 5e4e ; relative offset = 3570
 505c: mov  rsi [RIP + 0x0001d41d]
 5063: xor  edx edx
 5065: mov  ecx 0x00000003
 506a: mov  r12d [RIP + 0x0001d24f]
 5071: mov  rax rsi
 5074: div  rcx
 5077: cmp  rdx 0x01
 507b: sbb  rax 0xff
 507f: mov  [RIP + 0x0001d3e2] rax
 5086: mov  eax [RIP + 0x0001d280]
 508c: cmp  eax 0x04
 508f: jz 552d ; relative offset = 1176
 5095: cmp  eax 0x01
 5098: jz 552d ; relative offset = 1167
 509e: UNKNOWN-INSTRUCTION
 50a0: jz 50ab ; relative offset = 9
 50a2: UNKNOWN-INSTRUCTION
 50a5: jz 552d ; relative offset = 1154
 50ab: cmp  r12d 0x06
 50af: UNKNOWN-INSTRUCTION
 50b1: js 50b7 ; relative offset = 4
 50b3: UNKNOWN-INSTRUCTION
 50b5: mov  eax 0x0000004a
 50ba: mov  ecx r12d
 50bd: shr  rax cl
 50c0: test  unknown 0x01
 50c2: jnz 64de ; relative offset = 5142
 50c8: mov  [RIP + 0x0001d1de] 0x00
 50cf: call de30 ; relative offset = 36188
 50d4: mov  [RIP + 0x0001d4e5] rax
 50db: mov  edx [RIP + 0x0001d223]
 50e1: cmp  edx 0x01
 50e4: jna 513e ; relative offset = 88
 50e6: lea  ecx 
 50e9: lea  rsi 
 50f0: lea  rdx 
 50f4: movzx  ecx [rsi + rcx * 1]
 50f8: UNKNOWN-INSTRUCTION
 50f9: leave 
 50fa: jz 513e ; relative offset = 66
 50fc: UNKNOWN-INSTRUCTION
 50fe: ror  [rax + 141] 0x3d
 5102: mov  edx 0x480001d1
 5107: UNKNOWN-INSTRUCTION
 5108: clc 
 510a: add  rdi 0x08
 510e: UNKNOWN-INSTRUCTION
 510f: nop 
 5110: mov  eax ecx
 5112: and  ecx 0x1f
 5115: add  rdx 0x01
 5119: shr  al 0x05
 511c: movzx  eax al
 511f: lea  rsi 
 5123: mov  r8d [rsi]
 5126: mov  eax r8d
 5129: shr  eax cl
 512b: not  edx
 512d: and  eax 0x01
 5130: sal  eax cl
 5132: movzx  ecx [rdx]
 5135: xor  eax r8d
 5138: mov  [rsi] eax
 513a: UNKNOWN-INSTRUCTION
 513b: leave 
 513c: jnz 5110 ; relative offset = -46
 513e: call de30 ; relative offset = 36077
 5143: mov  [RIP + 0x0001d316] rax
 514a: UNKNOWN-INSTRUCTION
 514c: ror  [rdi] 0x84
 514f: UNKNOWN-INSTRUCTION
 5150: adc  eax [rax]
 5152: UNKNOWN-INSTRUCTION
 5153: mov  ecx [rax + 12]
 5156: mov  edx ecx
 5158: not  edx
 515a: and  edx 0x04000000
 5160: xor  edx ecx
 5162: UNKNOWN-INSTRUCTION
 5166: add  [rax] eax
 5168: UNKNOWN-INSTRUCTION
 5169: mov  [rax + 12] edx
 516c: mov  edx [RIP + 0x0001d19a]
 5172: jz 5183 ; relative offset = 15
 5174: UNKNOWN-INSTRUCTION
 5175: ror  [rdi] cl
 5177: UNKNOWN-INSTRUCTION
 517c: mov  [RIP + 0x0001d535] 0x00
 5183: mov  eax [RIP + 0x0001e297]
 5189: sub  eax 0x01
 518c: cmp  eax 0x02
 518f: jnbe  0x0b
 5191: UNKNOWN-INSTRUCTION
 5192: jnge 51b8 ; relative offset = 36
 5194: UNKNOWN-INSTRUCTION
 5196: jz 5f9c ; relative offset = 3584
 519c: UNKNOWN-INSTRUCTION
 519d: ror  [rdi] cl
 519f: UNKNOWN-INSTRUCTION
 51a0: mov  ecx 0x4800000a
 51a5: mov  eax [RIP + 0x0001ce05]
 51ab: UNKNOWN-INSTRUCTION
 51ad: push  esi
 51ae: rol  [rcx] 
 51b0: UNKNOWN-INSTRUCTION
 51b2: mov  eax [rax]
 51b4: mov  [8 + rsp] eax
 51b8: jnz 6235 ; relative offset = 4215
 51be: UNKNOWN-INSTRUCTION
 51c2: add  [rax] eax
 51c4: UNKNOWN-INSTRUCTION
 51c5: jz 51ce ; relative offset = 7
 51c7: mov  [RIP + 0x0001d57b] 0x01
 51ce: cmp  [RIP + 0x0001d56f] 0x01
 51d5: jz 5fdf ; relative offset = 3588
 51db: UNKNOWN-INSTRUCTION
 51dd: pop  esi
 51de: UNKNOWN-INSTRUCTION
 51df: add  [rax] eax
 51e1: UNKNOWN-INSTRUCTION
 51e2: jz 5233 ; relative offset = 79
 51e4: lea  r8 
 51eb: lea  rcx 
 51f2: xor  esi esi
 51f4: mov  edi 0x0000001e
 51f9: lea  rdx 
 5200: call 12450 ; relative offset = 53835
 5205: mov  [RIP + 0x0001d52c] rax
 520c: UNKNOWN-INSTRUCTION
 520e: ror  [rdi] 0x84
 5211: UNKNOWN-INSTRUCTION
 5215: mov  r8 [RIP + 0x0001cd74]
 521c: mov  rcx [RIP + 0x0001cdad]
 5223: xor  edx edx
 5225: xor  esi esi
 5227: lea  rdi 
 522e: call fc80 ; relative offset = 43597
 5233: lea  rdi 
 523a: call 46c0 ; relative offset = -2943
 523f: mov  rdi rax
 5242: call b8e0 ; relative offset = 26265
 5247: mov  [RIP + 0x0001d472] rax
 524e: mov  eax [RIP + 0x0001e1d0]
 5254: sub  eax 0x02
 5257: and  eax 0xfd
 525a: jz 5269 ; relative offset = 13
 525c: cmp  [RIP + 0x0001d0a9] 0x00
 5263: jnz 5f2f ; relative offset = 3270
 5269: mov  [RIP + 0x0001d44a] 0x01
 5270: xor  eax eax
 5272: mov  [RIP + 0x0001d441] al
 5278: UNKNOWN-INSTRUCTION
 5279: and  eax 0x0001d43a
 527e: add  [rax + 0x01d4323d] eax
 5284: UNKNOWN-INSTRUCTION
 5286: jnz 61f6 ; relative offset = 3946
 528c: UNKNOWN-INSTRUCTION
 528e: push  ebp
 528f: rol  [rcx] cl
 5291: UNKNOWN-INSTRUCTION
 5293: jnz 607a ; relative offset = 3553
 5299: mov  edi 0x00004e20
 529e: mov  r13d r14d
 52a1: mov  [RIP + 0x0001d32c] 0x00000064
 52ac: call de10 ; relative offset = 35679
 52b1: mov  [RIP + 0x0001d30c] 0x00000000
 52bc: mov  [RIP + 0x0001d30d] rax
 52c3: call a280 ; relative offset = 20408
 52c8: sub  r13d [8 + rsp]
 52cd: UNKNOWN-INSTRUCTION
 52cf: in  eax dx
 52d0: jng 5dc4 ; relative offset = 2798
 52d6: movsxd  r12 [8 + rsp]
 52db: nop  [0 + rax + rax * 1]
 52e0: mov  rdi [rbx + r12 * 8]
 52e4: lea  rcx 
 52eb: mov  edx 0x00000001
 52f0: xor  esi esi
 52f2: add  r12 0x01
 52f6: call eb10 ; relative offset = 38933
 52fb: UNKNOWN-INSTRUCTION
 52fd: out  0x7f unknown
 52ff: loopne 5349 ; relative offset = 72
 5301: cmp  [RIP + 0x0001d2c0] 0x00
 5308: jnz 6010 ; relative offset = 3330
 530e: mov  rax [RIP + 0x0001d44b]
 5315: sub  r13d 0x01
 5319: mov  r12 rax
 531c: jng 5df9 ; relative offset = 2775
 5322: mov  r12 rax
 5325: UNKNOWN-INSTRUCTION
 5327: ror  [rdi] 0x84
 532a: adc  eax [rcx]
 532c: UNKNOWN-INSTRUCTION
 532e: mov  rbp 0x8000000000000000
 5338: mov  r14 [24 + rsp]
 533d: jmp 5382 ; relative offset = 67
 533f: nop 
 5340: movzx  rdx [16 + r12]
 5346: mov  rsi [8 + r12]
 534b: call 11cc0 ; relative offset = 51568
 5350: mov  rdi [r12]
 5354: call 4680 ; relative offset = -3289
 5359: mov  rdi [8 + r12]
 535e: call 4680 ; relative offset = -3299
 5363: mov  rdi r12
 5366: call 4680 ; relative offset = -3307
 536b: mov  r12 [RIP + 0x0001d3ee]
 5372: mov  [RIP + 0x0001d3ef] 0x01
 5379: UNKNOWN-INSTRUCTION
 537b: in  unknown 0x0f
 537d: UNKNOWN-INSTRUCTION
 537e: mov  edi 0x49000000
 5383: mov  eax [24 + rsp]
 5387: mov  rbx [RIP + 0x0001d3aa]
 538e: mov  rdi [r12]
 5392: mov  [RIP + 0x0001d3c7] rax
 5399: UNKNOWN-INSTRUCTION
 539c: jz 5340 ; relative offset = -94
 539e: UNKNOWN-INSTRUCTION
 53a0: push  [rbp + 157]
 53a3: mov  rax [RIP + 0x0001d34e]
 53aa: mov  rdx rax
 53ad: sub  rdx [RIP + 0x0001d33c]
 53b4: cmp  rdx 0x0f
 53b8: jna 69d5 ; relative offset = 5655
 53be: lea  rdx 
 53c2: mov  ecx 0x00000001
 53c7: mov  rsi r14
 53ca: mov  rdi rbx
 53cd: mov  [RIP + 0x0001d324] rdx
 53d4: mov  rdx [rax + 240]
 53d8: mov  rax [rax + 248]
 53dc: mov  [80 + rsp] rdx
 53e1: mov  rdx rbp
 53e4: mov  [88 + rsp] rax
 53e9: call 7480 ; relative offset = 8338
 53ee: mov  r15 rax
 53f1: UNKNOWN-INSTRUCTION
 53f3: ror  [rdi] 0x84
 53f6: mov  [rcx] 
 53f8: UNKNOWN-INSTRUCTION
 53fa: mov  rax [72 + rsp]
 53ff: sub  [rbx + 32] 0x01
 5404: cmp  [rax] 0x00
 5408: jz 5d05 ; relative offset = 2295
 540e: mov  rdi r15
 5411: call 4680 ; relative offset = -3478
 5416: mov  rdi [r12]
 541a: call 4680 ; relative offset = -3487
 541f: mov  rdi [8 + r12]
 5424: call 4680 ; relative offset = -3497
 5429: mov  rdi r12
 542c: call 4680 ; relative offset = -3505
 5431: mov  r12 [RIP + 0x0001d328]
 5438: UNKNOWN-INSTRUCTION
 543a: in  unknown 0x0f
 543c: UNKNOWN-INSTRUCTION
 5440: inc  [rax + 0x01cec03d]
 5446: UNKNOWN-INSTRUCTION
 5448: jz 5457 ; relative offset = 13
 544a: UNKNOWN-INSTRUCTION
 544c: scasw 
 544d: rol  [rcx] cl
 544f: UNKNOWN-INSTRUCTION
 5451: jnz 5ead ; relative offset = 2646
 5457: UNKNOWN-INSTRUCTION
 5459: pop  edx
 545a: rol  [rcx] cl
 545c: UNKNOWN-INSTRUCTION
 545e: jnz 641e ; relative offset = 4026
 5464: mov  rdi [RIP + 0x0001d2cd]
 546b: UNKNOWN-INSTRUCTION
 546d: push  [72 + rax + rdx * 1]
 5471: cmp  [rdi + 32] 0x00
 5475: jnz 69b6 ; relative offset = 5435
 547b: call ca10 ; relative offset = 30096
 5480: mov  eax [RIP + 0x0001d2e6]
 5486: mov  rdx [104 + rsp]
 548b: UNKNOWN-INSTRUCTION
 548c: sub  rdx 0x00000028
 5494: jnz 6a85 ; relative offset = 5611
 549a: add  rsp 0x78
 549e: pop  ebx
 549f: pop  ebp
 54a0: pop  esp
 54a2: pop  ebp
 54a4: pop  esi
 54a6: pop  edi
 54a8: ret 
 54a9: mov  [RIP + 0x0001cfd0] rax
 54b0: jmp 4f84 ; relative offset = -1329
 54b5: mov  rdi rbp
 54b8: call 9bb0 ; relative offset = 18163
 54bd: xor  edi edi
 54bf: mov  edx 0x00000005
 54c4: lea  rsi 
 54cb: mov  r12 rax
 54ce: call 4860 ; relative offset = -3187
 54d3: mov  rcx r12
 54d6: xor  esi esi
 54d8: xor  edi edi
 54da: mov  rdx rax
 54dd: xor  eax eax
 54df: call 4ba0 ; relative offset = -2372
 54e4: jmp 4f2b ; relative offset = -1470
 54e9: mov  rdi rax
 54ec: call 9950 ; relative offset = 17503
 54f1: UNKNOWN-INSTRUCTION
 54f2: ror  [rdi] 0x85
 54f5: pop  edx
 54f6: UNKNOWN-INSTRUCTION
 54f8: dec  [rax + 137]
 54fb: out  dx eax
 54fc: call 9bb0 ; relative offset = 18095
 5501: xor  edi edi
 5503: mov  edx 0x00000005
 5508: lea  rsi 
 550f: mov  r12 rax
 5512: call 4860 ; relative offset = -3255
 5517: mov  rcx r12
 551a: xor  esi esi
 551c: xor  edi edi
 551e: mov  rdx rax
 5521: xor  eax eax
 5523: call 4ba0 ; relative offset = -2440
 5528: jmp 4f53 ; relative offset = -1498
 552d: mov  [RIP + 0x0001cd79] 0x00
 5534: call de30 ; relative offset = 35063
 5539: mov  [RIP + 0x0001d080] rax
 5540: cmp  r12d 0x07
 5544: jnz 50db ; relative offset = -1135
 554a: UNKNOWN-INSTRUCTION
 554c: ror  [rax + 141] 0x0d
 5550: insb 
 5551: UNKNOWN-INSTRUCTION
 5552: add  [rax] eax
 5554: UNKNOWN-INSTRUCTION
 5558: mov  esi [rcx + 12]
 555b: mov  edx esi
 555d: not  edx
 555f: and  edx 0x01
 5562: xor  edx esi
 5564: mov  [rcx + 12] edx
 5567: jmp 50db ; relative offset = -1169
 556c: mov  rax [RIP + 0x0001ca45]
 5573: mov  rax [rax]
 5576: mov  [16 + rsp] rax
 557b: jmp 5000 ; relative offset = -1408
 5580: mov  rax [RIP + 0x0001ca31]
 5587: lea  rcx 
 558e: lea  r8 
 5595: lea  rdx 
 559c: lea  rdi 
 55a3: mov  rsi [rax]
 55a6: call a000 ; relative offset = 19029
 55ab: lea  rcx 
 55b2: mov  eax [rcx + rax * 4]
 55b5: mov  [RIP + 0x0001de65] eax
 55bb: jmp 5000 ; relative offset = -1472
 55c0: mov  rax [RIP + 0x0001c9f1]
 55c7: lea  rcx 
 55ce: lea  r8 
 55d5: lea  rdx 
 55dc: lea  rdi 
 55e3: mov  rsi [rax]
 55e6: call a000 ; relative offset = 18965
 55eb: lea  rcx 
 55f2: mov  [8 + rsp] 0x01
 55f7: mov  eax [rcx + rax * 4]
 55fa: mov  [RIP + 0x0001de24] eax
 5600: jmp 5000 ; relative offset = -1541
 5605: mov  [RIP + 0x0001cca9] 0x00000090
 560f: mov  [RIP + 0x0001ce57] 0x00000090
 5619: mov  [RIP + 0x0001cc8c] 0x00000001
 5624: mov  [RIP + 0x0001ca49] 0x00000001
 562f: jmp 5000 ; relative offset = -1588
 5634: mov  [RIP + 0x0001cc81] 0x00
 563b: jmp 5000 ; relative offset = -1600
 5640: mov  rax [RIP + 0x0001c971]
 5647: lea  r8 
 564e: lea  rcx 
 5655: lea  rdx 
 565c: lea  rdi 
 5663: mov  rsi [rax]
 5666: call a000 ; relative offset = 18837
 566b: lea  rsi 
 5672: mov  eax [rsi + rax * 4]
 5675: mov  [RIP + 0x0001cc45] eax
 567b: jmp 5000 ; relative offset = -1664
 5680: mov  rax [RIP + 0x0001c931]
 5687: lea  rcx 
 568e: lea  r8 
 5695: lea  rdx 
 569c: lea  rdi 
 56a3: mov  rsi [rax]
 56a6: call a000 ; relative offset = 18773
 56ab: lea  rcx 
 56b2: mov  eax [rcx + rax * 4]
 56b5: mov  [RIP + 0x0001cc49] eax
 56bb: jmp 5000 ; relative offset = -1728
 56c0: mov  rax [RIP + 0x0001c8f1]
 56c7: mov  rsi [rax]
 56ca: UNKNOWN-INSTRUCTION
 56cd: jz 5c39 ; relative offset = 1382
 56d3: lea  rcx 
 56da: lea  rdx 
 56e1: lea  r8 
 56e8: lea  rdi 
 56ef: call a000 ; relative offset = 18700
 56f4: lea  rcx 
 56fb: mov  edx [rcx + rax * 4]
 56fe: cmp  edx 0x01
 5701: jz 5c39 ; relative offset = 1330
 5707: xor  eax eax
 5709: cmp  edx 0x02
 570c: jnz 5c3e ; relative offset = 1324
 5712: mov  edi 0x00000001
 5717: call 4780 ; relative offset = -3996
 571c: UNKNOWN-INSTRUCTION
 571d: ror  [rdi] 0x95
 5720: ror  [rdi] 0xb6
 5723: shr  cl 0x15
 5726: add  eax 0x10bf0000
 572b: UNKNOWN-INSTRUCTION
 572e: call de10 ; relative offset = 34525
 5733: mov  rdx [RIP + 0x0001c87e]
 573a: mov  rdx [rdx]
 573d: mov  [rax] rdx
 5740: mov  rdx [RIP + 0x0001cd41]
 5747: mov  [RIP + 0x0001cd3a] rax
 574e: mov  [rax + 8] rdx
 5752: jmp 5000 ; relative offset = -1879
 5757: mov  [RIP + 0x0001cfec] 0x01
 575e: jmp 5000 ; relative offset = -1891
 5763: lea  rax 
 576a: mov  [RIP + 0x0001cb98] 0x00000000
 5774: mov  [16 + rsp] rax
 5779: jmp 5000 ; relative offset = -1918
 577e: mov  rax [RIP + 0x0001c833]
 5785: lea  rcx 
 578c: lea  r8 
 5793: lea  rdx 
 579a: lea  rdi 
 57a1: mov  rsi [rax]
 57a4: call a000 ; relative offset = 18519
 57a9: lea  rcx 
 57b0: mov  eax [rcx + rax * 4]
 57b3: mov  [RIP + 0x0001cb53] eax
 57b9: jmp 5000 ; relative offset = -1982
 57be: mov  [RIP + 0x0001cb3c] 0x00000002
 57c8: jmp 5000 ; relative offset = -1997
 57cd: mov  [RIP + 0x0001cf6d] 0x00000004
 57d7: jmp 5000 ; relative offset = -2012
 57dc: mov  rax [RIP + 0x0001c7d5]
 57e3: mov  rsi [rax]
 57e6: UNKNOWN-INSTRUCTION
 57e9: jz 5c22 ; relative offset = 1075
 57ef: lea  rcx 
 57f6: lea  r8 
 57fd: lea  rdx 
 5804: lea  rdi 
 580b: call a000 ; relative offset = 18416
 5810: lea  rcx 
 5817: mov  eax [rcx + rax * 4]
 581a: cmp  eax 0x01
 581d: jz 5c22 ; relative offset = 1023
 5823: cmp  eax 0x02
 5826: jz 5c10 ; relative offset = 996
 582c: mov  [RIP + 0x0001cad5] 0x00
 5833: jmp 5000 ; relative offset = -2104
 5838: mov  rax [RIP + 0x0001c779]
 583f: mov  rdi [rax]
 5842: call 99d0 ; relative offset = 16777
 5847: UNKNOWN-INSTRUCTION
 5848: ror  [rdi] 0x85
 584b: ret  0x0011
 584e: UNKNOWN-INSTRUCTION
 584f: mov  eax [RIP + 0x0001ca63]
 5855: mov  [RIP + 0x0001cc15] eax
 585b: mov  rax [RIP + 0x0001ca4e]
 5862: mov  [RIP + 0x0001c80f] rax
 5869: jmp 5000 ; relative offset = -2158
 586e: mov  [RIP + 0x0001dbb3] 0x01
 5875: jmp 5000 ; relative offset = -2170
 587a: mov  [RIP + 0x0001ca88] 0x00000003
 5884: jmp 5000 ; relative offset = -2185
 5889: mov  rax [RIP + 0x0001c728]
 5890: mov  rdi [rax]
 5893: call 9950 ; relative offset = 16568
 5898: UNKNOWN-INSTRUCTION
 5899: ror  [rdi] 0x85
 589c: UNKNOWN-INSTRUCTION
 589d: idiv  edi
 589f: dec  [rax + 139]
 58a2: add  eax 0x0001c711
 58a7: mov  rdi [rax]
 58aa: call 9bb0 ; relative offset = 17153
 58af: mov  edx 0x00000005
 58b4: lea  rsi 
 58bb: xor  edi edi
 58bd: mov  rbx rax
 58c0: call 4860 ; relative offset = -4197
 58c5: mov  r8 rbx
 58c8: xor  esi esi
 58ca: mov  edi 0x00000002
 58cf: mov  rcx rax
 58d2: lea  rdx 
 58d9: xor  eax eax
 58db: call 4ba0 ; relative offset = -3392
 58e0: mov  [RIP + 0x0001db3a] 0x00000003
 58ea: mov  [8 + rsp] 0x01
 58ef: jmp 5000 ; relative offset = -2292
 58f4: mov  [RIP + 0x0001db22] 0x00000002
 58fe: jmp 5000 ; relative offset = -2307
 5903: mov  [RIP + 0x0001db17] 0x00000004
 590d: mov  [8 + rsp] 0x01
 5912: jmp 5000 ; relative offset = -2327
 5917: mov  [RIP + 0x0001c9f2] 0x01
 591e: jmp 5000 ; relative offset = -2339
 5923: mov  [RIP + 0x0001cb73] 0x01
 592a: jmp 5000 ; relative offset = -2351
 592f: mov  [RIP + 0x0001c986] 0x01
 5936: jmp 5000 ; relative offset = -2363
 593b: mov  [RIP + 0x0001c9bf] 0x00000001
 5945: jmp 5000 ; relative offset = -2378
 594a: mov  [RIP + 0x0001c9b8] 0x00000000
 5954: mov  [RIP + 0x0001c729] 0x00
 595b: jmp 5000 ; relative offset = -2400
 5960: mov  [RIP + 0x0001c9a2] 0x00000004
 596a: jmp 5000 ; relative offset = -2415
 596f: mov  [RIP + 0x0001c99b] 0x01
 5976: jmp 5000 ; relative offset = -2427
 597b: mov  [RIP + 0x0001c933] 0x000000b0
 5985: mov  [RIP + 0x0001cae1] 0x000000b0
 598f: mov  [RIP + 0x0001c916] 0x00000001
 599a: mov  [RIP + 0x0001c6d3] 0x00000001
 59a5: jmp 5000 ; relative offset = -2474
 59aa: mov  [RIP + 0x0001c958] 0x00000000
 59b4: mov  [RIP + 0x0001c6ca] 0x00
 59bb: jmp 5000 ; relative offset = -2496
 59c0: cmp  [RIP + 0x0001c945] 0x00
 59c7: mov  [RIP + 0x0001cac7] 0x00000002
 59d1: mov  [RIP + 0x0001da49] 0xffffffff
 59db: jz 6485 ; relative offset = 2724
 59e1: mov  [RIP + 0x0001c928] 0x00
 59e8: mov  [RIP + 0x0001c919] 0x00
 59ef: mov  [RIP + 0x0001cbf2] 0x00
 59f6: mov  [8 + rsp] 0x01
 59fb: jmp 5000 ; relative offset = -2560
 5a00: mov  [RIP + 0x0001cd3a] 0x01
 5a07: jmp 5000 ; relative offset = -2572
 5a0c: mov  [RIP + 0x0001da0a] 0x00000001
 5a16: jmp 5000 ; relative offset = -2587
 5a1b: mov  [RIP + 0x0001c89b] 0x00000007
 5a25: jmp 5000 ; relative offset = -2602
 5a2a: mov  [RIP + 0x0001ca64] 0x00000002
 5a34: jmp 5000 ; relative offset = -2617
 5a39: mov  [RIP + 0x0001c8c0] 0x01
 5a40: jmp 5000 ; relative offset = -2629
 5a45: mov  [RIP + 0x0001d9d5] 0x00000001
 5a4f: mov  [8 + rsp] 0x01
 5a54: jmp 5000 ; relative offset = -2649
 5a59: mov  [RIP + 0x0001d9c1] 0xffffffff
 5a63: mov  [8 + rsp] 0x01
 5a68: jmp 5000 ; relative offset = -2669
 5a6d: xor  edi edi
 5a6f: mov  edx 0x00000005
 5a74: lea  rsi 
 5a7b: call 4860 ; relative offset = -4640
 5a80: mov  rdx [24 + rsp]
 5a85: xor  esi esi
 5a87: lea  rcx 
 5a8e: mov  [40 + rsp] rax
 5a93: mov  rax [RIP + 0x0001c51e]
 5a9a: mov  r8 [rax]
 5a9d: mov  rdi r8
 5aa0: mov  [56 + rsp] r8
 5aa5: call 14ab0 ; relative offset = 61446
 5aaa: UNKNOWN-INSTRUCTION
 5aab: ror  [rcx + 0x0f302444] 0x84
 5ab2: UNKNOWN-INSTRUCTION
 5ab3: add  al [rax]
 5ab5: UNKNOWN-INSTRUCTION
 5ab6: call 4710 ; relative offset = -5035
 5abb: mov  edx [48 + rsp]
 5abf: mov  r8 [56 + rsp]
 5ac4: mov  rcx rax
 5ac7: cmp  edx 0x01
 5aca: jz 5caf ; relative offset = 479
 5ad0: cmp  edx 0x03
 5ad3: jnz 5cb5 ; relative offset = 476
 5ad9: mov  [rax] 0x00000000
 5adf: jmp 5cb5 ; relative offset = 465
 5ae4: mov  [RIP + 0x0001d936] 0x00000002
 5aee: mov  [8 + rsp] 0x01
 5af3: jmp 5000 ; relative offset = -2808
 5af8: mov  [RIP + 0x0001c802] 0x00000003
 5b02: jmp 5000 ; relative offset = -2823
 5b07: mov  [RIP + 0x0001cbaa] 0x01
 5b0e: jmp 5000 ; relative offset = -2835
 5b13: mov  [RIP + 0x0001c7ef] 0x00000002
 5b1d: jmp 5000 ; relative offset = -2850
 5b22: lea  rdi 
 5b29: call de90 ; relative offset = 33634
 5b2e: lea  rdi 
 5b35: call de90 ; relative offset = 33622
 5b3a: jmp 5000 ; relative offset = -2879
 5b3f: mov  [RIP + 0x0001c94f] 0x00000001
 5b49: jmp 5000 ; relative offset = -2894
 5b4e: cmp  [RIP + 0x0001c7b7] 0x00
 5b55: jz 5000 ; relative offset = -2907
 5b5b: mov  [RIP + 0x0001c7a7] 0x00000001
 5b65: jmp 5000 ; relative offset = -2922
 5b6a: push  eax
 5b6b: mov  rax [RIP + 0x0001c436]
 5b72: lea  r9 
 5b79: lea  r8 
 5b80: UNKNOWN-INSTRUCTION
 5b82: lea  rcx 
 5b89: lea  rdx 
 5b90: mov  rdi [rax]
 5b93: lea  rsi 
 5b9a: xor  eax eax
 5b9c: call bb60 ; relative offset = 24511
 5ba1: xor  edi edi
 5ba3: call 4c30 ; relative offset = -3960
 5ba8: mov  [RIP + 0x0001cb92] 0x00000005
 5bb2: jmp 5000 ; relative offset = -2999
 5bb7: mov  rax [RIP + 0x0001c3fa]
 5bbe: mov  rdi [rax]
 5bc1: call de90 ; relative offset = 33482
 5bc6: jmp 5000 ; relative offset = -3019
 5bcb: mov  [RIP + 0x0001cb6f] 0x00000003
 5bd5: jmp 5000 ; relative offset = -3034
 5bda: mov  [RIP + 0x0001c4a3] 0x00
 5be1: jmp 5000 ; relative offset = -3046
 5be6: mov  [RIP + 0x0001c6d0] 0x00000005
 5bf0: jmp 5000 ; relative offset = -3061
 5bf5: mov  [RIP + 0x0001c6c1] 0x00000000
 5bff: jmp 5000 ; relative offset = -3076
 5c04: mov  [RIP + 0x0001cb35] 0x01
 5c0b: jmp 5000 ; relative offset = -3088
 5c10: mov  edi 0x00000001
 5c15: call 4780 ; relative offset = -5274
 5c1a: UNKNOWN-INSTRUCTION
 5c1b: ror  [rdi] 0x84
 5c1e: UNKNOWN-INSTRUCTION
 5c1f: cld 
 5c20: UNKNOWN-INSTRUCTION
 5c21: inc  esi
 5c23: add  eax 0x0001c6df
 5c28: add  [rax + 199] ecx
 5c2b: add  eax 0x0001c844
 5c30: UNKNOWN-INSTRUCTION
 5c34: jmp 5000 ; relative offset = -3129
 5c39: mov  eax 0x00000001
 5c3e: mov  [RIP + 0x0001c9a4] al
 5c44: UNKNOWN-INSTRUCTION
 5c45: and  eax 0x0001c99d
 5c4a: add  ecx ebp
 5c4c: mov  al 0xf3
 5c4e: UNKNOWN-INSTRUCTION
 5c4f: inc  [rax + 0x01c9913d]
 5c55: UNKNOWN-INSTRUCTION
 5c57: jnz 517c ; relative offset = -2785
 5c5d: cmp  [16 + rsp] 0x00
 5c63: jz 685e ; relative offset = 3061
 5c69: mov  r13 [16 + rsp]
 5c6e: lea  r12 
 5c75: jmp 5c84 ; relative offset = 13
 5c77: UNKNOWN-INSTRUCTION
 5c78: nop  [0x00000000 + rax + rax * 1]
 5c80: add  r13 0x06
 5c84: mov  edx 0x00000006
 5c89: mov  rsi r12
 5c8c: mov  rdi r13
 5c8f: call 4720 ; relative offset = -5492
 5c94: UNKNOWN-INSTRUCTION
 5c95: ror  [rdi] 0x85
 5c98: pop  edx
 5c99: UNKNOWN-INSTRUCTION
 5c9c: mov  edi 0x00000002
 5ca1: call c5f0 ; relative offset = 26954
 5ca6: UNKNOWN-INSTRUCTION
 5ca8: jnz 5c80 ; relative offset = -42
 5caa: jmp 51a4 ; relative offset = -2827
 5caf: mov  [rax] 0x0000004b
 5cb5: mov  rsi r8
 5cb8: lea  rdx 
 5cbf: xor  edi edi
 5cc1: mov  [48 + rsp] rcx
 5cc6: call 14900 ; relative offset = 60469
 5ccb: mov  rcx [48 + rsp]
 5cd0: mov  r8 rax
 5cd3: mov  esi [rcx]
 5cd5: cmp  esi 0x16
 5cd8: jnz 5cdc ; relative offset = 2
 5cda: xor  esi esi
 5cdc: mov  rcx [40 + rsp]
 5ce1: lea  rdx 
 5ce8: mov  edi 0x00000002
 5ced: xor  eax eax
 5cef: call 4ba0 ; relative offset = -4436
 5cf4: mov  rax [80 + rsp]
 5cf9: mov  [RIP + 0x0001c778] rax
 5d00: jmp 5000 ; relative offset = -3333
 5d05: mov  rax [rbx + 24]
 5d09: sub  rax 0x01
 5d0d: mov  [rbx + 24] rax
 5d11: js 64c0 ; relative offset = 1961
 5d17: UNKNOWN-INSTRUCTION
 5d19: out  dx eax
 5d1a: in  eax dx
 5d1b: UNKNOWN-INSTRUCTION
 5d1e: sub  bpl al
 5d20: mov  rax [rbx + 16]
 5d24: UNKNOWN-INSTRUCTION
 5d26: ror  [rdi] 0x88
 5d29: jnz 5d32 ; relative offset = 7
 5d2b: UNKNOWN-INSTRUCTION
 5d2f: out  dx eax
 5d30: in  unknown 0xf3
 5d32: UNKNOWN-INSTRUCTION
 5d34: sub  spl al
 5d36: mov  rax [rbx + 40]
 5d3a: UNKNOWN-INSTRUCTION
 5d40: pop  ecx
 5d41: UNKNOWN-INSTRUCTION
 5d45: jna 540e ; relative offset = -2365
 5d4b: mov  rdi rbx
 5d4e: call c6c0 ; relative offset = 26989
 5d53: mov  rax [rbx + 40]
 5d57: UNKNOWN-INSTRUCTION
 5d5d: pop  ecx
 5d5e: UNKNOWN-INSTRUCTION
 5d62: jna 540e ; relative offset = -2394
 5d68: UNKNOWN-INSTRUCTION
 5d6a: pop  ecx
 5d6b: UNKNOWN-INSTRUCTION
 5d6c: add  unknown 0x80
 5d6e: js 5d80 ; relative offset = 16
 5d70: UNKNOWN-INSTRUCTION
 5d71: jz 67a4 ; relative offset = 2605
 5d77: UNKNOWN-INSTRUCTION
 5d79: and  eax 0x0001676e
 5d7e: jnb 678f ; relative offset = 2571
 5d84: UNKNOWN-INSTRUCTION
 5d87: sub  unknown 0xf4
 5d89: mov  rdi rbx
 5d8c: call c890 ; relative offset = 27391
 5d91: UNKNOWN-INSTRUCTION
 5d92: ror  [rdi] 0x85
 5d95: jnz 5d8d ; relative offset = -10
 5d97: UNKNOWN-INSTRUCTION
 5d98: dec  [rax + 139]
 5d9b: jpo 5de5 ; relative offset = 72
 5d9d: jmp 5db2 ; relative offset = 19
 5d9f: mov  rax [rdi + 8]
 5da3: mov  [8 + rsp] rax
 5da8: call 4680 ; relative offset = -5933
 5dad: mov  rdi [8 + rsp]
 5db2: UNKNOWN-INSTRUCTION
 5db4: push  [rbp + 232]
 5db7: mov  [rbx + 72] 0x00000000
 5dbf: jmp 540e ; relative offset = -2486
 5dc4: UNKNOWN-INSTRUCTION
 5dc6: jna 5d91 ; relative offset = -55
 5dc8: add  [rax] eax
 5dca: UNKNOWN-INSTRUCTION
 5dcb: jnz 5fb3 ; relative offset = 482
 5dd1: mov  edx 0x00000001
 5dd6: xor  esi esi
 5dd8: lea  rdi 
 5ddf: call e6e0 ; relative offset = 35068
 5de4: cmp  [RIP + 0x0001c7dc] 0x00
 5dec: mov  r12 [RIP + 0x0001c96d]
 5df3: jnz 6010 ; relative offset = 535
 5df9: UNKNOWN-INSTRUCTION
 5dfb: in  unknown 0x0f
 5dfd: UNKNOWN-INSTRUCTION
 5dff: idiv  dil
 5e01: dec  [rcx + 131]
 5e04: jnge 5e2a ; relative offset = 36
 5e06: UNKNOWN-INSTRUCTION
 5e08: jnz 532e ; relative offset = -2784
 5e0e: mov  [RIP + 0x0001c953] 0x00
 5e15: jmp 532e ; relative offset = -2796
 5e1a: mov  rdi rbp
 5e1d: call 9bb0 ; relative offset = 15758
 5e22: xor  edi edi
 5e24: mov  edx 0x00000005
 5e29: lea  rsi 
 5e30: mov  r12 rax
 5e33: call 4860 ; relative offset = -5592
 5e38: mov  rcx r12
 5e3b: xor  esi esi
 5e3d: xor  edi edi
 5e3f: mov  rdx rax
 5e42: xor  eax eax
 5e44: call 4ba0 ; relative offset = -4777
 5e49: jmp 4fcd ; relative offset = -3713
 5e4e: lea  rdi 
 5e55: call 46c0 ; relative offset = -6042
 5e5a: mov  r12 rax
 5e5d: mov  rdi rax
 5e60: call 99d0 ; relative offset = 15211
 5e65: UNKNOWN-INSTRUCTION
 5e67: in  unknown 0x0f
 5e69: UNKNOWN-INSTRUCTION
 5e6a: jng 5e76 ; relative offset = 10
 5e6c: UNKNOWN-INSTRUCTION
 5e6e: mov  eax [RIP + 0x0001c444]
 5e74: mov  [RIP + 0x0001c5f6] eax
 5e7a: mov  rax [RIP + 0x0001c42f]
 5e81: mov  [RIP + 0x0001c1f0] rax
 5e88: UNKNOWN-INSTRUCTION
 5e89: jnge 5eaf ; relative offset = 36
 5e8b: UNKNOWN-INSTRUCTION
 5e8d: jz 505c ; relative offset = -3639
 5e93: mov  [RIP + 0x0001c41b] 0x00000000
 5e9d: mov  [RIP + 0x0001c408] 0x00000400
 5ea8: jmp 505c ; relative offset = -3665
 5ead: cmp  [RIP + 0x0001c20b] 0x02
 5eb5: jnz 5ec9 ; relative offset = 18
 5eb7: mov  rax [RIP + 0x0001c20a]
 5ebe: UNKNOWN-INSTRUCTION
 5ebf: cmp  [rax] 0x840f5b1b
 5ec5: UNKNOWN-INSTRUCTION
 5ec9: lea  rdi 
 5ed0: call c2a0 ; relative offset = 25547
 5ed5: lea  rdi 
 5edc: call c2a0 ; relative offset = 25535
 5ee1: mov  rax [RIP + 0x0001c0c0]
 5ee8: mov  rdi [rax]
 5eeb: call 4c70 ; relative offset = -4736
 5ef0: xor  edi edi
 5ef2: call 7f00 ; relative offset = 8201
 5ef7: mov  ebx [RIP + 0x0001c907]
 5efd: UNKNOWN-INSTRUCTION
 5eff: jz 5f17 ; relative offset = 22
 5f01: nop  [rax + 0x00000000]
 5f08: mov  edi 0x00000013
 5f0d: call 46f0 ; relative offset = -6178
 5f12: sub  ebx 0x01
 5f15: jnz 5f08 ; relative offset = -15
 5f17: mov  edi [RIP + 0x0001c8eb]
 5f1d: UNKNOWN-INSTRUCTION
 5f1e: dec  [rdi]
 5f20: UNKNOWN-INSTRUCTION
 5f24: jmp  rax
 5f26: UNKNOWN-INSTRUCTION
 5f27: out  0xff eax
 5f29: jmp  rcx
 5f2b: UNKNOWN-INSTRUCTION
 5f2e: inc  [rax + 0x01c3ca3d]
 5f34: UNKNOWN-INSTRUCTION
 5f36: jnz 5269 ; relative offset = -3283
 5f3c: UNKNOWN-INSTRUCTION
 5f3f: ret 
 5f40: add  [rax] eax
 5f42: UNKNOWN-INSTRUCTION
 5f43: jnz 5269 ; relative offset = -3296
 5f49: UNKNOWN-INSTRUCTION
 5f4b: LOCK mov  [rcx] 0x05c60000
 5f52: UNKNOWN-INSTRUCTION
 5f53: mov  [rcx] 0x01b80000
 5f59: UNKNOWN-INSTRUCTION
 5f5c: jnz 5272 ; relative offset = -3312
 5f62: UNKNOWN-INSTRUCTION
 5f65: ret 
 5f66: add  [rax] eax
 5f68: UNKNOWN-INSTRUCTION
 5f69: jnz 5272 ; relative offset = -3325
 5f6f: cmp  [RIP + 0x0001c38e] 0x00
 5f76: jnz 5272 ; relative offset = -3338
 5f7c: movzx  eax [RIP + 0x0001c7c7]
 5f83: jmp 5272 ; relative offset = -3350
 5f88: mov  rax [RIP + 0x0001c051]
 5f8f: lea  rbp 
 5f94: mov  [rax] rbp
 5f97: jmp 4db8 ; relative offset = -4580
 5f9c: UNKNOWN-INSTRUCTION
 5f9d: ror  [rdi] cl
 5f9f: UNKNOWN-INSTRUCTION
 5fa0: mov  ecx 0xc7fffffc
 5fa5: add  eax 0x0001d476
 5faa: add  unknown 0x00
 5fac: UNKNOWN-INSTRUCTION
 5fae: jmp 51a4 ; relative offset = -3599
 5fb3: lea  rcx 
 5fba: mov  edx 0x00000001
 5fbf: mov  esi 0x00000003
 5fc4: lea  rdi 
 5fcb: call eb10 ; relative offset = 35648
 5fd0: jmp 5de4 ; relative offset = -497
 5fd5: mov  [39 + rsp] 0x01
 5fda: jmp 5000 ; relative offset = -4063
 5fdf: UNKNOWN-INSTRUCTION
 5fe1: pop  ebx
 5fe2: mov  [rcx] 0x02b80000
 5fe8: UNKNOWN-INSTRUCTION
 5feb: jnz 6005 ; relative offset = 24
 5fed: cmp  [RIP + 0x0001c310] 0x03
 5ff4: jz 6005 ; relative offset = 15
 5ff6: cmp  [RIP + 0x0001c30f] 0x01
 5ffd: sbb  eax eax
 5fff: and  eax 0xfe
 6002: add  eax 0x04
 6005: mov  [RIP + 0x0001c739] eax
 600b: jmp 51db ; relative offset = -3637
 6010: call dec0 ; relative offset = 32427
 6015: UNKNOWN-INSTRUCTION
 6017: and  eax 0x000001c7
 601c: jz 66a2 ; relative offset = 1664
 6022: cmp  [RIP + 0x0001c59e] 0x00
 602a: jz 530e ; relative offset = -3362
 6030: call 118a0 ; relative offset = 47211
 6035: cmp  [RIP + 0x0001c723] 0x00
 603d: jz 5441 ; relative offset = -3074
 6043: mov  rax [RIP + 0x0001bf5e]
 604a: mov  rdi [rax]
 604d: mov  rax [rdi + 40]
 6051: UNKNOWN-INSTRUCTION
 6055: jna 6975 ; relative offset = 2330
 605b: lea  rdx 
 605f: mov  [rdi + 40] rdx
 6063: mov  [rax] 0x0a
 6066: add  [RIP + 0x0001c28a] 0x01
 606e: mov  rax [RIP + 0x0001c6eb]
 6075: jmp 5322 ; relative offset = -3416
 607a: xor  eax eax
 607c: lea  rsi 
 6083: jmp 60c7 ; relative offset = 66
 6085: nop  [rax]
 6088: mov  ecx 0x00000001
 608d: cmp  eax 0x40
 6090: jnle 60b8 ; relative offset = 38
 6092: sub  edx 0x30
 6095: cmp  edx 0x09
 6098: jna 60b8 ; relative offset = 30
 609a: cmp  eax 0x7e
 609d: jz 60e1 ; relative offset = 66
 609f: nop 
 60a0: cmp  eax 0x2d
 60a3: jz 60e1 ; relative offset = 60
 60a5: cmp  eax 0x2e
 60a8: UNKNOWN-INSTRUCTION
 60aa: rol  [rbx + 0x940f5ff8] 0xc2
 60b1: or  ecx edx
 60b3: nop  [0 + rax + rax * 1]
 60b8: UNKNOWN-INSTRUCTION
 60b9: or  unknown 0x06
 60bb: add  rax 0x01
 60bf: UNKNOWN-INSTRUCTION
 60c2: add  [rax] eax
 60c4: UNKNOWN-INSTRUCTION
 60c5: jz 60f5 ; relative offset = 46
 60c7: mov  edx eax
 60c9: cmp  rax 0x5a
 60cd: jna 6088 ; relative offset = -71
 60cf: lea  edx 
 60d2: mov  ecx 0x00000001
 60d7: cmp  edx 0x19
 60da: jna 60b8 ; relative offset = -36
 60dc: cmp  eax 0x7e
 60df: jnz 60a0 ; relative offset = -65
 60e1: mov  ecx 0x00000001
 60e6: UNKNOWN-INSTRUCTION
 60e7: or  unknown 0x06
 60e9: add  rax 0x01
 60ed: UNKNOWN-INSTRUCTION
 60f0: add  [rax] eax
 60f2: UNKNOWN-INSTRUCTION
 60f3: jnz 60c7 ; relative offset = -46
 60f5: mov  [16 + rsp] rbx
 60fa: mov  esp 0x00000022
 6100: xor  r15d r15d
 6103: nop  [0 + rax + rax * 1]
 6108: UNKNOWN-INSTRUCTION
 610a: dec  [rdi]
 610c: UNKNOWN-INSTRUCTION
 610d: mov  edi 0x48000000
 6112: mov  eax 0x55555553
 6117: push  ebp
 6118: push  ebp
 6119: push  ebp
 611a: push  ebp
 611b: UNKNOWN-INSTRUCTION
 6120: mov  bpl 0x00
 6122: UNKNOWN-INSTRUCTION
 6124: mov  rax r12
 6127: shr  rax 
 612a: lea  r12 
 612f: mov  rdi r15
 6132: mov  rsi r12
 6135: call 4b10 ; relative offset = -5674
 613a: mov  r15 rax
 613d: UNKNOWN-INSTRUCTION
 613f: ror  [rdi] 0x84
 6142: UNKNOWN-INSTRUCTION
 6146: lea  rbx 
 614b: mov  [rbx] 0x00
 614e: call 4710 ; relative offset = -6723
 6153: lea  rsi 
 6158: mov  rdi r15
 615b: mov  [rax] 0x00000000
 6161: mov  r13 rax
 6164: call 4c10 ; relative offset = -5465
 6169: UNKNOWN-INSTRUCTION
 616b: jnz 61a0 ; relative offset = 51
 616d: UNKNOWN-INSTRUCTION
 6170: jnz 6108 ; relative offset = -106
 6172: mov  rdi r15
 6175: mov  rbx [16 + rsp]
 617a: call 4880 ; relative offset = -6399
 617f: lea  rsi 
 6183: UNKNOWN-INSTRUCTION
 6185: out  0x0f unknown
 6187: UNKNOWN-INSTRUCTION
 618c: mov  [RIP + 0x0001c44d] r15
 6193: jmp 5299 ; relative offset = -3839
 6198: nop  [0x00000000 + rax + rax * 1]
 61a0: mov  eax [r13 + 0]
 61a4: cmp  eax 0x24
 61a7: jna 61e0 ; relative offset = 55
 61a9: mov  rdi r15
 61ac: mov  rbx [16 + rsp]
 61b1: call 4680 ; relative offset = -6966
 61b6: lea  rax 
 61bd: mov  [RIP + 0x0001c41c] rax
 61c4: jmp 5299 ; relative offset = -3888
 61c9: nop  [rax + 0x00000000]
 61d0: UNKNOWN-INSTRUCTION
 61d2: in  unknown 0x0f
 61d4: mov  [rsi + 255] edx
 61d7: UNKNOWN-INSTRUCTION
 61d8: jmp  rax
 61da: jpo 61dd ; relative offset = 0
 61dd: UNKNOWN-INSTRUCTION
 61df: nop 
 61e0: mov  rbx 0xffffffefffbfeffe
 61ea: UNKNOWN-INSTRUCTION
 61ed: ret 
 61ee: jnb 6108 ; relative offset = -236
 61f4: jmp 61a9 ; relative offset = -77
 61f6: mov  r12 [RIP + 0x0001bd93]
 61fd: mov  r13 [RIP + 0x0001bdcc]
 6204: xor  edx edx
 6206: xor  esi esi
 6208: lea  rdi 
 620f: mov  r8 r12
 6212: mov  rcx r13
 6215: call fc80 ; relative offset = 39526
 621a: mov  r8 r12
 621d: mov  rcx r13
 6220: xor  edx edx
 6222: xor  esi esi
 6224: lea  rdi 
 622b: call fc80 ; relative offset = 39504
 6230: jmp 528c ; relative offset = -4009
 6235: lea  rdi 
 623c: call 46c0 ; relative offset = -7041
 6241: mov  [72 + rsp] rax
 6246: UNKNOWN-INSTRUCTION
 6248: ror  [rdi] 0x84
 624b: push  esi
 624c: add  eax [rax]
 624e: UNKNOWN-INSTRUCTION
 6252: jz 65a5 ; relative offset = 845
 6258: mov  rdi rax
 625b: mov  [101 + rsp] 0x3f3f
 6262: mov  [103 + rsp] 0x00
 6267: call e6a0 ; relative offset = 33844
 626c: mov  [RIP + 0x0001c235] rax
 6273: mov  [80 + rsp] rax
 6278: mov  r12 [72 + rsp]
 627d: movzx  rax [r12]
 6282: cmp  unknown 0x2a
 6284: jz 67bc ; relative offset = 1330
 628a: cmp  unknown 0x3a
 628c: jz 67ae ; relative offset = 1308
 6292: UNKNOWN-INSTRUCTION
 6293: ror  [rdi] 0x84
 6296: adc  unknown 0x01
 6298: UNKNOWN-INSTRUCTION
 629a: mov  [101 + rsp] al
 629e: movzx  rax [1 + r12]
 62a4: UNKNOWN-INSTRUCTION
 62a5: ror  [rdi] 0x84
 62a8: mov  spl 0x00
 62aa: UNKNOWN-INSTRUCTION
 62ac: mov  [102 + rsp] al
 62b0: lea  rax 
 62b5: mov  [72 + rsp] rax
 62ba: UNKNOWN-INSTRUCTION
 62bc: jnge 62e2 ; relative offset = 36
 62be: add  dil [RIP + 0x009a850f]
 62c4: UNKNOWN-INSTRUCTION
 62c6: xor  r13d r13d
 62c9: lea  rsi 
 62d0: lea  r12 
 62d5: jmp 62f4 ; relative offset = 29
 62d7: UNKNOWN-INSTRUCTION
 62d8: nop  [0x00000000 + rax + rax * 1]
 62e0: add  r13 0x01
 62e4: lea  rax 
 62eb: mov  rsi [rax + r13 * 8]
 62ef: UNKNOWN-INSTRUCTION
 62f1: div  [RBP + 76 + rdi * 1]
 62f5: mov  edi esp
 62f7: call 49f0 ; relative offset = -6412
 62fc: UNKNOWN-INSTRUCTION
 62fe: jnz 62e0 ; relative offset = -32
 6300: movsxd  rcx r13d
 6303: lea  rax 
 630a: xor  edx edx
 630c: mov  rsi rbp
 630f: sal  rcx 0x04
 6313: mov  rdi [24 + rsp]
 6318: add  rcx rax
 631b: mov  rax [80 + rsp]
 6320: mov  [rcx + 8] rax
 6324: call 6c70 ; relative offset = 2375
 6329: UNKNOWN-INSTRUCTION
 632a: ror  [rdi] 0x85
 632d: UNKNOWN-INSTRUCTION
 6330: dec  [231 + rcx + rcx * 4]
 6334: call 9bb0 ; relative offset = 14455
 6339: mov  edx 0x00000005
 633e: lea  rsi 
 6345: xor  edi edi
 6347: mov  r13 rax
 634a: call 4860 ; relative offset = -6895
 634f: mov  rcx r13
 6352: xor  esi esi
 6354: xor  edi edi
 6356: mov  rdx rax
 6359: xor  eax eax
 635b: call 4ba0 ; relative offset = -6080
 6360: mov  edx 0x00000005
 6365: lea  rsi 
 636c: xor  edi edi
 636e: call 4860 ; relative offset = -6931
 6373: xor  esi esi
 6375: xor  edi edi
 6377: mov  rdx rax
 637a: xor  eax eax
 637c: call 4ba0 ; relative offset = -6113
 6381: mov  rdi [RIP + 0x0001c120]
 6388: call 4680 ; relative offset = -7437
 638d: mov  rdi [RIP + 0x0001c10c]
 6394: jmp 63a2 ; relative offset = 12
 6396: mov  r12 [rdi + 32]
 639a: call 4680 ; relative offset = -7455
 639f: mov  rdi r12
 63a2: UNKNOWN-INSTRUCTION
 63a4: push  [rbp + 239]
 63a7: mov  [RIP + 0x0001bf5a] 0x00
 63ae: cmp  [RIP + 0x0001bd7a] 0x06
 63b6: jz 6906 ; relative offset = 1354
 63bc: UNKNOWN-INSTRUCTION
 63bf: ret 
 63c0: add  [rax] eax
 63c2: UNKNOWN-INSTRUCTION
 63c3: jnz 51c7 ; relative offset = -4610
 63c9: UNKNOWN-INSTRUCTION
 63cc: mov  edi 0x0f000001
 63d1: UNKNOWN-INSTRUCTION
 63d2: clc 
 63d3: in  eax dx
 63d4: UNKNOWN-INSTRUCTION
 63d6: mov  edi 0x0000000d
 63db: call c120 ; relative offset = 23872
 63e0: UNKNOWN-INSTRUCTION
 63e1: ror  [rdi] 0x85
 63e4: UNKNOWN-INSTRUCTION
 63e5: in  eax dx
 63e6: UNKNOWN-INSTRUCTION
 63e8: mov  edi 0x0000000e
 63ed: call c120 ; relative offset = 23854
 63f2: UNKNOWN-INSTRUCTION
 63f3: ror  [rdi] 0x85
 63f6: add  [rbx] 0x00
 63f9: UNKNOWN-INSTRUCTION
 63fa: mov  edi 0x0000000c
 63ff: call c120 ; relative offset = 23836
 6404: UNKNOWN-INSTRUCTION
 6405: ror  [rdi] 0x84
 6408: ret  0xffed
 640b: inc  [rbx + 0x01bef93d]
 6411: UNKNOWN-INSTRUCTION
 6413: jz 51c7 ; relative offset = -4690
 6419: jmp 51ce ; relative offset = -4688
 641e: lea  rsi 
 6425: lea  rdi 
 642c: call 72b0 ; relative offset = 3711
 6431: lea  rsi 
 6438: lea  rdi 
 643f: call 72b0 ; relative offset = 3692
 6444: mov  rax [RIP + 0x0001c175]
 644b: UNKNOWN-INSTRUCTION
 644d: ror  [rdi] 0x84
 6450: pop  edi
 6451: add  al [rax]
 6453: UNKNOWN-INSTRUCTION
 6454: mov  edx [rax]
 6456: lea  rax 
 645d: lea  rsi 
 6464: mov  edi 0x00000001
 6469: mov  rdx [rax + rdx * 8]
 646d: xor  eax eax
 646f: call 4b40 ; relative offset = -6452
 6474: jmp 5464 ; relative offset = -4117
 6479: lea  rax 
 6480: jmp 5153 ; relative offset = -4914
 6485: mov  edi 0x00000001
 648a: call 4780 ; relative offset = -7439
 648f: cmp  eax 0x01
 6492: sbb  eax eax
 6494: add  eax 0x02
 6497: mov  [RIP + 0x0001be6f] eax
 649d: jmp 59e1 ; relative offset = -2753
 64a2: mov  rdx rax
 64a5: and  eax 0x01
 64a8: UNKNOWN-INSTRUCTION
 64aa: out  dx eax
 64ab: in  unknown 0x48
 64ad: shr  edx 
 64af: or  rdx rax
 64b2: UNKNOWN-INSTRUCTION
 64b5: sub  spl dl
 64b7: UNKNOWN-INSTRUCTION
 64b9: pop  eax
 64ba: in  unknown 0xe9
 64bc: jna 64b6 ; relative offset = -8
 64be: UNKNOWN-INSTRUCTION
 64bf: dec  [rax + 137]
 64c2: ret  0xe083
 64c5: add  [rsi + 15] esp
 64c8: out  dx eax
 64c9: in  eax dx
 64ca: shr  rdx 
 64cd: or  rdx rax
 64d0: UNKNOWN-INSTRUCTION
 64d3: sub  bpl dl
 64d5: UNKNOWN-INSTRUCTION
 64d7: pop  eax
 64d8: in  eax dx
 64d9: jmp 5d20 ; relative offset = -1982
 64de: mov  [RIP + 0x0001bdc8] 0x01
 64e5: call de30 ; relative offset = 31046
 64ea: mov  [RIP + 0x0001c0cf] rax
 64f1: jmp 50db ; relative offset = -5147
 64f6: UNKNOWN-INSTRUCTION
 64f8: jnl 64fa ; relative offset = 0
 64fa: sub  ecx [108 + rcx + rcx * 4]
 64fe: and  unknown 0x10
 6500: jz 6889 ; relative offset = 899
 6506: lea  r12 
 650d: mov  rdi [16 + rsp]
 6512: lea  rdx 
 6519: mov  rsi r12
 651c: call 12e40 ; relative offset = 51487
 6521: UNKNOWN-INSTRUCTION
 6523: ror  [rdi] 0x88
 6526: UNKNOWN-INSTRUCTION
 6527: add  [rax] eax
 6529: UNKNOWN-INSTRUCTION
 652a: cmp  rax 0x02
 652e: jz 694c ; relative offset = 1048
 6534: jnle 664d ; relative offset = 275
 653a: UNKNOWN-INSTRUCTION
 653c: ror  [rdi] 0x84
 653f: out  dx eax
 6540: add  eax [rax]
 6542: UNKNOWN-INSTRUCTION
 6543: sub  rax 0x01
 6547: jnz 655e ; relative offset = 21
 6549: lea  rax 
 6550: mov  [RIP + 0x0001bcf1] rax
 6557: mov  [RIP + 0x0001bce2] rax
 655e: call 78a0 ; relative offset = 4925
 6563: jmp 51a4 ; relative offset = -5060
 6568: mov  [RIP + 0x0001bd9a] 0x00000002
 6572: mov  eax 0x00000001
 6577: mov  [RIP + 0x0001bd3f] 0x00000003
 6581: jmp 4e6b ; relative offset = -5915
 6586: lea  rcx 
 658d: mov  edx 0x000006eb
 6592: lea  rsi 
 6599: lea  rdi 
 65a0: call 4940 ; relative offset = -7269
 65a5: lea  rdi 
 65ac: call 46c0 ; relative offset = -7921
 65b1: UNKNOWN-INSTRUCTION
 65b4: jz 65bf ; relative offset = 9
 65b6: UNKNOWN-INSTRUCTION
 65b9: jnz 63bc ; relative offset = -515
 65bf: lea  rdi 
 65c6: call 46c0 ; relative offset = -7947
 65cb: UNKNOWN-INSTRUCTION
 65cd: ror  [rdi] 0x84
 65d0: jng 65d4 ; relative offset = 2
 65d2: UNKNOWN-INSTRUCTION
 65d7: jz 6852 ; relative offset = 629
 65dd: lea  r13 
 65e4: mov  [16 + rsp] rbx
 65e9: lea  r12 
 65f0: mov  rbx rax
 65f3: mov  r15 r13
 65f6: UNKNOWN-INSTRUCTION
 65f9: jmp 661a ; relative offset = 31
 65fb: mov  rdi rbp
 65fe: call 4880 ; relative offset = -7555
 6603: lea  rbp 
 6608: mov  rax rbp
 660b: sub  rax r13
 660e: UNKNOWN-INSTRUCTION
 6617: add  al [rax]
 6619: UNKNOWN-INSTRUCTION
 661a: mov  edx 0x00000005
 661f: mov  rsi r12
 6622: mov  rdi rbp
 6625: call 4720 ; relative offset = -7946
 662a: UNKNOWN-INSTRUCTION
 662c: jnz 65fb ; relative offset = -51
 662e: xor  edx edx
 6630: lea  rdi 
 6634: mov  rsi rbx
 6637: call 4950 ; relative offset = -7404
 663c: UNKNOWN-INSTRUCTION
 663e: jnz 65fb ; relative offset = -69
 6640: mov  rbx [16 + rsp]
 6645: mov  rbp r15
 6648: jmp 63bc ; relative offset = -657
 664d: cmp  rax 0x03
 6651: jnz 655e ; relative offset = -249
 6657: mov  edi 0x00000002
 665c: call c5f0 ; relative offset = 24463
 6661: UNKNOWN-INSTRUCTION
 6662: ror  [rdi] 0x84
 6665: UNKNOWN-INSTRUCTION
 6668: dec  [rax + 139]
 666b: xor  eax 0x0001bbd0
 6670: mov  edx 0x00000002
 6675: xor  edi edi
 6677: call 4860 ; relative offset = -7708
 667c: mov  rsi [RIP + 0x0001bbc5]
 6683: mov  edx 0x00000002
 6688: xor  edi edi
 668a: mov  [RIP + 0x0001bbaf] rax
 6691: call 4860 ; relative offset = -7734
 6696: mov  [RIP + 0x0001bbab] rax
 669d: jmp 655e ; relative offset = -324
 66a2: mov  esi 0x00000001
 66a7: xor  edi edi
 66a9: call e760 ; relative offset = 32946
 66ae: jmp 6022 ; relative offset = -1681
 66b3: lea  rax 
 66ba: jmp 6454 ; relative offset = -619
 66bf: mov  rsi [16 + rsp]
 66c4: mov  rdx rax
 66c7: lea  rdi 
 66ce: call 9f10 ; relative offset = 14397
 66d3: mov  rbx [RIP + 0x0001b916]
 66da: mov  edx 0x00000005
 66df: xor  edi edi
 66e1: lea  rsi 
 66e8: mov  rbp [rbx]
 66eb: call 4860 ; relative offset = -7824
 66f0: mov  rdi rax
 66f3: mov  rsi rbp
 66f6: lea  rbp 
 66fd: call 49d0 ; relative offset = -7474
 6702: lea  rcx 
 6709: mov  rdi [rbx]
 670c: add  r12 0x08
 6710: mov  rdx rbp
 6713: mov  esi 0x00000001
 6718: xor  eax eax
 671a: call 4c50 ; relative offset = -6863
 671f: mov  rcx [r12]
 6723: UNKNOWN-INSTRUCTION
 6725: leave 
 6726: jnz 6709 ; relative offset = -31
 6728: mov  rbp [rbx]
 672b: lea  rsi 
 6732: xor  edi edi
 6734: mov  edx 0x00000005
 6739: call 4860 ; relative offset = -7902
 673e: mov  rdi rax
 6741: mov  rsi rbp
 6744: call 49d0 ; relative offset = -7545
 6749: mov  edi 0x00000002
 674e: call 9230 ; relative offset = 10973
 6753: xor  edi edi
 6755: call 9230 ; relative offset = 10966
 675a: cmp  [RIP + 0x0001b96e] 0x01
 6762: jnz 5ec9 ; relative offset = -2207
 6768: mov  rax [RIP + 0x0001b969]
 676f: UNKNOWN-INSTRUCTION
 6771: insw 
 6772: jnz 5ec9 ; relative offset = -2223
 6778: jmp 5ee1 ; relative offset = -2204
 677d: UNKNOWN-INSTRUCTION
 6780: mov  edi 0x0f000001
 6785: UNKNOWN-INSTRUCTION
 6789: jmp  rcx
 678b: imul  edi esp 0xff
 678e: push  ebx
 6790: UNKNOWN-INSTRUCTION
 6791: pop  esp
 6792: and  eax 0x00015d55
 6797: UNKNOWN-INSTRUCTION
 679a: sub  unknown 0xf4
 679c: xor  rsi r13
 679f: jmp 5d89 ; relative offset = -2587
 67a4: UNKNOWN-INSTRUCTION
 67a6: pop  ecx
 67a7: UNKNOWN-INSTRUCTION
 67a9: jmp 5d77 ; relative offset = -2615
 67ae: add  r12 0x01
 67b2: mov  [72 + rsp] r12
 67b7: jmp 6278 ; relative offset = -1348
 67bc: mov  edi 0x00000028
 67c1: add  r12 0x01
 67c5: call de10 ; relative offset = 30278
 67ca: mov  rdi [24 + rsp]
 67cf: mov  edx 0x00000001
 67d4: mov  rsi rbp
 67d7: mov  r13 rax
 67da: mov  rax [RIP + 0x0001bcbf]
 67e1: mov  [72 + rsp] r12
 67e6: mov  rcx r13
 67e9: mov  [RIP + 0x0001bcb0] r13
 67f0: mov  [r13 + 32] rax
 67f4: mov  rax [80 + rsp]
 67f9: mov  [r13 + 8] rax
 67fd: call 6c70 ; relative offset = 1134
 6802: UNKNOWN-INSTRUCTION
 6803: ror  [rdi] 0x84
 6806: push  esi
 6807: UNKNOWN-INSTRUCTION
 6809: dec  [rax + 139]
 680c: and  unknown 0x48
 680f: lea  rdx 
 6813: mov  [72 + rsp] rdx
 6818: UNKNOWN-INSTRUCTION
 681b: jnz 6360 ; relative offset = -1217
 6821: mov  rax [80 + rsp]
 6826: mov  rdi [24 + rsp]
 682b: xor  edx edx
 682d: lea  rcx 
 6831: mov  rsi rbp
 6834: mov  [r13 + 24] rax
 6838: call 6c70 ; relative offset = 1075
 683d: UNKNOWN-INSTRUCTION
 683e: ror  [rdi] 0x85
 6841: xor  edi edx
 6843: UNKNOWN-INSTRUCTION
 6844: jmp  rcx
 6846: UNKNOWN-INSTRUCTION
 6849: dec  [rax + 139]
 684c: pop  esp
 684d: and  unknown 0x10
 684f: mov  rbp r15
 6852: mov  [RIP + 0x0001baaf] 0x00
 6859: jmp 63bc ; relative offset = -1186
 685e: lea  rdi 
 6865: call 46c0 ; relative offset = -8618
 686a: mov  [16 + rsp] rax
 686f: UNKNOWN-INSTRUCTION
 6871: ror  [rdi] 0x85
 6874: UNKNOWN-INSTRUCTION
 6877: dec  [rax + 141]
 687a: add  eax 0x00013405
 687f: mov  [16 + rsp] rax
 6884: jmp 6506 ; relative offset = -899
 6889: add  r13 0x01
 688d: mov  esi 0x0000000a
 6892: mov  rdi r13
 6895: call 48d0 ; relative offset = -8138
 689a: mov  r12 rax
 689d: UNKNOWN-INSTRUCTION
 689f: ror  [rdi] 0x84
 68a2: mov  [rax] 0x8d4c0000
 68a8: js 68ab ; relative offset = 1
 68aa: mov  esi 0x0000000a
 68af: mov  rdi r15
 68b2: call 48d0 ; relative offset = -8167
 68b7: UNKNOWN-INSTRUCTION
 68b9: ror  [rdi] 0x85
 68bc: UNKNOWN-INSTRUCTION
 68c0: mov  [r12] 0x00
 68c5: mov  [RIP + 0x0001b974] r13
 68cc: mov  [RIP + 0x0001b975] r15
 68d3: jmp 655e ; relative offset = -890
 68d8: mov  rdi r15
 68db: call 4b10 ; relative offset = -7632
 68e0: UNKNOWN-INSTRUCTION
 68e2: ror  [69 + rdi + rcx * 1] 0xf8
 68e7: jmp 618c ; relative offset = -1888
 68ec: lea  rdi 
 68f3: call 46c0 ; relative offset = -8760
 68f8: UNKNOWN-INSTRUCTION
 68fa: ror  [rdi] 0x85
 68fd: insw 
 68fe: UNKNOWN-INSTRUCTION
 6900: jmp  rcx
 6902: UNKNOWN-INSTRUCTION
 6905: dec  [rax + 139]
 6908: UNKNOWN-INSTRUCTION
 6909: sub  edi [rax + 0x06ba0001]
 690f: UNKNOWN-INSTRUCTION
 6912: lea  rsi 
 6919: call 4720 ; relative offset = -8702
 691e: UNKNOWN-INSTRUCTION
 691f: ror  [rdi] 0x85
 6922: UNKNOWN-INSTRUCTION
 6925: inc  esi
 6927: add  eax 0x0001be1b
 692c: add  ecx ebp
 692e: mov  dil dl
 6930: UNKNOWN-INSTRUCTION
 6931: dec  [rax + 141]
 6934: add  eax 0x00013482
 6939: mov  [RIP + 0x0001b908] rax
 6940: mov  [RIP + 0x0001b8f9] rax
 6947: jmp 655e ; relative offset = -1006
 694c: lea  rax 
 6953: mov  [RIP + 0x0001b8e6] rax
 695a: lea  rax 
 6961: mov  [RIP + 0x0001b8e0] rax
 6968: jmp 655e ; relative offset = -1039
 696d: mov  r15 r13
 6970: jmp 68c5 ; relative offset = -176
 6975: mov  esi 0x0000000a
 697a: call 4900 ; relative offset = -8319
 697f: jmp 6066 ; relative offset = -2334
 6984: mov  rdi r13
 6987: call 9bb0 ; relative offset = 12836
 698c: mov  edx 0x00000005
 6991: lea  rsi 
 6998: xor  edi edi
 699a: mov  r12 rax
 699d: call 4860 ; relative offset = -8514
 69a2: mov  rcx r12
 69a5: xor  esi esi
 69a7: mov  edi 0x00000002
 69ac: mov  rdx rax
 69af: xor  eax eax
 69b1: call 4ba0 ; relative offset = -7702
 69b6: lea  rcx 
 69bd: mov  edx 0x0000071f
 69c2: lea  rsi 
 69c9: lea  rdi 
 69d0: call 4940 ; relative offset = -8341
 69d5: lea  rcx 
 69dc: mov  edx 0x0000040b
 69e1: lea  rsi 
 69e8: lea  rdi 
 69ef: call 4940 ; relative offset = -8372
 69f4: mov  rax [RIP + 0x0001b5f5]
 69fb: mov  edx 0x00000037
 6a00: mov  esi 0x00000001
 6a05: lea  rdi 
 6a0c: mov  rcx [rax]
 6a0f: call 4c40 ; relative offset = -7636
 6a14: call 4700 ; relative offset = -8985
 6a19: mov  rbx [RIP + 0x0001b598]
 6a20: mov  edx [72 + rsp]
 6a24: mov  ebp [RIP + 0x0001b656]
 6a2a: mov  rbx [rbx]
 6a2d: cmp  eax 0x03
 6a30: jnbe  0x70
 6a32: sub  eax 0x01
 6a35: lea  rsi 
 6a3c: lea  rax 
 6a43: UNKNOWN-INSTRUCTION
 6a46: LOCK movsxd  rax edx
 6a4a: UNKNOWN-INSTRUCTION
 6a4b: sar  [rax + 60] cl
 6a4e: sal  rax 0x05
 6a52: mov  r13 [r12 + rax * 1]
 6a56: lea  r12 
 6a5d: mov  edx 0x00000005
 6a62: xor  edi edi
 6a64: call 4860 ; relative offset = -8713
 6a69: mov  r9 rbx
 6a6c: mov  r8 r13
 6a6f: mov  rcx r12
 6a72: mov  rdx rax
 6a75: xor  esi esi
 6a77: mov  edi ebp
 6a79: xor  eax eax
 6a7b: call 4ba0 ; relative offset = -7904
 6a80: call 4700 ; relative offset = -9093
 6a85: call 4890 ; relative offset = -8698
 6a8a: lea  r12 
 6a91: mov  [101 + rsp] 0x0000
 6a98: lea  r13 
 6a9d: sub  r12 rax
 6aa0: jmp 6a5d ; relative offset = -69
 6aa2: lea  rsi 
 6aa9: cmp  eax 0x04
 6aac: jz 6a47 ; relative offset = -103
 6aae: jmp 6a80 ; relative offset = -48
 6ab0: UNKNOWN-INSTRUCTION
 6ab4: xor  ebp ebp
 6ab6: mov  r9 rdx
 6ab9: pop  esi
 6aba: mov  rdx rsp
 6abd: and  rsp 0xf0
 6ac1: push  eax
 6ac2: push  esp
 6ac3: xor  r8d r8d
 6ac6: xor  ecx ecx
 6ac8: lea  rdi 
 6acf: call  rdx
 6ad0: adc  eax 0x0001b4c3
 6ad5: UNKNOWN-INSTRUCTION
 6ad8: nop  [0x00000000 + rax + rax * 1]
 6ae0: lea  rdi 
 6ae7: lea  rax 
 6aee: UNKNOWN-INSTRUCTION
 6af0: clc 
 6af1: jz 6b08 ; relative offset = 21
 6af3: mov  rax [RIP + 0x0001b4a6]
 6afa: UNKNOWN-INSTRUCTION
 6afd: jz 6b08 ; relative offset = 9
 6aff: jmp  rax
 6b01: nop  [rax + 0x00000000]
 6b08: ret 
 6b09: nop  [rax + 0x00000000]
 6b10: lea  rdi 
 6b17: lea  rsi 
 6b1e: sub  rsi rdi
 6b21: mov  rax rsi
 6b24: shr  rsi 0x3f
 6b28: sar  rax 0x03
 6b2c: add  rsi rax
 6b2f: sar  rsi 
 6b32: jz 6b48 ; relative offset = 20
 6b34: mov  rax [RIP + 0x0001b49d]
 6b3b: UNKNOWN-INSTRUCTION
 6b3e: jz 6b48 ; relative offset = 8
 6b40: jmp  rax
 6b42: UNKNOWN-INSTRUCTION
 6b43: nop  [0 + rax + rax * 1]
 6b48: ret 
 6b49: nop  [rax + 0x00000000]
 6b50: UNKNOWN-INSTRUCTION
 6b56: and  eax 0x000001b7
 6b5b: jnz 6bd8 ; relative offset = 123
 6b5d: push  ebp
 6b5e: cmp  [RIP + 0x0001b482] 0x00
 6b66: mov  rbp rsp
 6b69: push  esp
 6b6b: push  ebx
 6b6c: jz 6b7a ; relative offset = 12
 6b6e: mov  rdi [RIP + 0x0001b493]
 6b75: call 46a0 ; relative offset = -9434
 6b7a: lea  rax 
 6b81: lea  rbx 
 6b88: sub  rbx rax
 6b8b: mov  r12 rax
 6b8e: mov  rax [RIP + 0x0001b6f3]
 6b95: sar  rbx 0x03
 6b99: sub  rbx 0x01
 6b9d: UNKNOWN-INSTRUCTION
 6ba0: jnb 6bc3 ; relative offset = 33
 6ba2: UNKNOWN-INSTRUCTION
 6ba3: nop  [0 + rax + rax * 1]
 6ba8: add  rax 0x01
 6bac: mov  [RIP + 0x0001b6d5] rax
 6bb3: call  rdx
 6bb5: adc  unknown 0xc4
 6bb7: mov  rax [RIP + 0x0001b6ca]
 6bbe: UNKNOWN-INSTRUCTION
 6bc1: jnae 6ba8 ; relative offset = -27
 6bc3: call 6ae0 ; relative offset = -232
 6bc8: pop  ebx
 6bc9: pop  esp
 6bcb: mov  [RIP + 0x0001b6ae] 0x01
 6bd2: pop  ebp
 6bd3: ret 
 6bd4: nop  [rax + 0]
 6bd8: ret 
 6bd9: nop  [rax + 0x00000000]
 6be0: UNKNOWN-INSTRUCTION
 6be4: jmp 6b10 ; relative offset = -217
 6be9: nop  [rax + 0x00000000]
 6bf0: UNKNOWN-INSTRUCTION
 6bf4: mov  rax [rdi]
 6bf7: xor  edx edx
 6bf9: div  rsi
 6bfc: mov  rax rdx
 6bff: ret 
 6c00: UNKNOWN-INSTRUCTION
 6c04: mov  rdx [rsi]
 6c07: xor  eax eax
 6c09: UNKNOWN-INSTRUCTION
 6c0c: jz 6c10 ; relative offset = 2
 6c0e: ret 
 6c0f: nop 
 6c10: mov  rax [rsi + 8]
 6c14: UNKNOWN-INSTRUCTION
 6c1a: rol  bpl 0x0f
 6c1d: UNKNOWN-INSTRUCTION
 6c24: mov  eax [RIP + 0x0001bbde]
 6c2a: UNKNOWN-INSTRUCTION
 6c2c: jnz 6c34 ; relative offset = 6
 6c2e: mov  [RIP + 0x0001bbd4] edi
 6c34: ret 
 6c35: UNKNOWN-INSTRUCTION
 6c38: nop  [0x00000000 + rax + rax * 1]
 6c40: UNKNOWN-INSTRUCTION
 6c44: mov  eax [RIP + 0x0001bbbe]
 6c4a: UNKNOWN-INSTRUCTION
 6c4c: jnz 6c5d ; relative offset = 15
 6c4e: mov  eax [RIP + 0x0001bbb0]
 6c54: add  eax 0x01
 6c57: mov  [RIP + 0x0001bba7] eax
 6c5d: ret 
 6c5e: UNKNOWN-INSTRUCTION
 6c5f: nop 
 6c60: UNKNOWN-INSTRUCTION
 6c64: jmp 4680 ; relative offset = -9705
 6c69: nop  [rax + 0x00000000]
 6c70: push  ebp
 6c72: mov  eax edx
 6c74: mov  r11 rdi
 6c77: mov  r10 rsi
 6c7a: push  esp
 6c7c: mov  r12d edx
 6c7f: push  ebp
 6c80: mov  rbp rcx
 6c83: push  ebx
 6c84: mov  rcx [rsi]
 6c87: mov  rbx [rdi]
 6c8a: mov  edi 0x00000001
 6c8f: movzx  edx [rcx]
 6c92: lea  r8 
 6c96: lea  rsi 
 6c9a: lea  rbx 
 6ca1: lea  r9 
 6ca5: UNKNOWN-INSTRUCTION
 6ca7: pop  esp
 6ca8: jz 6cd6 ; relative offset = 44
 6caa: jnle 6d20 ; relative offset = 116
 6cac: UNKNOWN-INSTRUCTION
 6caf: jz 6d78 ; relative offset = 195
 6cb5: jng 6d00 ; relative offset = 73
 6cb7: add  rcx 0x01
 6cbb: mov  [rsi + 255] dl
 6cbe: add  rdi 0x01
 6cc2: add  rsi 0x01
 6cc6: movzx  edx [rcx]
 6cc9: lea  r9 
 6ccd: lea  r8 
 6cd1: UNKNOWN-INSTRUCTION
 6cd3: pop  esp
 6cd4: jnz 6caa ; relative offset = -44
 6cd6: movzx  edx [rcx + 1]
 6cda: lea  r13 
 6cde: UNKNOWN-INSTRUCTION
 6cdf: ror  [rdi] cl
 6ce1: UNKNOWN-INSTRUCTION
 6ce2: rol  [rcx] cl
 6ce4: UNKNOWN-INSTRUCTION
 6ce6: lea  r9d 
 6cea: UNKNOWN-INSTRUCTION
 6cec: stc 
 6ced: UNKNOWN-INSTRUCTION
 6cee: jnbe  0x60
 6cf0: movzx  r8 r9b
 6cf4: movsxd  r8 [rbx + r8 * 4]
 6cf8: add  r8 rbx
 6cfb: UNKNOWN-INSTRUCTION
 6cfc: jmp  r8
 6cff: nop 
 6d00: UNKNOWN-INSTRUCTION
 6d02: jz 6d09 ; relative offset = 5
 6d04: UNKNOWN-INSTRUCTION
 6d07: jnz 6cb7 ; relative offset = -82
 6d09: mov  eax 0x00000001
 6d0e: pop  ebx
 6d0f: mov  [r11] r9
 6d12: mov  [r10] rcx
 6d15: mov  [rbp + 0] r8
 6d19: pop  ebp
 6d1a: pop  esp
 6d1c: pop  ebp
 6d1e: ret 
 6d1f: nop 
 6d20: UNKNOWN-INSTRUCTION
 6d22: pop  esi
 6d23: jnz 6cb7 ; relative offset = -110
 6d25: movzx  edx [rcx + 1]
 6d29: lea  r13d 
 6d2d: UNKNOWN-INSTRUCTION
 6d31: jnbe  0x35
 6d33: and  edx 0x1f
 6d36: add  rcx 0x02
 6d3a: add  rdi 0x01
 6d3e: add  rsi 0x01
 6d42: mov  [rsi + 254] dl
 6d45: jmp 6cc6 ; relative offset = -132
 6d4a: mov  edx 0x0000007f
 6d4f: nop 
 6d50: mov  rcx r13
 6d53: mov  [rsi + 255] dl
 6d56: add  rdi 0x01
 6d5a: add  rsi 0x01
 6d5e: jmp 6cc6 ; relative offset = -157
 6d63: nop  [0 + rax + rax * 1]
 6d68: add  rcx 0x01
 6d6c: UNKNOWN-INSTRUCTION
 6d6f: jz 6d88 ; relative offset = 23
 6d71: xor  eax eax
 6d73: jmp 6d0e ; relative offset = -103
 6d75: nop  [rax]
 6d78: UNKNOWN-INSTRUCTION
 6d7a: in  unknown 0x75
 6d7c: UNKNOWN-INSTRUCTION
 6d7d: jmp 6cb7 ; relative offset = -203
 6d82: UNKNOWN-INSTRUCTION
 6d83: nop  [0 + rax + rax * 1]
 6d88: mov  edx 0x0000007f
 6d8d: add  rdi 0x01
 6d91: add  rsi 0x01
 6d95: mov  [rsi + 254] dl
 6d98: jmp 6cc6 ; relative offset = -215
 6d9d: nop  [rax]
 6da0: mov  rcx r13
 6da3: mov  edx r9d
 6da6: movzx  r8 [rcx]
 6daa: lea  r9d 
 6dae: UNKNOWN-INSTRUCTION
 6db0: stc 
 6db1: UNKNOWN-INSTRUCTION
 6db4: add  edi edi
 6db6: UNKNOWN-INSTRUCTION
 6db7: dec  [rdi]
 6db9: UNKNOWN-INSTRUCTION
 6dc0: add  rcx 0x01
 6dc4: lea  edx 
 6dc9: movzx  r8 [rcx]
 6dcd: lea  r9d 
 6dd1: UNKNOWN-INSTRUCTION
 6dd3: stc 
 6dd4: UNKNOWN-INSTRUCTION
 6dd5: jna 6dc0 ; relative offset = -23
 6dd7: mov  [rsi + 255] dl
 6dda: add  rdi 0x01
 6dde: add  rsi 0x01
 6de2: jmp 6cc6 ; relative offset = -289
 6de7: movzx  r8 [rcx + 2]
 6dec: lea  r9 
 6df0: xor  edx edx
 6df2: lea  rcx 
 6df6: UNKNOWN-INSTRUCTION
 6df8: clc 
 6df9: jnle 6e32 ; relative offset = 54
 6dfc: nop  [rax + 0]
 6e00: UNKNOWN-INSTRUCTION
 6e02: clc 
 6e03: jnle 6ea8 ; relative offset = 158
 6e0a: lea  r13d 
 6e0e: UNKNOWN-INSTRUCTION
 6e11: or  [rdi] ecx
 6e13: UNKNOWN-INSTRUCTION
 6e17: inc  ecx
 6e19: loop 6e1f ; relative offset = 4
 6e1b: lea  edx 
 6e20: movzx  r8 [r9]
 6e24: add  r9 0x01
 6e28: lea  rcx 
 6e2c: UNKNOWN-INSTRUCTION
 6e2e: clc 
 6e2f: jng 6e00 ; relative offset = -50
 6e32: lea  r13d 
 6e36: UNKNOWN-INSTRUCTION
 6e39: add  eax 0xfe7b870f
 6e3e: UNKNOWN-INSTRUCTION
 6e3f: inc  ecx
 6e41: loop 6e47 ; relative offset = 4
 6e43: lea  edx 
 6e48: jmp 6e20 ; relative offset = -42
 6e4a: mov  edx 0x00000009
 6e4f: mov  rcx r13
 6e52: jmp 6d53 ; relative offset = -260
 6e57: mov  edx 0x0000000b
 6e5c: mov  rcx r13
 6e5f: jmp 6d53 ; relative offset = -273
 6e64: mov  edx 0x0000001b
 6e69: mov  rcx r13
 6e6c: jmp 6d53 ; relative offset = -286
 6e71: mov  edx 0x0000000c
 6e76: mov  rcx r13
 6e79: jmp 6d53 ; relative offset = -299
 6e7e: mov  edx 0x0000000a
 6e83: mov  rcx r13
 6e86: jmp 6d53 ; relative offset = -312
 6e8b: mov  edx 0x00000020
 6e90: mov  rcx r13
 6e93: jmp 6d53 ; relative offset = -325
 6e98: mov  edx 0x0000000d
 6e9d: mov  rcx r13
 6ea0: jmp 6d53 ; relative offset = -338
 6ea5: nop  [rax]
 6ea8: sal  edx 0x04
 6eab: lea  edx 
 6eb0: jmp 6e20 ; relative offset = -149
 6eb5: nop  [rax]
 6eb8: mov  rcx r13
 6ebb: xor  eax eax
 6ebd: jmp 6d0e ; relative offset = -436
 6ec2: mov  edx 0x00000007
 6ec7: jmp 6d50 ; relative offset = -380
 6ecc: mov  edx 0x00000008
 6ed1: jmp 6d50 ; relative offset = -390
 6ed6: UNKNOWN-INSTRUCTION
 6ed8: nop  [0x00000000 + rax + rax * 1]
 6ee0: mov  rdx [rdi]
 6ee3: movzx  eax [rdx]
 6ee6: UNKNOWN-INSTRUCTION
 6ee7: ror  [rdi] 0x84
 6eea: UNKNOWN-INSTRUCTION
 6eee: xor  ecx ecx
 6ef0: xor  r8d r8d
 6ef3: xor  esi esi
 6ef5: jmp 6f1a ; relative offset = 35
 6ef7: UNKNOWN-INSTRUCTION
 6ef8: nop  [0x00000000 + rax + rax * 1]
 6f00: cmp  unknown 0x5a
 6f02: jnle 6f48 ; relative offset = 68
 6f04: xor  ecx ecx
 6f06: cmp  unknown 0x41
 6f08: UNKNOWN-INSTRUCTION
 6f0c: add  rdx 0x01
 6f10: mov  [rdi] rdx
 6f13: movzx  eax [rdx]
 6f16: UNKNOWN-INSTRUCTION
 6f18: jz 6f41 ; relative offset = 39
 6f1a: UNKNOWN-INSTRUCTION
 6f1b: leave 
 6f1c: jnz 6f00 ; relative offset = -30
 6f1e: cmp  unknown 0x2e
 6f20: jz 6f70 ; relative offset = 78
 6f22: cmp  unknown 0x5a
 6f24: jnle 6f60 ; relative offset = 58
 6f26: cmp  unknown 0x40
 6f28: jnle 6f0c ; relative offset = -30
 6f2a: sub  eax 0x30
 6f2d: cmp  unknown 0x0a
 6f2f: UNKNOWN-INSTRUCTION
 6f33: add  rdx 0x01
 6f37: mov  [rdi] rdx
 6f3a: movzx  eax [rdx]
 6f3d: UNKNOWN-INSTRUCTION
 6f3f: jnz 6f1a ; relative offset = -39
 6f41: mov  rax r8
 6f44: ret 
 6f45: nop  [rax]
 6f48: lea  r9d 
 6f4c: xor  ecx ecx
 6f4e: UNKNOWN-INSTRUCTION
 6f50: stc 
 6f51: sbb  [rsi + 184] esi
 6f54: cmp  unknown 0x7e
 6f56: UNKNOWN-INSTRUCTION
 6f5a: jmp 6f0c ; relative offset = -80
 6f5c: nop  [rax + 0]
 6f60: lea  r9d 
 6f64: UNKNOWN-INSTRUCTION
 6f66: stc 
 6f67: sbb  [rdi + 234] esi
 6f6a: jmp 6f0c ; relative offset = -96
 6f6c: nop  [rax + 0]
 6f70: UNKNOWN-INSTRUCTION
 6f72: sar  [rcx + 0x00000001] 0x4c
 6f79: UNKNOWN-INSTRUCTION
 6f7a: ret  0x8eeb
 6f7e: UNKNOWN-INSTRUCTION
 6f7f: nop 
 6f80: xor  r8d r8d
 6f83: mov  rax r8
 6f86: ret 
 6f87: UNKNOWN-INSTRUCTION
 6f88: nop  [0x00000000 + rax + rax * 1]
 6f90: UNKNOWN-INSTRUCTION
 6f94: mov  rax rdi
 6f97: xor  edx edx
 6f99: ror  rax 0x03
 6f9d: div  rsi
 6fa0: mov  rax rdx
 6fa3: ret 
 6fa4: UNKNOWN-INSTRUCTION
 6fa7: nop  [0x00000000 + rax + rax * 1]
 6faf: nop 
 6fb0: UNKNOWN-INSTRUCTION
 6fb6: dec  [rdi]
 6fb8: UNKNOWN-INSTRUCTION
 6fb9: rol  bpl 0x0f
 6fbc: UNKNOWN-INSTRUCTION
 6fc4: mov  rcx [rdi]
 6fc7: movsx  rdx [rcx]
 6fcb: UNKNOWN-INSTRUCTION
 6fcd: jz 7000 ; relative offset = 49
 6fcf: xor  eax eax
 6fd1: nop  [rax + 0x00000000]
 6fd8: rol  rax 0x09
 6fdc: add  rcx 0x01
 6fe0: add  rax rdx
 6fe3: movsx  rdx [rcx]
 6fe7: UNKNOWN-INSTRUCTION
 6fe9: jnz 6fd8 ; relative offset = -19
 6feb: xor  edx edx
 6fed: div  rsi
 6ff0: mov  rax [rdi + 8]
 6ff4: xor  rax rdx
 6ff7: xor  edx edx
 6ff9: div  rsi
 6ffc: mov  rax rdx
 6fff: ret 
 7000: mov  rax [rdi + 8]
 7004: xor  edx edx
 7006: xor  rax rdx
 7009: xor  edx edx
 700b: div  rsi
 700e: mov  rax rdx
 7011: ret 
 7012: UNKNOWN-INSTRUCTION
 7015: nop  [0x00000000 + rax + rax * 1]
 701d: nop  [rax]
 7020: UNKNOWN-INSTRUCTION
 7024: push  ebp
 7025: mov  rbp rdi
 7028: mov  rdi [rdi]
 702b: call 4680 ; relative offset = -10672
 7030: mov  rdi rbp
 7033: pop  ebp
 7034: jmp 4680 ; relative offset = -10681
 7039: nop  [rax + 0x00000000]
 7040: mov  rax rdi
 7043: mov  rdi rsi
 7046: movsx  esi dl
 7049: sub  esi 0x41
 704c: movzx  r8 [rax + 7]
 7051: cmp  esi 0x19
 7054: UNKNOWN-INSTRUCTION
 7056: mov  sil 0x00
 7058: UNKNOWN-INSTRUCTION
 705a: and  r8d 0xdf
 705e: UNKNOWN-INSTRUCTION
 7060: rol  [rax + 15] 
 7063: UNKNOWN-INSTRUCTION
 7064: mov  [rax + 132] 0xf6
 7068: jz 7078 ; relative offset = 14
 706a: mov  eax 0x00000001
 7070: UNKNOWN-INSTRUCTION
 7072: jnz 7080 ; relative offset = 12
 7074: mov  eax r8d
 7077: ret 
 7078: xor  r8d r8d
 707b: mov  eax r8d
 707e: ret 
 707f: nop 
 7080: movsx  edx cl
 7083: movzx  esi [rax + 8]
 7087: sub  edx 0x41
 708a: cmp  edx 0x19
 708d: UNKNOWN-INSTRUCTION
 708f: lea  eax 
 7091: UNKNOWN-INSTRUCTION
 7093: and  esi 0xdf
 7096: UNKNOWN-INSTRUCTION
 709b: ret  0xd284
 709e: jz 7078 ; relative offset = -40
 70a0: mov  eax 0x00000001
 70a6: UNKNOWN-INSTRUCTION
 70a7: leave 
 70a8: jz 7074 ; relative offset = -54
 70aa: UNKNOWN-INSTRUCTION
 70ac: clc 
 70ad: jz 7074 ; relative offset = -59
 70af: mov  ecx 0x00000009
 70b4: jmp 70c9 ; relative offset = 19
 70b6: UNKNOWN-INSTRUCTION
 70b8: nop  [0x00000000 + rax + rax * 1]
 70c0: add  rcx 0x01
 70c4: UNKNOWN-INSTRUCTION
 70c6: jnz 70fe ; relative offset = 53
 70c9: movzx  r9 [rax + rcx * 1]
 70ce: lea  esi 
 70d2: mov  edx r9d
 70d5: cmp  esi 0x19
 70d8: jnbe  0x07
 70da: add  r9d 0x20
 70de: add  edx 0x20
 70e1: movzx  r8 [rdi + rcx * 1]
 70e6: lea  r10d 
 70ea: mov  esi r8d
 70ed: cmp  r10d 0x19
 70f1: jnbe  0x07
 70f3: add  r8d 0x20
 70f7: add  esi 0x20
 70fa: UNKNOWN-INSTRUCTION
 70fc: jnz 70c0 ; relative offset = -62
 70fe: UNKNOWN-INSTRUCTION
 7100: rol  [rcx + 15] 0x94
 7104: rol  [rbp + 15] 0xb6
 7108: shr  cl 0x66
 710b: UNKNOWN-INSTRUCTION
 710d: jmp  [rsi + 144]
 7110: UNKNOWN-INSTRUCTION
 7112: ret  0x0f40
 7115: UNKNOWN-INSTRUCTION
 7117: jmp 7065 ; relative offset = -183
 711c: nop  [rax + 0]
 7120: UNKNOWN-INSTRUCTION
 7125: ret  0x71e9
 7128: UNKNOWN-INSTRUCTION
 712a: dec  [rdi]
 712c: UNKNOWN-INSTRUCTION
 7130: push  esp
 7132: push  ebp
 7133: push  ebx
 7134: mov  rbx rdi
 7137: UNKNOWN-INSTRUCTION
 713a: jz 71a8 ; relative offset = 108
 713c: mov  rbp rdx
 713f: lea  r12 
 7143: mov  eax 0x00000fe0
 7148: UNKNOWN-INSTRUCTION
 714b: mov  [rbx + 48] r12
 714f: UNKNOWN-INSTRUCTION
 7152: LOCK mov  rax [rbx + 56]
 7157: mov  [rbx] rsi
 715a: test  [rbx + 80] 0x01
 715e: jz 71b8 ; relative offset = 88
 7160: mov  rdi [rbx + 72]
 7164: call  rdx
 7165: ror  [rax + 137] 
 7168: UNKNOWN-INSTRUCTION
 716d: jz 71bf ; relative offset = 80
 716f: lea  rdx 
 7174: neg  rbp
 7177: and  rdx rbp
 717a: mov  [rbx + 16] rdx
 717e: mov  [rbx + 24] rdx
 7182: mov  rdx [rbx]
 7185: add  rdx rax
 7188: mov  [rax] rdx
 718b: mov  [rbx + 32] rdx
 718f: mov  [rax + 8] 0x00000000
 7197: mov  eax 0x00000001
 719c: UNKNOWN-INSTRUCTION
 719e: push  eax
 719f: stc 
 71a0: pop  ebx
 71a1: pop  ebp
 71a2: pop  esp
 71a4: ret 
 71a5: nop  [rax]
 71a8: mov  esp 0x0000000f
 71ae: mov  ebp 0x00000010
 71b3: jmp 7143 ; relative offset = -114
 71b5: nop  [rax]
 71b8: mov  rdi rsi
 71bb: call  rdx
 71bc: shr  bpl 
 71be: cmpsw 
 71bf: lea  rax 
 71c6: call  rdx
 71c7: UNKNOWN-INSTRUCTION
 71c8: nop  [0x00000000 + rax + rax * 1]
 71d0: UNKNOWN-INSTRUCTION
 71d3: jnb 72a0 ; relative offset = 199
 71d9: push  ebp
 71db: push  esp
 71dd: mov  r12 rsi
 71e0: push  ebp
 71e1: push  ebx
 71e2: mov  rbx rdi
 71e5: sub  rsp 0x08
 71e9: mov  r13 [RIP + 0x0001adb8]
 71f0: jmp 7236 ; relative offset = 68
 71f2: UNKNOWN-INSTRUCTION
 71f3: nop  [0 + rax + rax * 1]
 71f8: mov  rax r12
 71fb: xor  edx edx
 71fd: div  rcx
 7200: xor  edx edx
 7202: mov  r9 rax
 7205: mov  rax rbp
 7208: div  rcx
 720b: UNKNOWN-INSTRUCTION
 720e: jna 7252 ; relative offset = 66
 7210: UNKNOWN-INSTRUCTION
 7213: jnb 7288 ; relative offset = 115
 7215: lea  rax 
 7219: mov  [rdi + 40] rax
 721d: mov  [rsi] 0x09
 7220: mov  rax rbx
 7223: xor  edx edx
 7225: div  rcx
 7228: add  rcx rbx
 722b: mov  rbx rcx
 722e: sub  rbx rdx
 7231: UNKNOWN-INSTRUCTION
 7233: jecxz  0x73
 7235: xor  unknown 0x49
 7237: mov  edi [rbp + 0]
 723a: mov  rcx [RIP + 0x0001b237]
 7241: lea  rbp 
 7245: mov  rsi [rdi + 40]
 7249: mov  r8 [rdi + 48]
 724d: UNKNOWN-INSTRUCTION
 724f: leave 
 7250: jnz 71f8 ; relative offset = -90
 7252: UNKNOWN-INSTRUCTION
 7255: jnb 7278 ; relative offset = 33
 7257: lea  rax 
 725b: mov  [rdi + 40] rax
 725f: mov  [rsi] 0x20
 7262: mov  rbx rbp
 7265: UNKNOWN-INSTRUCTION
 7267: jecxz  0x72
 7269: UNKNOWN-INSTRUCTION
 726a: add  rsp 0x08
 726e: pop  ebx
 726f: pop  ebp
 7270: pop  esp
 7272: pop  ebp
 7274: ret 
 7275: nop  [rax]
 7278: mov  esi 0x00000020
 727d: call 4900 ; relative offset = -10626
 7282: jmp 7262 ; relative offset = -34
 7284: nop  [rax + 0]
 7288: mov  esi 0x00000009
 728d: call 4900 ; relative offset = -10642
 7292: mov  rcx [RIP + 0x0001b1df]
 7299: jmp 7220 ; relative offset = -123
 729b: nop  [0 + rax + rax * 1]
 72a0: ret 
 72a1: UNKNOWN-INSTRUCTION
 72a4: nop  [0x00000000 + rax + rax * 1]
 72ac: nop  [rax + 0]
 72b0: push  ebp
 72b2: push  esp
 72b4: push  ebp
 72b5: push  ebx
 72b6: sub  rsp 0x08
 72ba: mov  rax [rsi + 24]
 72be: mov  rbx [rsi + 16]
 72c2: mov  rbp rax
 72c5: sub  rbp rbx
 72c8: cmp  rbp 0x07
 72cc: jna 7364 ; relative offset = 146
 72d2: UNKNOWN-INSTRUCTION
 72d5: jz 736f ; relative offset = 148
 72db: mov  rdx [rsi + 48]
 72df: mov  r12 [RIP + 0x0001acc2]
 72e6: lea  r13 
 72ed: add  rax rdx
 72f0: not  rdx
 72f3: and  rax rdx
 72f6: mov  rdx [rsi + 32]
 72fa: mov  r8 rax
 72fd: sub  r8 [rsi + 8]
 7301: mov  rcx rdx
 7304: sub  rcx [rsi + 8]
 7308: UNKNOWN-INSTRUCTION
 730d: ror  [rax + 131] 
 7311: in  eax 0xf8
 7313: add  rbp rbx
 7316: mov  [rsi + 24] rdx
 731a: mov  [rsi + 16] rdx
 731e: mov  rsi [r12]
 7322: call 49d0 ; relative offset = -10583
 7327: UNKNOWN-INSTRUCTION
 7328: nop  [0x00000000 + rax + rax * 1]
 7330: mov  rdx [rbx]
 7333: mov  rsi r13
 7336: mov  edi 0x00000001
 733b: xor  eax eax
 733d: add  rbx 0x08
 7341: call 4b40 ; relative offset = -10246
 7346: UNKNOWN-INSTRUCTION
 7348: jmp 73bf ; relative offset = 117
 734a: in  eax 0x49
 734c: mov  edi [rsp]
 734f: mov  rax [rdi + 40]
 7353: UNKNOWN-INSTRUCTION
 7357: jnb 7378 ; relative offset = 31
 7359: lea  rdx 
 735d: mov  [rdi + 40] rdx
 7361: mov  [rax] 0x0a
 7364: add  rsp 0x08
 7368: pop  ebx
 7369: pop  ebp
 736a: pop  esp
 736c: pop  ebp
 736e: ret 
 736f: UNKNOWN-INSTRUCTION
 7371: push  eax
 7372: add  bpl cl
 7374: UNKNOWN-INSTRUCTION
 7378: pop  eax
 7379: mov  esi 0x0000000a
 737e: pop  ebx
 737f: pop  ebp
 7380: pop  esp
 7382: pop  ebp
 7384: jmp 4900 ; relative offset = -10889
 7389: nop  [rax + 0x00000000]
 7390: UNKNOWN-INSTRUCTION
 7392: jp 7343 ; relative offset = -81
 7394: add  [rax] eax
 7396: add  [rcx] ebx
 7398: UNKNOWN-INSTRUCTION
 739a: rol  [RIP + 0x00000102] 0x80
 73a1: UNKNOWN-INSTRUCTION
 73a2: imul  ebp [rdi + 0x74000001] 0x04cc8003
 73ac: mov  edx [RIP + 0x0001af5a]
 73b2: UNKNOWN-INSTRUCTION
 73b4: jnz 7418 ; relative offset = 98
 73b6: mov  edx [RIP + 0x0001c064]
 73bc: cmp  edx 0x03
 73bf: UNKNOWN-INSTRUCTION
 73c1: sub  ebx ecx
 73c3: UNKNOWN-INSTRUCTION
 73c4: dec  [rax + 141]
 73c7: or  eax 0x00012544
 73cc: mov  ecx [rcx + rdx * 4]
 73cf: or  eax ecx
 73d1: UNKNOWN-INSTRUCTION
 73d3: lodsw 
 73d4: lodsb 
 73d5: add  [rax] eax
 73d7: UNKNOWN-INSTRUCTION
 73d8: jnz 73e7 ; relative offset = 13
 73da: UNKNOWN-INSTRUCTION
 73dd: rol  [rcx] 0x00
 73e0: UNKNOWN-INSTRUCTION
 73e1: jz 7468 ; relative offset = 129
 73e7: or  eax 0x0000020c
 73ec: UNKNOWN-INSTRUCTION
 73ef: lodsb 
 73f0: add  [rax] eax
 73f2: UNKNOWN-INSTRUCTION
 73f3: jz 73f8 ; relative offset = 3
 73f5: or  eax 0x10
 73f8: mov  edx [RIP + 0x0001c026]
 73fe: cmp  edx 0x02
 7401: jz 7460 ; relative offset = 93
 7403: jng 7450 ; relative offset = 75
 7405: cmp  edx 0x03
 7408: jz 7458 ; relative offset = 78
 740a: cmp  edx 0x04
 740d: jnz 7472 ; relative offset = 99
 740f: or  eax ecx
 7411: ret 
 7412: UNKNOWN-INSTRUCTION
 7413: nop  [0 + rax + rax * 1]
 7418: mov  edx [RIP + 0x0001c006]
 741e: cmp  edx 0x02
 7421: jz 7460 ; relative offset = 61
 7423: jng 7450 ; relative offset = 43
 7425: cmp  edx 0x03
 7428: jz 7458 ; relative offset = 46
 742a: cmp  edx 0x04
 742d: jnz 4cf0 ; relative offset = -10051
 7433: mov  edx [RIP + 0x0001bfe7]
 7439: cmp  edx 0x03
 743c: UNKNOWN-INSTRUCTION
 743e: scasb 
 743f: UNKNOWN-INSTRUCTION
 7441: dec  [rax + 141]
 7444: or  eax 0x000124c7
 7449: mov  ecx [rcx + rdx * 4]
 744c: or  eax ecx
 744e: ret 
 744f: nop 
 7450: add  edx 0x01
 7453: cmp  edx 0x02
 7456: jnbe  0x1f
 7458: ret 
 7459: nop  [rax + 0x00000000]
 7460: UNKNOWN-INSTRUCTION
 7462: add  al bpl
 7464: nop  [rax + 0]
 7468: or  eax 0x00000204
 746d: jmp 73ec ; relative offset = -134
 7472: jmp 4cf0 ; relative offset = -10119
 7477: jmp 4cf0 ; relative offset = -10124
 747c: nop  [rax + 0]
 7480: push  esi
 7482: mov  r14 rdx
 7485: push  ebp
 7487: mov  r13 rsi
 748a: push  esp
 748c: mov  r12d ecx
 748f: push  ebp
 7490: mov  rbp rdi
 7493: push  ebx
 7494: mov  rsi [rdi + 16]
 7498: mov  rdi r13
 749b: call  rdx
 749c: push  ebp
 749d: UNKNOWN-INSTRUCTION
 74a2: jnb 4cf6 ; relative offset = -10162
 74a8: mov  rbx rax
 74ab: sal  rbx 0x04
 74af: add  rbx [rbp + 0]
 74b3: mov  [r14] rbx
 74b6: mov  rsi [rbx]
 74b9: UNKNOWN-INSTRUCTION
 74bb: div  [76 + rcx + rsi * 2]
 74bf: UNKNOWN-INSTRUCTION
 74c0: out  dx unknown
 74c1: jz 7580 ; relative offset = 185
 74c7: mov  rdi r13
 74ca: call  rdx
 74cb: push  ebp
 74cc: UNKNOWN-INSTRUCTION
 74cf: jz 7526 ; relative offset = 85
 74d1: mov  rax [rbx]
 74d4: UNKNOWN-INSTRUCTION
 74d6: in  unknown 0x74
 74d8: pop  eax
 74d9: mov  rdx [rbx + 8]
 74dd: UNKNOWN-INSTRUCTION
 74df: ror  [rdi] cl
 74e1: UNKNOWN-INSTRUCTION
 74e2: mov  al [rax]
 74e4: UNKNOWN-INSTRUCTION
 74e8: outsw 
 74e9: add  cl [rdi]
 74eb: adc  [rbx] eax
 74ed: mov  [rdx] 0x00000000
 74f4: mov  rcx [rbp + 72]
 74f8: mov  [rdx + 8] rcx
 74fc: pop  ebx
 74fd: mov  [rbp + 72] rdx
 7501: pop  ebp
 7502: pop  esp
 7504: pop  ebp
 7506: pop  esi
 7508: ret 
 7509: nop  [rax + 0x00000000]
 7510: mov  rsi [rax]
 7513: UNKNOWN-INSTRUCTION
 7515: out  dx unknown
 7516: jz 7540 ; relative offset = 40
 7518: mov  rdi r13
 751b: call  rdx
 751c: push  ebp
 751d: UNKNOWN-INSTRUCTION
 7520: jnz 7540 ; relative offset = 30
 7522: mov  rbx [rbx + 8]
 7526: mov  rax [rbx + 8]
 752a: UNKNOWN-INSTRUCTION
 752d: jnz 7510 ; relative offset = -31
 752f: xor  eax eax
 7531: pop  ebx
 7532: pop  ebp
 7533: pop  esp
 7535: pop  ebp
 7537: pop  esi
 7539: ret 
 753a: UNKNOWN-INSTRUCTION
 753b: nop  [0 + rax + rax * 1]
 7540: mov  rdx [rbx + 8]
 7544: mov  rax [rdx]
 7547: UNKNOWN-INSTRUCTION
 7549: in  unknown 0x74
 754b: in  eax 0x48
 754d: mov  ecx [rdx + 8]
 7550: mov  [rbx + 8] rcx
 7554: mov  [rdx] 0x00000000
 755b: mov  rcx [rbp + 72]
 755f: mov  [rdx + 8] rcx
 7563: pop  ebx
 7564: mov  [rbp + 72] rdx
 7568: pop  ebp
 7569: pop  esp
 756b: pop  ebp
 756d: pop  esi
 756f: ret 
 7570: mov  [rbx] 0x00000000
 7577: jmp 7531 ; relative offset = -72
 7579: nop  [rax + 0x00000000]
 7580: mov  rax rsi
 7583: jmp 74d4 ; relative offset = -180
 7588: nop  [0x00000000 + rax + rax * 1]
 7590: push  edi
 7592: push  esi
 7594: mov  r14 rdi
 7597: push  ebp
 7599: push  esp
 759b: mov  r12d edx
 759e: push  ebp
 759f: mov  rbp rsi
 75a2: push  ebx
 75a3: sub  rsp 0x08
 75a7: mov  rbx [rsi]
 75aa: UNKNOWN-INSTRUCTION
 75ac: pop  esi
 75ad: UNKNOWN-INSTRUCTION
 75ae: jnae 75c6 ; relative offset = 22
 75b0: jmp 76b2 ; relative offset = 253
 75b5: nop  [rax]
 75b8: add  rbx 0x10
 75bc: UNKNOWN-INSTRUCTION
 75be: pop  ebp
 75bf: UNKNOWN-INSTRUCTION
 75c0: jna 76b2 ; relative offset = 236
 75c6: mov  r15 [rbx]
 75c9: UNKNOWN-INSTRUCTION
 75cb: push  [76 + rdx + rbp * 8]
 75cf: mov  ebp [rbx + 8]
 75d2: UNKNOWN-INSTRUCTION
 75d4: in  eax dx
 75d5: jz 7641 ; relative offset = 106
 75d7: mov  rsi [r14 + 16]
 75db: jmp 75f4 ; relative offset = 23
 75dd: nop  [rax]
 75e0: mov  rcx [rax + 8]
 75e4: mov  [r13 + 8] rcx
 75e8: mov  [rax + 8] r13
 75ec: UNKNOWN-INSTRUCTION
 75ef: jz 763e ; relative offset = 77
 75f1: mov  r13 rdx
 75f4: mov  r15 [r13 + 0]
 75f8: mov  rdi r15
 75fb: call  rdx
 75fd: push  esi
 75fe: UNKNOWN-INSTRUCTION
 75ff: mov  rsi [r14 + 16]
 7603: UNKNOWN-INSTRUCTION
 7605: jnb 4cfb ; relative offset = -10513
 760c: sal  rax 0x04
 7610: add  rax [r14]
 7613: mov  rdx [r13 + 8]
 7617: cmp  [rax] 0x00
 761b: jnz 75e0 ; relative offset = -61
 761d: mov  [rax] r15
 7620: mov  rax [r14 + 72]
 7624: add  [r14 + 24] 0x01
 7629: mov  [r13 + 0] 0x00000000
 7631: mov  [r13 + 8] rax
 7635: mov  [r14 + 72] r13
 7639: UNKNOWN-INSTRUCTION
 763c: jnz 75f1 ; relative offset = -77
 763e: mov  r15 [rbx]
 7641: mov  [rbx + 8] 0x00000000
 7649: UNKNOWN-INSTRUCTION
 764b: in  unknown 0x0f
 764d: UNKNOWN-INSTRUCTION
 7651: dec  [rcx + 139]
 7654: jna 7666 ; relative offset = 16
 7656: mov  rdi r15
 7659: call  rdx
 765b: push  esi
 765c: UNKNOWN-INSTRUCTION
 765d: mov  r13 rax
 7660: UNKNOWN-INSTRUCTION
 7664: jnb 4cfb ; relative offset = -10607
 766a: sal  r13 0x04
 766e: add  r13 [r14]
 7671: cmp  [r13 + 0] 0x00
 7676: jz 76d0 ; relative offset = 88
 7678: mov  rax [r14 + 72]
 767c: UNKNOWN-INSTRUCTION
 767f: jz 76db ; relative offset = 90
 7681: mov  rdx [rax + 8]
 7685: mov  [r14 + 72] rdx
 7689: mov  rdx [r13 + 8]
 768d: mov  [rax] r15
 7690: mov  [rax + 8] rdx
 7694: mov  [r13 + 8] rax
 7698: mov  [rbx] 0x00000000
 769f: add  rbx 0x10
 76a3: sub  [rbp + 24] 0x01
 76a8: UNKNOWN-INSTRUCTION
 76aa: pop  ebp
 76ab: UNKNOWN-INSTRUCTION
 76ae: adc  unknown 0xff
 76b0: UNKNOWN-INSTRUCTION
 76b1: dec  [rax + 131]
 76b4: UNKNOWN-INSTRUCTION
 76b6: mov  eax 0x00000001
 76bb: pop  ebx
 76bc: pop  ebp
 76bd: pop  esp
 76bf: pop  ebp
 76c1: pop  esi
 76c3: pop  edi
 76c5: ret 
 76c6: UNKNOWN-INSTRUCTION
 76c8: nop  [0x00000000 + rax + rax * 1]
 76d0: mov  [r13 + 0] r15
 76d4: add  [r14 + 24] 0x01
 76d9: jmp 7698 ; relative offset = -67
 76db: mov  edi 0x00000010
 76e0: call 4690 ; relative offset = -12373
 76e5: UNKNOWN-INSTRUCTION
 76e8: jnz 7689 ; relative offset = -97
 76ea: add  rsp 0x08
 76ee: xor  eax eax
 76f0: pop  ebx
 76f1: pop  ebp
 76f2: pop  esp
 76f4: pop  ebp
 76f6: pop  esi
 76f8: pop  edi
 76fa: ret 
 76fb: nop  [0 + rax + rax * 1]
 7700: push  ebp
 7701: mov  ebp r8d
 7704: push  ebx
 7705: mov  rbx rdx
 7708: mov  edx ecx
 770a: mov  ecx ebp
 770c: sub  esp 0x00000118
 7713: UNKNOWN-INSTRUCTION
 7714: mov  rax 0x00000028
 771c: mov  [0x00000108 + rsp] rax
 7724: xor  eax eax
 7726: mov  r8 rsp
 7729: call 4b50 ; relative offset = -11230
 772e: UNKNOWN-INSTRUCTION
 772f: sar  [rcx + 38] 0x48
 7733: mov  edx [0x00000108 + rsp]
 773a: UNKNOWN-INSTRUCTION
 773b: sub  rdx 0x00000028
 7743: jnz 7895 ; relative offset = 332
 7749: add  esp 0x00000118
 7750: pop  ebx
 7751: pop  ebp
 7752: ret 
 7753: nop  [0 + rax + rax * 1]
 7758: mov  ecx [0x00000088 + rsp]
 775f: mov  edx [0x0000008c + rsp]
 7766: mov  rsi 0xfffff00000000000
 7770: mov  rdi rcx
 7773: sal  rcx 0x20
 7777: sal  rdi 0x08
 777b: and  rcx rsi
 777e: and  edi 0x000fff00
 7784: or  rcx rdi
 7787: movzx  edi dl
 778a: sal  rdx 0x0c
 778e: or  rcx rdi
 7791: mov  rdi 0x00000ffffff00000
 779b: and  rdx rdi
 779e: or  rdx rcx
 77a1: mov  ecx [16 + rsp]
 77a5: mov  [rbx] rdx
 77a8: mov  rdx [32 + rsp]
 77ad: mov  [rbx + 16] rcx
 77b1: mov  ecx [0x00000080 + rsp]
 77b8: mov  [rbx + 8] rdx
 77bc: movzx  edx [28 + rsp]
 77c1: mov  r8 rcx
 77c4: sal  rcx 0x20
 77c8: mov  [rbx + 24] edx
 77cb: mov  rdx [20 + rsp]
 77d0: sal  r8 0x08
 77d4: and  rcx rsi
 77d7: and  r8d 0x000fff00
 77de: mov  [rbx + 28] rdx
 77e2: mov  edx [0x00000084 + rsp]
 77e9: or  rcx r8
 77ec: movzx  esi dl
 77ef: sal  rdx 0x0c
 77f3: or  rcx rsi
 77f6: and  rdx rdi
 77f9: mov  esi [4 + rsp]
 77fd: or  rdx rcx
 7800: and  ebp 0x00000800
 7806: mov  [rbx + 40] rdx
 780a: mov  rdx [40 + rsp]
 780f: mov  [rbx + 56] rsi
 7813: mov  esi [72 + rsp]
 7817: mov  [rbx + 48] rdx
 781b: mov  rdx [48 + rsp]
 7820: mov  [rbx + 80] rsi
 7824: mov  esi [120 + rsp]
 7828: mov  [rbx + 64] rdx
 782c: mov  rdx [64 + rsp]
 7831: mov  [rbx + 96] rsi
 7835: mov  esi [104 + rsp]
 7839: mov  [rbx + 72] rdx
 783d: mov  rdx [112 + rsp]
 7842: mov  [rbx + 112] rsi
 7846: mov  [rbx + 88] rdx
 784a: mov  rdx [96 + rsp]
 784f: mov  [rbx + 104] rdx
 7853: jz 7732 ; relative offset = -295
 7859: test  [1 + rsp] 0x08
 785e: jz 7880 ; relative offset = 32
 7860: mov  rdx [80 + rsp]
 7865: mov  edi [88 + rsp]
 7869: mov  [rbx + 88] rdx
 786d: mov  [rbx + 96] rdi
 7871: jmp 7732 ; relative offset = -324
 7876: UNKNOWN-INSTRUCTION
 7878: nop  [0x00000000 + rax + rax * 1]
 7880: mov  [rbx + 96] 0xffffffff
 7888: mov  [rbx + 88] 0xffffffff
 7890: jmp 7732 ; relative offset = -355
 7895: call 4890 ; relative offset = -12298
 789a: UNKNOWN-INSTRUCTION
 789b: nop  [0 + rax + rax * 1]
 78a0: push  edi
 78a2: xor  esi esi
 78a4: push  esi
 78a6: push  ebp
 78a8: push  esp
 78aa: push  ebp
 78ab: push  ebx
 78ac: sub  esp 0x00000698
 78b3: UNKNOWN-INSTRUCTION
 78b4: mov  rax 0x00000028
 78bc: mov  [0x00000688 + rsp] rax
 78c4: xor  eax eax
 78c6: lea  rdi 
 78cb: mov  [96 + rsp] rdi
 78d0: lea  rax 
 78d7: mov  rax [rax + rsi * 1]
 78db: movzx  edx [rax]
 78de: UNKNOWN-INSTRUCTION
 78e0: jz 78fb ; relative offset = 25
 78e2: UNKNOWN-INSTRUCTION
 78e3: nop  [0 + rax + rax * 1]
 78e8: movzx  ecx [rax + 1]
 78ec: UNKNOWN-INSTRUCTION
 78ee: and  eax 0xca890f74
 78f3: add  rax 0x01
 78f7: UNKNOWN-INSTRUCTION
 78f9: jnz 78e8 ; relative offset = -19
 78fb: xor  eax eax
 78fd: jmp 790e ; relative offset = 15
 78ff: nop 
 7900: UNKNOWN-INSTRUCTION
 7901: stc 
 7902: and  eax 0x0447840f
 7907: UNKNOWN-INSTRUCTION
 790a: stc 
 790b: UNKNOWN-INSTRUCTION
 790c: jnz 78f1 ; relative offset = -29
 790e: mov  [rdi + rsi * 1] rax
 7912: add  rsi 0x08
 7916: cmp  rsi 0x10
 791a: jnz 78d0 ; relative offset = -76
 791c: mov  [24 + rsp] 0x0000000c
 7925: cmp  [112 + rsp] 0x00
 792b: jz 7dc5 ; relative offset = 1172
 7931: lea  rax 
 7939: mov  edi 0x00000001
 793f: mov  [72 + rsp] rax
 7944: lea  rax 
 794c: mov  [80 + rsp] rax
 7951: lea  rax 
 7959: mov  [56 + rsp] rax
 795e: mov  r12 [80 + rsp]
 7963: mov  [48 + rsp] 0x0002000e
 796b: mov  [32 + rsp] 0x00000000
 7974: mov  r14 [72 + rsp]
 7979: mov  r13 r12
 797c: nop  [rax + 0]
 7980: mov  edi [48 + rsp]
 7984: call 4ac0 ; relative offset = -11977
 7989: mov  esi 0x00000025
 798e: mov  rdi rax
 7991: mov  rbp rax
 7994: call 48d0 ; relative offset = -12489
 7999: mov  [16 + rsp] rax
 799e: UNKNOWN-INSTRUCTION
 79a0: ror  [rdi] 0x85
 79a3: rol  [rbx] 0x00
 79a6: UNKNOWN-INSTRUCTION
 79a7: call 4cd0 ; relative offset = -11484
 79ac: movzx  edx [rbp + 0]
 79b0: mov  rdi rbp
 79b3: mov  [40 + rsp] r14
 79b8: mov  rax [rax]
 79bb: movzx  eax [rax + rdx * 2]
 79bf: and  unknown 0x0800
 79c3: mov  [54 + rsp] ax
 79c8: call 4880 ; relative offset = -12621
 79cd: mov  r12 rax
 79d0: mov  rbx rax
 79d3: call 4870 ; relative offset = -12648
 79d8: mov  r10 [40 + rsp]
 79dd: mov  r9 r12
 79e0: mov  [8 + rsp] 0x00000000
 79e9: cmp  rax 0x01
 79ed: UNKNOWN-INSTRUCTION
 79ef: lea  eax 
 79f1: UNKNOWN-INSTRUCTION
 79f5: pop  esp
 79f6: and  unknown 0x18
 79f8: jnb 7b13 ; relative offset = 277
 79fe: mov  rbx [24 + rsp]
 7a03: mov  r9 rbx
 7a06: xor  r12d r12d
 7a09: UNKNOWN-INSTRUCTION
 7a0a: cmp  [54 + rsp] 0x00
 7a0f: jnz 7ec0 ; relative offset = 1195
 7a15: mov  eax 0x0000007f
 7a1a: lea  rdx 
 7a1f: mov  rdi r14
 7a22: UNKNOWN-INSTRUCTION
 7a24: ror  [rcx + 15] 0x46
 7a28: rol  [rbx + 0x0e7208f8] 0x89
 7a2f: ror  [rax + 137] 0xee
 7a33: shr  ecx 0x03
 7a36: REP movsq 
 7a39: mov  rbp rsi
 7a3c: xor  ecx ecx
 7a3e: test  unknown 0x04
 7a40: jz 7a4c ; relative offset = 10
 7a42: mov  ecx [rbp + 0]
 7a45: mov  [rdi] ecx
 7a47: mov  ecx 0x00000004
 7a4c: test  unknown 0x02
 7a4e: jz 7a5d ; relative offset = 13
 7a50: movzx  esi [RBP + 0 + rcx * 1]
 7a55: mov  [rdi + rcx * 1] si
 7a59: add  rcx 0x02
 7a5d: test  unknown 0x01
 7a5f: jz 7a6a ; relative offset = 9
 7a61: movzx  esi [RBP + 0 + rcx * 1]
 7a66: mov  [rdi + rcx * 1] sil
 7a6a: add  rax r14
 7a6d: mov  rcx rax
 7a70: UNKNOWN-INSTRUCTION
 7a72: call ffffffff854da0ea ; relative offset = -2058541453
 7a77: in  unknown 0x75
 7a79: or  ebp ebx
 7a7b: UNKNOWN-INSTRUCTION
 7a7c: nop  [rax + 0]
 7a80: UNKNOWN-INSTRUCTION
 7a82: jmp ffffffff834890fa ; relative offset = -2092427661
 7a87: rol  [rcx] 0x4c
 7a8a: mov  esi edi
 7a8c: mov  [rcx + 255] 0x20
 7a90: sub  rsi rcx
 7a93: add  rsi rdx
 7a96: add  rsi rax
 7a99: jnz 7a80 ; relative offset = -27
 7a9b: mov  [rcx] 0x00
 7a9e: mov  rdi [8 + rsp]
 7aa3: mov  [40 + rsp] r9
 7aa8: call 4680 ; relative offset = -13357
 7aad: mov  rdi [16 + rsp]
 7ab2: call 4680 ; relative offset = -13367
 7ab7: mov  r9 [40 + rsp]
 7abc: add  r12 r9
 7abf: cmp  r12 0x7f
 7ac3: UNKNOWN-INSTRUCTION
 7ac6: add  al [rax]
 7ac8: UNKNOWN-INSTRUCTION
 7ac9: mov  rax [32 + rsp]
 7ace: UNKNOWN-INSTRUCTION
 7ad5: add  [48 + rsp] 0x01
 7ada: sub  r13 0x80
 7ade: sub  r14 0x80
 7ae2: mov  [32 + rsp] rbx
 7ae7: UNKNOWN-INSTRUCTION
 7ae9: insb 
 7aea: and  unknown 0x38
 7aec: jnz 7980 ; relative offset = -370
 7af2: UNKNOWN-INSTRUCTION
 7af4: pop  esp
 7af5: and  unknown 0x18
 7af7: jna 7df1 ; relative offset = 756
 7afd: mov  rax [32 + rsp]
 7b02: mov  [24 + rsp] rax
 7b07: jmp 795e ; relative offset = -430
 7b0c: nop  [rax + 0]
 7b10: mov  r9 r12
 7b13: mov  rax [24 + rsp]
 7b18: UNKNOWN-INSTRUCTION
 7b1b: jna 7a06 ; relative offset = -283
 7b21: mov  r12 rax
 7b24: sub  r12 rbx
 7b27: UNKNOWN-INSTRUCTION
 7b28: cmp  [54 + rsp] 0x00
 7b2d: jnz 7b3d ; relative offset = 14
 7b2f: jmp 7a15 ; relative offset = -287
 7b34: nop  [rax + 0]
 7b38: UNKNOWN-INSTRUCTION
 7b3b: jnb 7b51 ; relative offset = 20
 7b3d: add  r10 0x01
 7b41: mov  rax r14
 7b44: mov  [r10 + 255] 0x20
 7b49: sub  rax r10
 7b4c: add  rax r12
 7b4f: jnz 7b38 ; relative offset = -25
 7b51: mov  rax r13
 7b54: sub  rax r10
 7b57: UNKNOWN-INSTRUCTION
 7b5a: mov  rsi rbp
 7b5d: mov  rdi r10
 7b60: mov  [40 + rsp] r9
 7b65: UNKNOWN-INSTRUCTION
 7b67: ror  [r8 + 137] 0xc2
 7b6c: call 4b80 ; relative offset = -12273
 7b71: mov  r9 [40 + rsp]
 7b76: mov  rcx rax
 7b79: jmp 7a9b ; relative offset = -227
 7b7e: UNKNOWN-INSTRUCTION
 7b7f: nop 
 7b80: xor  edx edx
 7b82: xor  edi edi
 7b84: mov  rsi rbp
 7b87: mov  [88 + rsp] r12
 7b8c: call 47d0 ; relative offset = -13249
 7b91: cmp  rax 0xff
 7b95: jz 7d68 ; relative offset = 461
 7b9b: add  rax 0x01
 7b9f: lea  rdi 
 7ba7: mov  [64 + rsp] rax
 7bac: mov  [104 + rsp] rdi
 7bb1: call 4690 ; relative offset = -13606
 7bb6: UNKNOWN-INSTRUCTION
 7bb8: ror  [rdi] 0x84
 7bbb: test  unknown 0x48000001
 7bc0: mov  edx [64 + rsp]
 7bc4: mov  rsi rbp
 7bc7: mov  rdi rax
 7bca: mov  [8 + rsp] rax
 7bcf: mov  rcx 0x3fffffffffffffff
 7bd9: call 4760 ; relative offset = -13438
 7bde: mov  r10 [40 + rsp]
 7be3: mov  r9 [88 + rsp]
 7be8: UNKNOWN-INSTRUCTION
 7bea: ror  [rdi] 0x84
 7bed: add  dil sil
 7bef: UNKNOWN-INSTRUCTION
 7bf0: dec  [rax + 139]
 7bf3: pop  esp
 7bf4: and  unknown 0x08
 7bf6: mov  rdi [104 + rsp]
 7bfb: mov  [252 + rbx + rdi * 1] 0x00000000
 7c03: mov  edi [rbx]
 7c05: UNKNOWN-INSTRUCTION
 7c06: dec  [rdi]
 7c08: UNKNOWN-INSTRUCTION
 7c09: mov  [rcx] 0x00
 7c0c: UNKNOWN-INSTRUCTION
 7c0d: mov  [88 + rsp] r10
 7c12: xor  eax eax
 7c14: mov  [40 + rsp] rbp
 7c19: mov  ebp eax
 7c1b: nop  [0 + rax + rax * 1]
 7c20: call 4ca0 ; relative offset = -12165
 7c25: UNKNOWN-INSTRUCTION
 7c27: jnz 7c34 ; relative offset = 11
 7c29: mov  [rbx] 0x0000fffd
 7c2f: mov  ebp 0x00000001
 7c34: mov  edi [rbx + 4]
 7c37: add  rbx 0x04
 7c3b: UNKNOWN-INSTRUCTION
 7c3c: push  [rbp + 225]
 7c3f: mov  r10 [88 + rsp]
 7c44: mov  rsi [64 + rsp]
 7c49: mov  ebx ebp
 7c4b: mov  rdi [8 + rsp]
 7c50: mov  rbp [40 + rsp]
 7c55: mov  [40 + rsp] r10
 7c5a: call 47b0 ; relative offset = -13487
 7c5f: UNKNOWN-INSTRUCTION
 7c61: mov  r10 [40 + rsp]
 7c66: jz 7d91 ; relative offset = 293
 7c6c: mov  rsi [8 + rsp]
 7c71: xor  edx edx
 7c73: xor  edi edi
 7c75: mov  [16 + rsp] r10
 7c7a: call 4bf0 ; relative offset = -12431
 7c7f: mov  r10 [16 + rsp]
 7c84: lea  r12 
 7c88: mov  rdi r12
 7c8b: mov  [40 + rsp] r10
 7c90: call 4690 ; relative offset = -13829
 7c95: mov  [16 + rsp] rax
 7c9a: UNKNOWN-INSTRUCTION
 7c9c: ror  [rdi] 0x84
 7c9f: sub  unknown 0x02
 7ca1: UNKNOWN-INSTRUCTION
 7ca3: mov  rbp [8 + rsp]
 7ca8: xor  ebx ebx
 7caa: mov  r10 [40 + rsp]
 7caf: mov  edi [rbp + 0]
 7cb2: UNKNOWN-INSTRUCTION
 7cb3: push  [76 + rdi]
 7cb7: mov  [40 + rsp] esp
 7cbb: mov  r12 rbp
 7cbe: mov  rbp rbx
 7cc1: mov  rbx [24 + rsp]
 7cc6: mov  [64 + rsp] r10
 7ccb: jmp 7cee ; relative offset = 33
 7ccd: nop  [rax]
 7cd0: cdqe 
 7cd2: add  rax rbp
 7cd5: UNKNOWN-INSTRUCTION
 7cd7: ret 
 7cd8: jnae 7d0d ; relative offset = 51
 7cda: mov  edi [4 + r12]
 7cdf: add  r12 0x04
 7ce3: UNKNOWN-INSTRUCTION
 7ce4: dec  [rdi]
 7ce6: UNKNOWN-INSTRUCTION
 7ceb: mov  rbp rax
 7cee: call 4aa0 ; relative offset = -12883
 7cf3: cmp  eax 0xff
 7cf6: jnz 7cd0 ; relative offset = -40
 7cf8: mov  eax 0x00000001
 7cfd: mov  [r12] 0x0000fffd
 7d05: add  rax rbp
 7d08: UNKNOWN-INSTRUCTION
 7d0a: ret 
 7d0b: jnb 7cda ; relative offset = -51
 7d0d: mov  rbx rbp
 7d10: mov  r10 [64 + rsp]
 7d15: mov  rbp r12
 7d18: mov  r12 [40 + rsp]
 7d1d: mov  [rbp + 0] 0x00000000
 7d24: mov  rbp [16 + rsp]
 7d29: mov  rdx r12
 7d2c: mov  rsi [8 + rsp]
 7d31: mov  [40 + rsp] r10
 7d36: mov  rdi rbp
 7d39: call 4bf0 ; relative offset = -12622
 7d3e: mov  r10 [40 + rsp]
 7d43: mov  r9 rax
 7d46: jmp 79f3 ; relative offset = -856
 7d4b: nop  [0 + rax + rax * 1]
 7d50: movzx  edx [rax + 2]
 7d54: add  rax 0x01
 7d58: jmp 78f3 ; relative offset = -1130
 7d5d: mov  [RIP + 0x0001aaa8] 0x01
 7d64: nop  [rax + 0]
 7d68: mov  rax [0x00000688 + rsp]
 7d70: UNKNOWN-INSTRUCTION
 7d71: sub  rax 0x00000028
 7d79: jnz 7eca ; relative offset = 331
 7d7f: add  esp 0x00000698
 7d86: pop  ebx
 7d87: pop  ebp
 7d88: pop  esp
 7d8a: pop  ebp
 7d8c: pop  esi
 7d8e: pop  edi
 7d90: ret 
 7d91: movsxd  rbx eax
 7d94: UNKNOWN-INSTRUCTION
 7d96: pop  esp
 7d97: and  unknown 0x18
 7d99: jnb 7b10 ; relative offset = -655
 7d9f: add  r12 0x01
 7da3: jmp 7c88 ; relative offset = -288
 7da8: nop  [0x00000000 + rax + rax * 1]
 7db0: mov  rbp r12
 7db3: mov  r10 [64 + rsp]
 7db8: mov  r12 [40 + rsp]
 7dbd: mov  rbx rax
 7dc0: jmp 7d1d ; relative offset = -168
 7dc5: cmp  [120 + rsp] 0x00
 7dcb: jnz 7931 ; relative offset = -1184
 7dd1: jmp 7d68 ; relative offset = -107
 7dd3: mov  rsi [64 + rsp]
 7dd8: mov  rdi [8 + rsp]
 7ddd: mov  [40 + rsp] r10
 7de2: call 47b0 ; relative offset = -13879
 7de7: mov  r10 [40 + rsp]
 7dec: movsxd  rbx eax
 7def: jmp 7d94 ; relative offset = -93
 7df1: mov  rax [72 + rsp]
 7df6: xor  r12d r12d
 7df9: lea  rbp 
 7e00: lea  rax 
 7e07: mov  rbx [72 + rsp]
 7e0c: imul  rdi r12 0x00000600
 7e13: mov  r13 [rax + r12 * 8]
 7e17: mov  rax [96 + rsp]
 7e1c: mov  r15 [rax + r12 * 8]
 7e20: lea  rax 
 7e27: lea  r14 
 7e2b: jmp 7e8b ; relative offset = 94
 7e2d: nop  [rax]
 7e30: mov  r9 r15
 7e33: sub  r9 r13
 7e36: cmp  r9 0x00000080
 7e3d: jnle 7d68 ; relative offset = -219
 7e43: sub  rsp 0x08
 7e47: lea  rax 
 7e4b: mov  edx 0x00000001
 7e50: mov  rdi r14
 7e53: push  eax
 7e54: lea  r8 
 7e5b: mov  rcx 0xffffffff
 7e62: xor  eax eax
 7e64: push  ebx
 7e65: mov  esi 0x00000080
 7e6a: push  ebp
 7e6c: call 46e0 ; relative offset = -14225
 7e71: add  rsp 0x20
 7e75: cmp  eax 0x7f
 7e78: UNKNOWN-INSTRUCTION
 7e7d: dec  [rax + 131]
 7e80: jmp 7e02 ; relative offset = -128
 7e82: sub  r14 0x80
 7e86: UNKNOWN-INSTRUCTION
 7e89: jz 7eab ; relative offset = 32
 7e8b: UNKNOWN-INSTRUCTION
 7e8d: push  [rbp + 160]
 7e90: mov  rcx r13
 7e93: lea  rdx 
 7e9a: mov  rdi r14
 7e9d: xor  eax eax
 7e9f: mov  esi 0x00000080
 7ea4: call 48f0 ; relative offset = -13753
 7ea9: jmp 7e75 ; relative offset = -54
 7eab: cmp  r12 0x01
 7eaf: jz 7d5d ; relative offset = -344
 7eb5: mov  esp 0x00000001
 7ebb: jmp 7e00 ; relative offset = -192
 7ec0: mov  eax 0x0000007f
 7ec5: jmp 7b57 ; relative offset = -883
 7eca: call 4890 ; relative offset = -13887
 7ecf: mov  rax [0x00000688 + rsp]
 7ed7: UNKNOWN-INSTRUCTION
 7ed8: sub  rax 0x00000028
 7ee0: jnz 7eca ; relative offset = -24
 7ee2: mov  rdi [8 + rsp]
 7ee7: add  esp 0x00000698
 7eee: pop  ebx
 7eef: pop  ebp
 7ef0: pop  esp
 7ef2: pop  ebp
 7ef4: pop  esi
 7ef6: pop  edi
 7ef8: jmp 4680 ; relative offset = -14461
 7efd: nop  [rax]
 7f00: push  edi
 7f02: push  esi
 7f04: push  ebp
 7f06: push  esp
 7f08: push  ebp
 7f09: push  ebx
 7f0a: sub  esp 0x000000a8
 7f11: UNKNOWN-INSTRUCTION
 7f12: mov  rax 0x00000028
 7f1a: mov  [0x00000098 + rsp] rax
 7f22: xor  eax eax
 7f24: UNKNOWN-INSTRUCTION
 7f26: push  [rbp + 119]
 7f29: lea  rbx 
 7f30: mov  ebp 0x00000014
 7f35: lea  r12 
 7f3c: lea  r13 
 7f40: jmp 7f53 ; relative offset = 17
 7f42: UNKNOWN-INSTRUCTION
 7f43: nop  [0 + rax + rax * 1]
 7f48: UNKNOWN-INSTRUCTION
 7f4a: jmp 7fc0 ; relative offset = 116
 7f4c: UNKNOWN-INSTRUCTION
 7f4d: mov  ebp [rbx]
 7f4f: add  rbx 0x04
 7f53: mov  esi ebp
 7f55: mov  rdi r12
 7f58: call 4c20 ; relative offset = -13117
 7f5d: UNKNOWN-INSTRUCTION
 7f5f: jz 7f48 ; relative offset = -25
 7f61: xor  esi esi
 7f63: mov  edi ebp
 7f65: call 4a00 ; relative offset = -13674
 7f6a: UNKNOWN-INSTRUCTION
 7f6c: jmp 7fe3 ; relative offset = 117
 7f6e: UNKNOWN-INSTRUCTION
 7f6f: mov  rax [0x00000098 + rsp]
 7f77: UNKNOWN-INSTRUCTION
 7f78: sub  rax 0x00000028
 7f80: jnz 80bc ; relative offset = 310
 7f86: add  esp 0x000000a8
 7f8d: pop  ebx
 7f8e: pop  ebp
 7f8f: pop  esp
 7f91: pop  ebp
 7f93: pop  esi
 7f95: pop  edi
 7f97: ret 
 7f98: nop  [0x00000000 + rax + rax * 1]
 7fa0: lea  r12 
 7fa7: lea  rbx 
 7fae: mov  edi 0x00000014
 7fb4: mov  r14 rsp
 7fb7: mov  rdi r12
 7fba: lea  r13 
 7fbe: mov  rbp rbx
 7fc1: call 4a40 ; relative offset = -13702
 7fc6: jmp 7fd8 ; relative offset = 16
 7fc8: nop  [0x00000000 + rax + rax * 1]
 7fd0: mov  r15d [rbp + 0]
 7fd4: add  rbp 0x04
 7fd8: xor  esi esi
 7fda: mov  rdx r14
 7fdd: mov  edi r15d
 7fe0: call 4790 ; relative offset = -14421
 7fe5: cmp  [rsp] 0x01
 7fea: jz 7ff7 ; relative offset = 11
 7fec: mov  esi r15d
 7fef: mov  rdi r12
 7ff2: call 4cb0 ; relative offset = -13127
 7ff7: UNKNOWN-INSTRUCTION
 7ff9: in  eax dx
 7ffa: jnz 7fd0 ; relative offset = -44
 7ffc: UNKNOWN-INSTRUCTION
 7ffe: outsw 
 7fff: add  eax 0x0001a77c
 8004: UNKNOWN-INSTRUCTION
 8006: outsw 
 8007: or  eax 0x0001a784
 800c: mov  [0x00000088 + rsp] 0x10000000
 8017: mov  ebp 0x00000014
 801c: UNKNOWN-INSTRUCTION
 801e: outsw 
 801f: adc  eax 0x0001a77c
 8024: UNKNOWN-INSTRUCTION
 8026: outsw 
 8027: sbb  eax 0x0001a784
 802c: lea  r15 
 8033: UNKNOWN-INSTRUCTION
 8035: outsw 
 8036: and  eax 0x0001a785
 803b: UNKNOWN-INSTRUCTION
 803d: outsw 
 803e: sub  eax 0x0001a78d
 8043: UNKNOWN-INSTRUCTION
 8044: adc  [8 + rsp] eax
 8048: UNKNOWN-INSTRUCTION
 804a: outsw 
 804b: xor  eax 0x0001a790
 8050: UNKNOWN-INSTRUCTION
 8052: outsw 
 8053: UNKNOWN-INSTRUCTION
 8054: cwde 
 8055: cmpsw 
 8056: add  [rax] eax
 8058: UNKNOWN-INSTRUCTION
 8059: adc  [24 + rsp] ecx
 805d: UNKNOWN-INSTRUCTION
 805e: adc  [40 + rsp] edx
 8062: UNKNOWN-INSTRUCTION
 8063: adc  [56 + rsp] ebx
 8067: UNKNOWN-INSTRUCTION
 8068: adc  [72 + rsp] esp
 806c: UNKNOWN-INSTRUCTION
 806d: adc  [88 + rsp] ebp
 8071: UNKNOWN-INSTRUCTION
 8072: adc  [104 + rsp] esi
 8076: UNKNOWN-INSTRUCTION
 8077: adc  [120 + rsp] edi
 807b: jmp 8086 ; relative offset = 9
 807d: nop  [rax]
 8080: mov  ebp [rbx]
 8082: add  rbx 0x04
 8086: mov  esi ebp
 8088: mov  rdi r12
 808b: call 4c20 ; relative offset = -13424
 8090: UNKNOWN-INSTRUCTION
 8092: jz 80b2 ; relative offset = 30
 8094: cmp  ebp 0x14
 8097: lea  rax 
 809e: mov  rsi r14
 80a1: mov  edi ebp
 80a3: UNKNOWN-INSTRUCTION
 80a7: xor  edx edx
 80a9: mov  [rsp] rax
 80ad: call 4790 ; relative offset = -14626
 80b2: UNKNOWN-INSTRUCTION
 80b4: jmp 812b ; relative offset = 117
 80b6: leave 
 80b7: jmp 7f6f ; relative offset = -333
 80bc: call 4890 ; relative offset = -14385
 80c1: UNKNOWN-INSTRUCTION
 80c4: nop  [0x00000000 + rax + rax * 1]
 80cc: nop  [rax + 0]
 80d0: UNKNOWN-INSTRUCTION
 80d4: mov  edx [rsi + 0x000000a8]
 80da: mov  ecx [rdi + 0x000000a8]
 80e0: cmp  edx 0x03
 80e3: UNKNOWN-INSTRUCTION
 80e5: rol  [rbx + 0x940f09fa] 0xc2
 80ec: or  eax edx
 80ee: cmp  ecx 0x03
 80f1: jz 8120 ; relative offset = 45
 80f3: cmp  ecx 0x09
 80f6: jz 8120 ; relative offset = 40
 80f8: mov  edx [rdi + 0x000000ac]
 80fe: and  edx 0x0000f000
 8104: UNKNOWN-INSTRUCTION
 8106: jz 8140 ; relative offset = 56
 8108: cmp  edx 0x00004000
 810e: jz 815a ; relative offset = 74
 8110: mov  eax 0x00000001
 8115: ret 
 8116: UNKNOWN-INSTRUCTION
 8118: nop  [0x00000000 + rax + rax * 1]
 8120: UNKNOWN-INSTRUCTION
 8122: jnz 815a ; relative offset = 54
 8124: mov  eax [rsi + 0x000000ac]
 812a: and  eax 0x0000f000
 812f: UNKNOWN-INSTRUCTION
 8134: jz 815a ; relative offset = 36
 8136: mov  eax 0xffffffff
 813b: ret 
 813c: nop  [rax + 0]
 8140: mov  eax [rsi + 0x000000ac]
 8146: and  eax 0x0000f000
 814b: UNKNOWN-INSTRUCTION
 8150: jz 8108 ; relative offset = -74
 8152: cmp  edx 0x00004000
 8158: jz 8136 ; relative offset = -36
 815a: mov  rax [rdi + 72]
 815e: UNKNOWN-INSTRUCTION
 8162: jnge 8136 ; relative offset = -46
 8164: jnz 8110 ; relative offset = -86
 8166: mov  rsi [rsi]
 8169: mov  rdi [rdi]
 816c: jmp 49f0 ; relative offset = -14209
 8171: UNKNOWN-INSTRUCTION
 8174: nop  [0x00000000 + rax + rax * 1]
 817c: nop  [rax + 0]
 8180: UNKNOWN-INSTRUCTION
 8184: mov  rax [rdi + 72]
 8188: UNKNOWN-INSTRUCTION
 818c: jnge 81b0 ; relative offset = 34
 818e: jnz 81a0 ; relative offset = 16
 8190: mov  rsi [rsi]
 8193: mov  rdi [rdi]
 8196: jmp 49f0 ; relative offset = -14251
 819b: nop  [0 + rax + rax * 1]
 81a0: mov  eax 0x00000001
 81a5: ret 
 81a6: UNKNOWN-INSTRUCTION
 81a8: nop  [0x00000000 + rax + rax * 1]
 81b0: mov  eax 0xffffffff
 81b5: ret 
 81b6: UNKNOWN-INSTRUCTION
 81b8: nop  [0x00000000 + rax + rax * 1]
 81c0: UNKNOWN-INSTRUCTION
 81c4: mov  rdx [rsi + 72]
 81c8: mov  rax rsi
 81cb: UNKNOWN-INSTRUCTION
 81cd: push  edi
 81ce: UNKNOWN-INSTRUCTION
 81cf: jnge 81f0 ; relative offset = 31
 81d1: jnz 81e0 ; relative offset = 13
 81d3: mov  rsi [rdi]
 81d6: mov  rdi [rax]
 81d9: jmp 49f0 ; relative offset = -14318
 81de: UNKNOWN-INSTRUCTION
 81df: nop 
 81e0: mov  eax 0x00000001
 81e5: ret 
 81e6: UNKNOWN-INSTRUCTION
 81e8: nop  [0x00000000 + rax + rax * 1]
 81f0: mov  eax 0xffffffff
 81f5: ret 
 81f6: UNKNOWN-INSTRUCTION
 81f8: nop  [0x00000000 + rax + rax * 1]
 8200: UNKNOWN-INSTRUCTION
 8204: mov  rax rsi
 8207: mov  esi [rdi + 0x000000a8]
 820d: mov  ecx [rax + 0x000000a8]
 8213: cmp  ecx 0x03
 8216: UNKNOWN-INSTRUCTION
 8218: ret  0xf983
 821b: or  [rdi] ecx
 821d: UNKNOWN-INSTRUCTION
 821e: ror  [rcx] 0xca
 8221: cmp  esi 0x03
 8224: jz 8250 ; relative offset = 42
 8226: cmp  esi 0x09
 8229: jz 8250 ; relative offset = 37
 822b: mov  ecx [rdi + 0x000000ac]
 8231: and  ecx 0x0000f000
 8237: UNKNOWN-INSTRUCTION
 8239: jz 8270 ; relative offset = 53
 823b: cmp  ecx 0x00004000
 8241: jz 828c ; relative offset = 73
 8243: mov  eax 0x00000001
 8248: ret 
 8249: nop  [rax + 0x00000000]
 8250: UNKNOWN-INSTRUCTION
 8252: jnz 828c ; relative offset = 56
 8254: mov  edx [rax + 0x000000ac]
 825a: and  edx 0x0000f000
 8260: cmp  edx 0x00004000
 8266: jz 828c ; relative offset = 36
 8268: mov  eax 0xffffffff
 826d: ret 
 826e: UNKNOWN-INSTRUCTION
 826f: nop 
 8270: mov  edx [rax + 0x000000ac]
 8276: and  edx 0x0000f000
 827c: cmp  edx 0x00004000
 8282: jz 823b ; relative offset = -73
 8284: cmp  ecx 0x00004000
 828a: jz 8268 ; relative offset = -36
 828c: mov  rsi [rax + 72]
 8290: UNKNOWN-INSTRUCTION
 8292: jnbe  0x48
 8294: jnge 8268 ; relative offset = -46
 8296: jnz 8243 ; relative offset = -85
 8298: mov  rsi [rdi]
 829b: mov  rdi [rax]
 829e: jmp 49f0 ; relative offset = -14515
 82a3: UNKNOWN-INSTRUCTION
 82a6: nop  [0x00000000 + rax + rax * 1]
 82ae: UNKNOWN-INSTRUCTION
 82af: nop 
 82b0: UNKNOWN-INSTRUCTION
 82b4: mov  rsi [rsi]
 82b7: mov  rdi [rdi]
 82ba: jmp 49f0 ; relative offset = -14543
 82bf: nop 
 82c0: UNKNOWN-INSTRUCTION
 82c4: mov  r8 rsi
 82c7: mov  rsi [rdi]
 82ca: mov  rdi [r8]
 82cd: jmp 49f0 ; relative offset = -14562
 82d2: UNKNOWN-INSTRUCTION
 82d5: nop  [0x00000000 + rax + rax * 1]
 82dd: nop  [rax]
 82e0: UNKNOWN-INSTRUCTION
 82e4: mov  edx [rsi + 0x000000a8]
 82ea: mov  ecx [rdi + 0x000000a8]
 82f0: cmp  edx 0x03
 82f3: UNKNOWN-INSTRUCTION
 82f5: rol  [rbx + 0x940f09fa] 0xc2
 82fc: or  eax edx
 82fe: cmp  ecx 0x03
 8301: jz 8330 ; relative offset = 45
 8303: cmp  ecx 0x09
 8306: jz 8330 ; relative offset = 40
 8308: mov  edx [rdi + 0x000000ac]
 830e: and  edx 0x0000f000
 8314: UNKNOWN-INSTRUCTION
 8316: jz 8360 ; relative offset = 72
 8318: cmp  edx 0x00004000
 831e: jz 8334 ; relative offset = 20
 8320: mov  eax 0x00000001
 8325: ret 
 8326: UNKNOWN-INSTRUCTION
 8328: nop  [0x00000000 + rax + rax * 1]
 8330: UNKNOWN-INSTRUCTION
 8332: jz 8340 ; relative offset = 12
 8334: mov  rsi [rsi]
 8337: mov  rdi [rdi]
 833a: jmp 49f0 ; relative offset = -14671
 833f: nop 
 8340: mov  eax [rsi + 0x000000ac]
 8346: and  eax 0x0000f000
 834b: UNKNOWN-INSTRUCTION
 8350: jz 8334 ; relative offset = -30
 8352: mov  eax 0xffffffff
 8357: ret 
 8358: nop  [0x00000000 + rax + rax * 1]
 8360: mov  eax [rsi + 0x000000ac]
 8366: and  eax 0x0000f000
 836b: UNKNOWN-INSTRUCTION
 8370: jz 8318 ; relative offset = -90
 8372: cmp  edx 0x00004000
 8378: jz 8352 ; relative offset = -40
 837a: mov  rsi [rsi]
 837d: mov  rdi [rdi]
 8380: jmp 49f0 ; relative offset = -14741
 8385: UNKNOWN-INSTRUCTION
 8388: nop  [0x00000000 + rax + rax * 1]
 8390: UNKNOWN-INSTRUCTION
 8394: mov  rax rsi
 8397: mov  esi [rdi + 0x000000a8]
 839d: mov  ecx [rax + 0x000000a8]
 83a3: cmp  ecx 0x03
 83a6: UNKNOWN-INSTRUCTION
 83a8: ret  0xf983
 83ab: or  [rdi] ecx
 83ad: UNKNOWN-INSTRUCTION
 83ae: ror  [rcx] 0xca
 83b1: cmp  esi 0x03
 83b4: jz 83e0 ; relative offset = 42
 83b6: cmp  esi 0x09
 83b9: jz 83e0 ; relative offset = 37
 83bb: mov  ecx [rdi + 0x000000ac]
 83c1: and  ecx 0x0000f000
 83c7: UNKNOWN-INSTRUCTION
 83c9: jz 8410 ; relative offset = 69
 83cb: cmp  ecx 0x00004000
 83d1: jz 83e4 ; relative offset = 17
 83d3: mov  eax 0x00000001
 83d8: ret 
 83d9: nop  [rax + 0x00000000]
 83e0: UNKNOWN-INSTRUCTION
 83e2: jz 83f0 ; relative offset = 12
 83e4: mov  rsi [rdi]
 83e7: mov  rdi [rax]
 83ea: jmp 49f0 ; relative offset = -14847
 83ef: nop 
 83f0: mov  edx [rax + 0x000000ac]
 83f6: and  edx 0x0000f000
 83fc: cmp  edx 0x00004000
 8402: jz 83e4 ; relative offset = -32
 8404: mov  eax 0xffffffff
 8409: ret 
 840a: UNKNOWN-INSTRUCTION
 840b: nop  [0 + rax + rax * 1]
 8410: mov  edx [rax + 0x000000ac]
 8416: and  edx 0x0000f000
 841c: cmp  edx 0x00004000
 8422: jz 83cb ; relative offset = -89
 8424: cmp  ecx 0x00004000
 842a: jz 8404 ; relative offset = -40
 842c: mov  rsi [rdi]
 842f: mov  rdi [rax]
 8432: jmp 49f0 ; relative offset = -14919
 8437: UNKNOWN-INSTRUCTION
 8438: nop  [0x00000000 + rax + rax * 1]
 8440: push  esi
 8442: push  ebp
 8444: push  esp
 8446: push  ebp
 8447: mov  rbp rsi
 844a: push  ebx
 844b: mov  rbx rdi
 844e: sub  rsp 0x20
 8452: UNKNOWN-INSTRUCTION
 8453: mov  rax 0x00000028
 845b: mov  [24 + rsp] rax
 8460: xor  eax eax
 8462: call 49f0 ; relative offset = -14967
 8467: mov  r12d eax
 846a: UNKNOWN-INSTRUCTION
 846c: jz 84a2 ; relative offset = 52
 846e: movzx  eax [rbx]
 8471: UNKNOWN-INSTRUCTION
 8472: ror  [rdi] 0x84
 8475: and  eax [rdx]
 8477: UNKNOWN-INSTRUCTION
 8479: movzx  edx [rbp + 0]
 847d: UNKNOWN-INSTRUCTION
 847f: jz 849c ; relative offset = 27
 8481: UNKNOWN-INSTRUCTION
 8484: jnz 8490 ; relative offset = 10
 8486: UNKNOWN-INSTRUCTION
 8487: jpo 848a ; relative offset = 1
 8489: UNKNOWN-INSTRUCTION
 848a: jz 869c ; relative offset = 524
 8490: UNKNOWN-INSTRUCTION
 8491: jnl 8493 ; relative offset = 0
 8493: UNKNOWN-INSTRUCTION
 8494: jnz 84d0 ; relative offset = 58
 8496: UNKNOWN-INSTRUCTION
 8497: jnl 849a ; relative offset = 1
 8499: UNKNOWN-INSTRUCTION
 849a: jnz 84d0 ; relative offset = 52
 849c: mov  esp 0x00000001
 84a2: mov  rax [24 + rsp]
 84a7: UNKNOWN-INSTRUCTION
 84a8: sub  rax 0x00000028
 84b0: jnz 8800 ; relative offset = 842
 84b6: add  rsp 0x20
 84ba: mov  eax r12d
 84bd: pop  ebx
 84be: pop  ebp
 84bf: pop  esp
 84c1: pop  ebp
 84c3: pop  esi
 84c5: ret 
 84c6: UNKNOWN-INSTRUCTION
 84c8: nop  [0x00000000 + rax + rax * 1]
 84d0: UNKNOWN-INSTRUCTION
 84d3: jnz 84ec ; relative offset = 23
 84d5: movzx  ecx [rbx + 1]
 84d9: mov  esi 0x0000002e
 84de: UNKNOWN-INSTRUCTION
 84e0: jnz 84ec ; relative offset = 10
 84e2: UNKNOWN-INSTRUCTION
 84e3: jpo 84e7 ; relative offset = 2
 84e5: UNKNOWN-INSTRUCTION
 84e6: jz 869c ; relative offset = 432
 84ec: UNKNOWN-INSTRUCTION
 84ed: jnl 84ef ; relative offset = 0
 84ef: UNKNOWN-INSTRUCTION
 84f0: jz 8670 ; relative offset = 378
 84f6: cmp  unknown 0x2e
 84f8: UNKNOWN-INSTRUCTION
 84fa: rol  [rax + 0x08742efa] 0x84
 8501: leave 
 8502: jnz 869c ; relative offset = 404
 8508: UNKNOWN-INSTRUCTION
 850d: ret  0x2e3c
 8510: jz 8788 ; relative offset = 626
 8516: UNKNOWN-INSTRUCTION
 8518: jnz 849c ; relative offset = -126
 851a: lea  rdi 
 851f: mov  [16 + rsp] rbx
 8524: mov  [8 + rsp] rbp
 8529: call 6ee0 ; relative offset = -5710
 852e: lea  rdi 
 8533: mov  r14 rax
 8536: call 6ee0 ; relative offset = -5723
 853b: mov  r13 rax
 853e: UNKNOWN-INSTRUCTION
 8541: jz 87a8 ; relative offset = 609
 8547: sub  r14 rbx
 854a: UNKNOWN-INSTRUCTION
 854c: ror  [rdi] 0x84
 854f: mov  edx 0x49000002
 8554: sub  ebp ebp
 8556: UNKNOWN-INSTRUCTION
 8558: out  dx unknown
 8559: jz 87d0 ; relative offset = 625
 855f: xor  ecx ecx
 8561: xor  edx edx
 8563: UNKNOWN-INSTRUCTION
 8566: jnbe  0x18
 8568: UNKNOWN-INSTRUCTION
 856b: jna 84a2 ; relative offset = -207
 8571: UNKNOWN-INSTRUCTION
 8574: jna 85c4 ; relative offset = 78
 8576: UNKNOWN-INSTRUCTION
 8578: nop  [0x00000000 + rax + rax * 1]
 8580: movzx  eax [rbx + rdx * 1]
 8584: movsx  esi al
 8587: sub  esi 0x30
 858a: cmp  esi 0x09
 858d: jna 85c4 ; relative offset = 53
 858f: movzx  esi al
 8592: lea  edi 
 8595: cmp  edi 0x09
 8598: jnbe  0x60
 859a: UNKNOWN-INSTRUCTION
 859d: jz 85b7 ; relative offset = 24
 859f: movzx  r8 [RBP + 0 + rcx * 1]
 85a5: mov  esi r8d
 85a8: movzx  r8 r8b
 85ac: xor  edi edi
 85ae: lea  eax 
 85b2: cmp  eax 0x09
 85b5: jnbe  0x7d
 85b7: add  rdx 0x01
 85bb: add  rcx 0x01
 85bf: UNKNOWN-INSTRUCTION
 85c2: jnbe  0xbc
 85c4: movzx  r8 [RBP + 0 + rcx * 1]
 85ca: movsx  rsi r8b
 85ce: UNKNOWN-INSTRUCTION
 85d1: jna 86b4 ; relative offset = 221
 85d7: movsx  rax r8b
 85db: sub  eax 0x30
 85de: cmp  eax 0x09
 85e1: jna 86b4 ; relative offset = 205
 85e7: UNKNOWN-INSTRUCTION
 85ea: jz 85a8 ; relative offset = -68
 85ec: movzx  esi [rbx + rdx * 1]
 85f0: lea  edi 
 85f3: mov  eax esi
 85f5: cmp  edi 0x09
 85f8: jna 85a5 ; relative offset = -85
 85fa: mov  edi esi
 85fc: cmp  unknown 0x5a
 85fe: jnle 8750 ; relative offset = 332
 8604: cmp  unknown 0x40
 8606: jnle 875e ; relative offset = 338
 860c: cmp  unknown 0x7e
 860e: jz 87f8 ; relative offset = 484
 8614: lea  edi 
 861a: UNKNOWN-INSTRUCTION
 861d: jz 8662 ; relative offset = 67
 861f: movzx  esi [RBP + 0 + rcx * 1]
 8624: xor  eax eax
 8626: movzx  r8 sil
 862a: lea  r9d 
 862e: cmp  r9d 0x09
 8632: jna 8658 ; relative offset = 36
 8634: mov  eax r8d
 8637: UNKNOWN-INSTRUCTION
 863a: pop  edx
 863b: jnle 8770 ; relative offset = 303
 8641: UNKNOWN-INSTRUCTION
 8643: inc  [rax + 127]
 8646: adc  [rax + 128] eax
 8649: UNKNOWN-INSTRUCTION
 864a: jng 865b ; relative offset = 15
 864c: UNKNOWN-INSTRUCTION
 864e: add  [rax] eax
 8650: UNKNOWN-INSTRUCTION
 8651: lea  eax 
 8658: UNKNOWN-INSTRUCTION
 8659: clc 
 865a: jz 85b7 ; relative offset = -169
 8660: sub  edi eax
 8662: UNKNOWN-INSTRUCTION
 8663: inc  [69 + rdi + rcx * 1]
 8667: out  0xe9 eax
 8669: xor  eax 0x0ffffffe
 866e: UNKNOWN-INSTRUCTION
 8670: movzx  ecx [rbp + 1]
 8674: mov  esi 0x0000002e
 8679: UNKNOWN-INSTRUCTION
 867b: jnz 84f6 ; relative offset = -395
 8681: UNKNOWN-INSTRUCTION
 8682: jnl 8686 ; relative offset = 2
 8684: UNKNOWN-INSTRUCTION
 8685: jz 849c ; relative offset = -495
 868b: jmp 84f6 ; relative offset = -410
 8690: sub  esi 0x30
 8693: cmp  esi 0x09
 8696: UNKNOWN-INSTRUCTION
 869b: inc  [rcx + 188]
 869e: UNKNOWN-INSTRUCTION
 86a1: jmp  rcx
 86a3: UNKNOWN-INSTRUCTION
 86a6: jmp  [rsi + 15]
 86a9: UNKNOWN-INSTRUCTION
 86b0: add  rdx 0x01
 86b4: movsx  edi [rbx + rdx * 1]
 86b8: UNKNOWN-INSTRUCTION
 86ba: push  [rax]
 86bc: jz 86b0 ; relative offset = -14
 86be: UNKNOWN-INSTRUCTION
 86c0: clc 
 86c1: UNKNOWN-INSTRUCTION
 86c2: jnz 86d7 ; relative offset = 19
 86c4: nop  [rax + 0]
 86c8: add  rcx 0x01
 86cc: movsx  esi [RBP + 0 + rcx * 1]
 86d1: UNKNOWN-INSTRUCTION
 86d5: jz 86c8 ; relative offset = -15
 86d7: lea  eax 
 86da: cmp  eax 0x09
 86dd: jnbe  0xb1
 86df: mov  r8 rcx
 86e2: mov  rax rdx
 86e5: xor  r10d r10d
 86e8: sub  r8 rdx
 86eb: lea  r9 
 86f0: lea  r8d 
 86f4: cmp  r8d 0x09
 86f8: UNKNOWN-INSTRUCTION
 86fd: jmp  [rcx]
 86ff: test  [rbp + 133] 0x440f44d2
 8706: UNKNOWN-INSTRUCTION
 8707: add  rax 0x01
 870b: movsx  edi [rbx + rax * 1]
 870f: mov  rsi rax
 8712: sub  rsi rdx
 8715: lea  r8d 
 8719: lea  r11 
 871d: movsx  rsi [r9 + rax * 1]
 8722: cmp  r8d 0x09
 8726: jna 86f0 ; relative offset = -56
 8728: movsx  rdx sil
 872c: sub  edx 0x30
 872f: cmp  edx 0x09
 8732: jna 869c ; relative offset = -156
 8738: UNKNOWN-INSTRUCTION
 873a: ror  [rdi] cl
 873c: UNKNOWN-INSTRUCTION
 8741: mov  rdx rax
 8744: mov  rcx r11
 8747: jmp 8563 ; relative offset = -489
 874c: nop  [rax + 0]
 8750: lea  r8d 
 8754: UNKNOWN-INSTRUCTION
 8756: clc 
 8757: sbb  [rdi] ecx
 8759: UNKNOWN-INSTRUCTION
 875a: scasb 
 875b: UNKNOWN-INSTRUCTION
 875d: push  [rcx]
 875f: ror  [rcx + 57] 0xcd
 8763: jnz 861f ; relative offset = -330
 8769: jmp 8658 ; relative offset = -278
 876e: UNKNOWN-INSTRUCTION
 876f: nop 
 8770: lea  r9d 
 8774: UNKNOWN-INSTRUCTION
 8776: stc 
 8777: sbb  [rdi] ecx
 8779: UNKNOWN-INSTRUCTION
 877d: jmp  rcx
 877f: UNKNOWN-INSTRUCTION
 8782: dec  [rdi]
 8784: UNKNOWN-INSTRUCTION
 8789: ror  [rdi] cl
 878b: UNKNOWN-INSTRUCTION
 878c: mov  dil bpl
 878e: UNKNOWN-INSTRUCTION
 878f: inc  [0xfd82840f + rcx + rcx * 8]
 8796: UNKNOWN-INSTRUCTION
 8797: dec  [rax + 131]
 879a: ret 
 879b: add  [rax + 131] ecx
 879e: UNKNOWN-INSTRUCTION
 879f: add  ecx ebp
 87a1: jnz 87a0 ; relative offset = -3
 87a3: UNKNOWN-INSTRUCTION
 87a4: dec  [rdi]
 87a6: UNKNOWN-INSTRUCTION
 87a8: mov  r14 [16 + rsp]
 87ad: sub  r14 rbx
 87b0: UNKNOWN-INSTRUCTION
 87b2: ror  [rdi] 0x85
 87b5: UNKNOWN-INSTRUCTION
 87b8: dec  [108 + rbx + rcx * 4]
 87bc: and  unknown 0x08
 87be: sub  r13 rbp
 87c1: jmp 855f ; relative offset = -615
 87c6: UNKNOWN-INSTRUCTION
 87c8: nop  [0x00000000 + rax + rax * 1]
 87d0: mov  rdx r14
 87d3: mov  rsi rbp
 87d6: mov  rdi rbx
 87d9: call 4720 ; relative offset = -16574
 87de: UNKNOWN-INSTRUCTION
 87df: ror  [rdi] 0x85
 87e2: jns 87e1 ; relative offset = -3
 87e4: UNKNOWN-INSTRUCTION
 87e5: dec  [116 + rbx + rcx * 4]
 87e9: and  unknown 0x10
 87eb: sub  r14 rbx
 87ee: jmp 87b9 ; relative offset = -55
 87f0: or  eax 0xff
 87f3: jmp 8658 ; relative offset = -416
 87f8: or  edi 0xff
 87fb: jmp 861a ; relative offset = -486
 8800: call 4890 ; relative offset = -16245
 8805: mov  r12d r10d
 8808: jmp 84a2 ; relative offset = -875
 880d: mov  r13 [8 + rsp]
 8812: jmp 8553 ; relative offset = -708
 8817: UNKNOWN-INSTRUCTION
 8818: nop  [0x00000000 + rax + rax * 1]
 8820: UNKNOWN-INSTRUCTION
 8824: mov  rsi [rsi]
 8827: mov  rdi [rdi]
 882a: jmp 8440 ; relative offset = -1007
 882f: nop 
 8830: UNKNOWN-INSTRUCTION
 8834: mov  r8 rsi
 8837: mov  rsi [rdi]
 883a: mov  rdi [r8]
 883d: jmp 8440 ; relative offset = -1026
 8842: UNKNOWN-INSTRUCTION
 8845: nop  [0x00000000 + rax + rax * 1]
 884d: nop  [rax]
 8850: UNKNOWN-INSTRUCTION
 8854: mov  edx [rsi + 0x000000a8]
 885a: mov  ecx [rdi + 0x000000a8]
 8860: cmp  edx 0x09
 8863: UNKNOWN-INSTRUCTION
 8865: rol  [rbx + 0x940f03fa] 0xc2
 886c: or  eax edx
 886e: cmp  ecx 0x03
 8871: jz 88a0 ; relative offset = 45
 8873: cmp  ecx 0x09
 8876: jz 88a0 ; relative offset = 40
 8878: mov  edx [rdi + 0x000000ac]
 887e: and  edx 0x0000f000
 8884: UNKNOWN-INSTRUCTION
 8886: jz 88d0 ; relative offset = 72
 8888: cmp  edx 0x00004000
 888e: jz 88a4 ; relative offset = 20
 8890: mov  eax 0x00000001
 8895: ret 
 8896: UNKNOWN-INSTRUCTION
 8898: nop  [0x00000000 + rax + rax * 1]
 88a0: UNKNOWN-INSTRUCTION
 88a2: jz 88b0 ; relative offset = 12
 88a4: mov  rsi [rsi]
 88a7: mov  rdi [rdi]
 88aa: jmp 8440 ; relative offset = -1135
 88af: nop 
 88b0: mov  eax [rsi + 0x000000ac]
 88b6: and  eax 0x0000f000
 88bb: UNKNOWN-INSTRUCTION
 88c0: jz 88a4 ; relative offset = -30
 88c2: mov  eax 0xffffffff
 88c7: ret 
 88c8: nop  [0x00000000 + rax + rax * 1]
 88d0: mov  eax [rsi + 0x000000ac]
 88d6: and  eax 0x0000f000
 88db: UNKNOWN-INSTRUCTION
 88e0: jz 8888 ; relative offset = -90
 88e2: cmp  edx 0x00004000
 88e8: jz 88c2 ; relative offset = -40
 88ea: mov  rsi [rsi]
 88ed: mov  rdi [rdi]
 88f0: jmp 8440 ; relative offset = -1205
 88f5: UNKNOWN-INSTRUCTION
 88f8: nop  [0x00000000 + rax + rax * 1]
 8900: UNKNOWN-INSTRUCTION
 8904: mov  rax rsi
 8907: mov  esi [rdi + 0x000000a8]
 890d: mov  ecx [rax + 0x000000a8]
 8913: cmp  ecx 0x09
 8916: UNKNOWN-INSTRUCTION
 8918: ret  0xf983
 891b: add  ecx [rdi]
 891d: UNKNOWN-INSTRUCTION
 891e: ror  [rcx] 0xca
 8921: cmp  esi 0x03
 8924: jz 8950 ; relative offset = 42
 8926: cmp  esi 0x09
 8929: jz 8950 ; relative offset = 37
 892b: mov  ecx [rdi + 0x000000ac]
 8931: and  ecx 0x0000f000
 8937: UNKNOWN-INSTRUCTION
 8939: jz 8980 ; relative offset = 69
 893b: cmp  ecx 0x00004000
 8941: jz 8954 ; relative offset = 17
 8943: mov  eax 0x00000001
 8948: ret 
 8949: nop  [rax + 0x00000000]
 8950: UNKNOWN-INSTRUCTION
 8952: jz 8960 ; relative offset = 12
 8954: mov  rsi [rdi]
 8957: mov  rdi [rax]
 895a: jmp 8440 ; relative offset = -1311
 895f: nop 
 8960: mov  edx [rax + 0x000000ac]
 8966: and  edx 0x0000f000
 896c: cmp  edx 0x00004000
 8972: jz 8954 ; relative offset = -32
 8974: mov  eax 0xffffffff
 8979: ret 
 897a: UNKNOWN-INSTRUCTION
 897b: nop  [0 + rax + rax * 1]
 8980: mov  edx [rax + 0x000000ac]
 8986: and  edx 0x0000f000
 898c: cmp  edx 0x00004000
 8992: jz 893b ; relative offset = -89
 8994: cmp  ecx 0x00004000
 899a: jz 8974 ; relative offset = -40
 899c: mov  rsi [rdi]
 899f: mov  rdi [rax]
 89a2: jmp 8440 ; relative offset = -1383
 89a7: UNKNOWN-INSTRUCTION
 89a8: nop  [0x00000000 + rax + rax * 1]
 89b0: UNKNOWN-INSTRUCTION
 89b4: mov  rdx [rsi + 8]
 89b8: xor  eax eax
 89ba: UNKNOWN-INSTRUCTION
 89bc: push  edi
 89bd: UNKNOWN-INSTRUCTION
 89be: jz 89c8 ; relative offset = 8
 89c0: ret 
 89c1: nop  [rax + 0x00000000]
 89c8: mov  rcx [rsi + 16]
 89cc: UNKNOWN-INSTRUCTION
 89d0: jnz 89c0 ; relative offset = -18
 89d2: sub  rsp 0x08
 89d6: mov  rsi [rsi]
 89d9: mov  rdi [rdi]
 89dc: call 49f0 ; relative offset = -16369
 89e1: UNKNOWN-INSTRUCTION
 89e2: ror  [rdi] 0x94
 89e5: ror  [rax + 131] 0xc4
 89e9: UNKNOWN-INSTRUCTION
 89ea: ret 
 89eb: nop  [0 + rax + rax * 1]
 89f0: UNKNOWN-INSTRUCTION
 89f4: mov  edx [rsi + 0x000000a8]
 89fa: mov  ecx [rdi + 0x000000a8]
 8a00: cmp  edx 0x03
 8a03: UNKNOWN-INSTRUCTION
 8a05: rol  [rbx + 0x940f09fa] 0xc2
 8a0c: or  eax edx
 8a0e: cmp  ecx 0x03
 8a11: jz 8a40 ; relative offset = 45
 8a13: cmp  ecx 0x09
 8a16: jz 8a40 ; relative offset = 40
 8a18: mov  edx [rdi + 0x000000ac]
 8a1e: and  edx 0x0000f000
 8a24: UNKNOWN-INSTRUCTION
 8a26: jz 8a60 ; relative offset = 56
 8a28: cmp  edx 0x00004000
 8a2e: jz 8a7a ; relative offset = 74
 8a30: mov  eax 0x00000001
 8a35: ret 
 8a36: UNKNOWN-INSTRUCTION
 8a38: nop  [0x00000000 + rax + rax * 1]
 8a40: UNKNOWN-INSTRUCTION
 8a42: jnz 8a7a ; relative offset = 54
 8a44: mov  eax [rsi + 0x000000ac]
 8a4a: and  eax 0x0000f000
 8a4f: UNKNOWN-INSTRUCTION
 8a54: jz 8a7a ; relative offset = 36
 8a56: mov  eax 0xffffffff
 8a5b: ret 
 8a5c: nop  [rax + 0]
 8a60: mov  eax [rsi + 0x000000ac]
 8a66: and  eax 0x0000f000
 8a6b: UNKNOWN-INSTRUCTION
 8a70: jz 8a28 ; relative offset = -74
 8a72: cmp  edx 0x00004000
 8a78: jz 8a56 ; relative offset = -36
 8a7a: mov  rdx [rdi + 0x00000088]
 8a81: mov  rax [rsi + 0x00000088]
 8a88: mov  rcx [rsi + 0x00000080]
 8a8f: UNKNOWN-INSTRUCTION
 8a91: pop  [rax + 0x7f000000]
 8a97: mov  esi 0xd029967c
 8a9c: jnz 8a5b ; relative offset = -67
 8a9e: mov  rsi [rsi]
 8aa1: mov  rdi [rdi]
 8aa4: jmp 49f0 ; relative offset = -16569
 8aa9: nop  [rax + 0x00000000]
 8ab0: UNKNOWN-INSTRUCTION
 8ab4: mov  rdx [rdi + 0x00000088]
 8abb: mov  rax [rsi + 0x00000088]
 8ac2: mov  rcx [rsi + 0x00000080]
 8ac9: UNKNOWN-INSTRUCTION
 8acb: pop  [rax + 0x7f000000]
 8ad1: UNKNOWN-INSTRUCTION
 8ad2: jnge 8af0 ; relative offset = 28
 8ad4: sub  eax edx
 8ad6: jnz 8ae8 ; relative offset = 16
 8ad8: mov  rsi [rsi]
 8adb: mov  rdi [rdi]
 8ade: jmp 49f0 ; relative offset = -16627
 8ae3: nop  [0 + rax + rax * 1]
 8ae8: ret 
 8ae9: nop  [rax + 0x00000000]
 8af0: mov  eax 0x00000001
 8af5: ret 
 8af6: UNKNOWN-INSTRUCTION
 8af8: nop  [0x00000000 + rax + rax * 1]
 8b00: mov  eax 0xffffffff
 8b05: ret 
 8b06: UNKNOWN-INSTRUCTION
 8b08: nop  [0x00000000 + rax + rax * 1]
 8b10: UNKNOWN-INSTRUCTION
 8b14: mov  rdx rsi
 8b17: mov  rcx [rsi + 0x00000088]
 8b1e: mov  rax [rdi + 0x00000088]
 8b25: mov  rsi [rdi + 0x00000080]
 8b2c: UNKNOWN-INSTRUCTION
 8b2e: mov  dl 0x80
 8b30: UNKNOWN-INSTRUCTION
 8b33: jnle 8b60 ; relative offset = 43
 8b35: jnge 8b58 ; relative offset = 33
 8b37: sub  eax ecx
 8b39: jnz 8b50 ; relative offset = 21
 8b3b: mov  rsi [rdi]
 8b3e: mov  rdi [rdx]
 8b41: jmp 49f0 ; relative offset = -16726
 8b46: UNKNOWN-INSTRUCTION
 8b48: nop  [0x00000000 + rax + rax * 1]
 8b50: ret 
 8b51: nop  [rax + 0x00000000]
 8b58: mov  eax 0x00000001
 8b5d: ret 
 8b5e: UNKNOWN-INSTRUCTION
 8b5f: nop 
 8b60: mov  eax 0xffffffff
 8b65: ret 
 8b66: UNKNOWN-INSTRUCTION
 8b68: nop  [0x00000000 + rax + rax * 1]
 8b70: UNKNOWN-INSTRUCTION
 8b74: mov  rdx rsi
 8b77: mov  esi [rdi + 0x000000a8]
 8b7d: mov  ecx [rdx + 0x000000a8]
 8b83: cmp  ecx 0x03
 8b86: UNKNOWN-INSTRUCTION
 8b88: rol  [rbx + 0x940f09f9] 0xc1
 8b8f: or  eax ecx
 8b91: cmp  esi 0x03
 8b94: jz 8bc0 ; relative offset = 42
 8b96: cmp  esi 0x09
 8b99: jz 8bc0 ; relative offset = 37
 8b9b: mov  ecx [rdi + 0x000000ac]
 8ba1: and  ecx 0x0000f000
 8ba7: UNKNOWN-INSTRUCTION
 8ba9: jz 8be0 ; relative offset = 53
 8bab: cmp  ecx 0x00004000
 8bb1: jz 8bfa ; relative offset = 71
 8bb3: mov  eax 0x00000001
 8bb8: ret 
 8bb9: nop  [rax + 0x00000000]
 8bc0: UNKNOWN-INSTRUCTION
 8bc2: jnz 8bfa ; relative offset = 54
 8bc4: mov  eax [rdx + 0x000000ac]
 8bca: and  eax 0x0000f000
 8bcf: UNKNOWN-INSTRUCTION
 8bd4: jz 8bfa ; relative offset = 36
 8bd6: mov  eax 0xffffffff
 8bdb: ret 
 8bdc: nop  [rax + 0]
 8be0: mov  eax [rdx + 0x000000ac]
 8be6: and  eax 0x0000f000
 8beb: UNKNOWN-INSTRUCTION
 8bf0: jz 8bab ; relative offset = -71
 8bf2: cmp  ecx 0x00004000
 8bf8: jz 8bd6 ; relative offset = -36
 8bfa: mov  rcx [rdx + 0x00000088]
 8c01: mov  rax [rdi + 0x00000088]
 8c08: mov  rsi [rdi + 0x00000080]
 8c0f: UNKNOWN-INSTRUCTION
 8c11: mov  dl 0x80
 8c13: UNKNOWN-INSTRUCTION
 8c16: jnle 8bd6 ; relative offset = -66
 8c18: jnge 8bb3 ; relative offset = -103
 8c1a: sub  eax ecx
 8c1c: jnz 8bdb ; relative offset = -67
 8c1e: mov  rsi [rdi]
 8c21: mov  rdi [rdx]
 8c24: jmp 49f0 ; relative offset = -16953
 8c29: nop  [rax + 0x00000000]
 8c30: UNKNOWN-INSTRUCTION
 8c34: mov  edx [rsi + 0x000000a8]
 8c3a: mov  ecx [rdi + 0x000000a8]
 8c40: cmp  edx 0x03
 8c43: UNKNOWN-INSTRUCTION
 8c45: rol  [rbx + 0x940f09fa] 0xc2
 8c4c: or  eax edx
 8c4e: cmp  ecx 0x03
 8c51: jz 8c80 ; relative offset = 45
 8c53: cmp  ecx 0x09
 8c56: jz 8c80 ; relative offset = 40
 8c58: mov  edx [rdi + 0x000000ac]
 8c5e: and  edx 0x0000f000
 8c64: UNKNOWN-INSTRUCTION
 8c66: jz 8ca0 ; relative offset = 56
 8c68: cmp  edx 0x00004000
 8c6e: jz 8cba ; relative offset = 74
 8c70: mov  eax 0x00000001
 8c75: ret 
 8c76: UNKNOWN-INSTRUCTION
 8c78: nop  [0x00000000 + rax + rax * 1]
 8c80: UNKNOWN-INSTRUCTION
 8c82: jnz 8cba ; relative offset = 54
 8c84: mov  eax [rsi + 0x000000ac]
 8c8a: and  eax 0x0000f000
 8c8f: UNKNOWN-INSTRUCTION
 8c94: jz 8cba ; relative offset = 36
 8c96: mov  eax 0xffffffff
 8c9b: ret 
 8c9c: nop  [rax + 0]
 8ca0: mov  eax [rsi + 0x000000ac]
 8ca6: and  eax 0x0000f000
 8cab: UNKNOWN-INSTRUCTION
 8cb0: jz 8c68 ; relative offset = -74
 8cb2: cmp  edx 0x00004000
 8cb8: jz 8c96 ; relative offset = -36
 8cba: mov  rdx [rdi + 120]
 8cbe: mov  rax [rsi + 120]
 8cc2: mov  rcx [rsi + 112]
 8cc6: UNKNOWN-INSTRUCTION
 8cc9: jo 8d4a ; relative offset = 127
 8ccb: ret  0xa27c
 8cce: sub  eax edx
 8cd0: jnz 8c9b ; relative offset = -55
 8cd2: mov  rsi [rsi]
 8cd5: mov  rdi [rdi]
 8cd8: jmp 49f0 ; relative offset = -17133
 8cdd: nop  [rax]
 8ce0: UNKNOWN-INSTRUCTION
 8ce4: mov  rdx [rdi + 120]
 8ce8: mov  rax [rsi + 120]
 8cec: mov  rcx [rsi + 112]
 8cf0: UNKNOWN-INSTRUCTION
 8cf3: jo 8d74 ; relative offset = 127
 8cf5: sub  dil [41 + rax]
 8cf9: UNKNOWN-INSTRUCTION
 8cfa: jnz 8d10 ; relative offset = 20
 8cfc: mov  rsi [rsi]
 8cff: mov  rdi [rdi]
 8d02: jmp 49f0 ; relative offset = -17175
 8d07: UNKNOWN-INSTRUCTION
 8d08: nop  [0x00000000 + rax + rax * 1]
 8d10: ret 
 8d11: nop  [rax + 0x00000000]
 8d18: mov  eax 0x00000001
 8d1d: ret 
 8d1e: UNKNOWN-INSTRUCTION
 8d1f: nop 
 8d20: mov  eax 0xffffffff
 8d25: ret 
 8d26: UNKNOWN-INSTRUCTION
 8d28: nop  [0x00000000 + rax + rax * 1]
 8d30: UNKNOWN-INSTRUCTION
 8d34: mov  rdx rsi
 8d37: mov  rcx [rsi + 120]
 8d3b: mov  rax [rdi + 120]
 8d3f: mov  rsi [rdi + 112]
 8d43: UNKNOWN-INSTRUCTION
 8d45: jnae 8db7 ; relative offset = 112
 8d47: jnle 8d70 ; relative offset = 39
 8d49: jnge 8d68 ; relative offset = 29
 8d4b: sub  eax ecx
 8d4d: jnz 8d60 ; relative offset = 17
 8d4f: mov  rsi [rdi]
 8d52: mov  rdi [rdx]
 8d55: jmp 49f0 ; relative offset = -17258
 8d5a: UNKNOWN-INSTRUCTION
 8d5b: nop  [0 + rax + rax * 1]
 8d60: ret 
 8d61: nop  [rax + 0x00000000]
 8d68: mov  eax 0x00000001
 8d6d: ret 
 8d6e: UNKNOWN-INSTRUCTION
 8d6f: nop 
 8d70: mov  eax 0xffffffff
 8d75: ret 
 8d76: UNKNOWN-INSTRUCTION
 8d78: nop  [0x00000000 + rax + rax * 1]
 8d80: UNKNOWN-INSTRUCTION
 8d84: mov  edx [rsi + 0x000000a8]
 8d8a: mov  ecx [rdi + 0x000000a8]
 8d90: cmp  edx 0x03
 8d93: UNKNOWN-INSTRUCTION
 8d95: rol  [rbx + 0x940f09fa] 0xc2
 8d9c: or  eax edx
 8d9e: cmp  ecx 0x03
 8da1: jz 8dd0 ; relative offset = 45
 8da3: cmp  ecx 0x09
 8da6: jz 8dd0 ; relative offset = 40
 8da8: mov  edx [rdi + 0x000000ac]
 8dae: and  edx 0x0000f000
 8db4: UNKNOWN-INSTRUCTION
 8db6: jz 8df0 ; relative offset = 56
 8db8: cmp  edx 0x00004000
 8dbe: jz 8e0a ; relative offset = 74
 8dc0: mov  eax 0x00000001
 8dc5: ret 
 8dc6: UNKNOWN-INSTRUCTION
 8dc8: nop  [0x00000000 + rax + rax * 1]
 8dd0: UNKNOWN-INSTRUCTION
 8dd2: jnz 8e0a ; relative offset = 54
 8dd4: mov  eax [rsi + 0x000000ac]
 8dda: and  eax 0x0000f000
 8ddf: UNKNOWN-INSTRUCTION
 8de4: jz 8e0a ; relative offset = 36
 8de6: mov  eax 0xffffffff
 8deb: ret 
 8dec: nop  [rax + 0]
 8df0: mov  eax [rsi + 0x000000ac]
 8df6: and  eax 0x0000f000
 8dfb: UNKNOWN-INSTRUCTION
 8e00: jz 8db8 ; relative offset = -74
 8e02: cmp  edx 0x00004000
 8e08: jz 8de6 ; relative offset = -36
 8e0a: mov  rdx [rdi + 120]
 8e0e: mov  rax [rsi + 120]
 8e12: mov  rcx [rsi + 112]
 8e16: UNKNOWN-INSTRUCTION
 8e19: jo 8e9a ; relative offset = 127
 8e1b: ret  0xa27c
 8e1e: sub  eax edx
 8e20: jnz 8deb ; relative offset = -55
 8e22: mov  rsi [rsi]
 8e25: mov  rdi [rdi]
 8e28: jmp 49f0 ; relative offset = -17469
 8e2d: nop  [rax]
 8e30: UNKNOWN-INSTRUCTION
 8e34: mov  rdx rsi
 8e37: mov  esi [rdi + 0x000000a8]
 8e3d: mov  ecx [rdx + 0x000000a8]
 8e43: cmp  ecx 0x03
 8e46: UNKNOWN-INSTRUCTION
 8e48: rol  [rbx + 0x940f09f9] 0xc1
 8e4f: or  eax ecx
 8e51: cmp  esi 0x03
 8e54: jz 8e80 ; relative offset = 42
 8e56: cmp  esi 0x09
 8e59: jz 8e80 ; relative offset = 37
 8e5b: mov  ecx [rdi + 0x000000ac]
 8e61: and  ecx 0x0000f000
 8e67: UNKNOWN-INSTRUCTION
 8e69: jz 8ea0 ; relative offset = 53
 8e6b: cmp  ecx 0x00004000
 8e71: jz 8eba ; relative offset = 71
 8e73: mov  eax 0x00000001
 8e78: ret 
 8e79: nop  [rax + 0x00000000]
 8e80: UNKNOWN-INSTRUCTION
 8e82: jnz 8eba ; relative offset = 54
 8e84: mov  eax [rdx + 0x000000ac]
 8e8a: and  eax 0x0000f000
 8e8f: UNKNOWN-INSTRUCTION
 8e94: jz 8eba ; relative offset = 36
 8e96: mov  eax 0xffffffff
 8e9b: ret 
 8e9c: nop  [rax + 0]
 8ea0: mov  eax [rdx + 0x000000ac]
 8ea6: and  eax 0x0000f000
 8eab: UNKNOWN-INSTRUCTION
 8eb0: jz 8e6b ; relative offset = -71
 8eb2: cmp  ecx 0x00004000
 8eb8: jz 8e96 ; relative offset = -36
 8eba: mov  rcx [rdx + 120]
 8ebe: mov  rax [rdi + 120]
 8ec2: mov  rsi [rdi + 112]
 8ec6: UNKNOWN-INSTRUCTION
 8ec8: jnae 8f3a ; relative offset = 112
 8eca: jnle 8e96 ; relative offset = -54
 8ecc: jnge 8e73 ; relative offset = -91
 8ece: sub  eax ecx
 8ed0: jnz 8e9b ; relative offset = -55
 8ed2: mov  rsi [rdi]
 8ed5: mov  rdi [rdx]
 8ed8: jmp 49f0 ; relative offset = -17645
 8edd: nop  [rax]
 8ee0: UNKNOWN-INSTRUCTION
 8ee4: mov  edx [rsi + 0x000000a8]
 8eea: mov  ecx [rdi + 0x000000a8]
 8ef0: cmp  edx 0x03
 8ef3: UNKNOWN-INSTRUCTION
 8ef5: rol  [rbx + 0x940f09fa] 0xc2
 8efc: or  eax edx
 8efe: cmp  ecx 0x03
 8f01: jz 8f30 ; relative offset = 45
 8f03: cmp  ecx 0x09
 8f06: jz 8f30 ; relative offset = 40
 8f08: mov  edx [rdi + 0x000000ac]
 8f0e: and  edx 0x0000f000
 8f14: UNKNOWN-INSTRUCTION
 8f16: jz 8f50 ; relative offset = 56
 8f18: cmp  edx 0x00004000
 8f1e: jz 8f6a ; relative offset = 74
 8f20: mov  eax 0x00000001
 8f25: ret 
 8f26: UNKNOWN-INSTRUCTION
 8f28: nop  [0x00000000 + rax + rax * 1]
 8f30: UNKNOWN-INSTRUCTION
 8f32: jnz 8f6a ; relative offset = 54
 8f34: mov  eax [rsi + 0x000000ac]
 8f3a: and  eax 0x0000f000
 8f3f: UNKNOWN-INSTRUCTION
 8f44: jz 8f6a ; relative offset = 36
 8f46: mov  eax 0xffffffff
 8f4b: ret 
 8f4c: nop  [rax + 0]
 8f50: mov  eax [rsi + 0x000000ac]
 8f56: and  eax 0x0000f000
 8f5b: UNKNOWN-INSTRUCTION
 8f60: jz 8f18 ; relative offset = -74
 8f62: cmp  edx 0x00004000
 8f68: jz 8f46 ; relative offset = -36
 8f6a: mov  rdx [rdi + 104]
 8f6e: mov  rax [rsi + 104]
 8f72: mov  rcx [rsi + 96]
 8f76: UNKNOWN-INSTRUCTION
 8f7a: jnle 8f46 ; relative offset = -54
 8f7c: jnge 8f20 ; relative offset = -94
 8f7e: sub  eax edx
 8f80: jnz 8f4b ; relative offset = -55
 8f82: mov  rsi [rsi]
 8f85: mov  rdi [rdi]
 8f88: jmp 49f0 ; relative offset = -17821
 8f8d: nop  [rax]
 8f90: UNKNOWN-INSTRUCTION
 8f94: mov  rdx [rdi + 104]
 8f98: mov  rax [rsi + 104]
 8f9c: mov  rcx [rsi + 96]
 8fa0: UNKNOWN-INSTRUCTION
 8fa4: jnle 8fd0 ; relative offset = 42
 8fa6: jnge 8fc8 ; relative offset = 32
 8fa8: sub  eax edx
 8faa: jnz 8fc0 ; relative offset = 20
 8fac: mov  rsi [rsi]
 8faf: mov  rdi [rdi]
 8fb2: jmp 49f0 ; relative offset = -17863
 8fb7: UNKNOWN-INSTRUCTION
 8fb8: nop  [0x00000000 + rax + rax * 1]
 8fc0: ret 
 8fc1: nop  [rax + 0x00000000]
 8fc8: mov  eax 0x00000001
 8fcd: ret 
 8fce: UNKNOWN-INSTRUCTION
 8fcf: nop 
 8fd0: mov  eax 0xffffffff
 8fd5: ret 
 8fd6: UNKNOWN-INSTRUCTION
 8fd8: nop  [0x00000000 + rax + rax * 1]
 8fe0: UNKNOWN-INSTRUCTION
 8fe4: mov  rdx rsi
 8fe7: mov  rcx [rsi + 104]
 8feb: mov  rax [rdi + 104]
 8fef: mov  rsi [rdi + 96]
 8ff3: UNKNOWN-INSTRUCTION
 8ff5: jnae 9057 ; relative offset = 96
 8ff7: jnle 9020 ; relative offset = 39
 8ff9: jnge 9018 ; relative offset = 29
 8ffb: sub  eax ecx
 8ffd: jnz 9010 ; relative offset = 17
 8fff: mov  rsi [rdi]
 9002: mov  rdi [rdx]
 9005: jmp 49f0 ; relative offset = -17946
 900a: UNKNOWN-INSTRUCTION
 900b: nop  [0 + rax + rax * 1]
 9010: ret 
 9011: nop  [rax + 0x00000000]
 9018: mov  eax 0x00000001
 901d: ret 
 901e: UNKNOWN-INSTRUCTION
 901f: nop 
 9020: mov  eax 0xffffffff
 9025: ret 
 9026: UNKNOWN-INSTRUCTION
 9028: nop  [0x00000000 + rax + rax * 1]
 9030: UNKNOWN-INSTRUCTION
 9034: mov  rdx rsi
 9037: mov  esi [rdi + 0x000000a8]
 903d: mov  ecx [rdx + 0x000000a8]
 9043: cmp  ecx 0x03
 9046: UNKNOWN-INSTRUCTION
 9048: rol  [rbx + 0x940f09f9] 0xc1
 904f: or  eax ecx
 9051: cmp  esi 0x03
 9054: jz 9080 ; relative offset = 42
 9056: cmp  esi 0x09
 9059: jz 9080 ; relative offset = 37
 905b: mov  ecx [rdi + 0x000000ac]
 9061: and  ecx 0x0000f000
 9067: UNKNOWN-INSTRUCTION
 9069: jz 90a0 ; relative offset = 53
 906b: cmp  ecx 0x00004000
 9071: jz 90ba ; relative offset = 71
 9073: mov  eax 0x00000001
 9078: ret 
 9079: nop  [rax + 0x00000000]
 9080: UNKNOWN-INSTRUCTION
 9082: jnz 90ba ; relative offset = 54
 9084: mov  eax [rdx + 0x000000ac]
 908a: and  eax 0x0000f000
 908f: UNKNOWN-INSTRUCTION
 9094: jz 90ba ; relative offset = 36
 9096: mov  eax 0xffffffff
 909b: ret 
 909c: nop  [rax + 0]
 90a0: mov  eax [rdx + 0x000000ac]
 90a6: and  eax 0x0000f000
 90ab: UNKNOWN-INSTRUCTION
 90b0: jz 906b ; relative offset = -71
 90b2: cmp  ecx 0x00004000
 90b8: jz 9096 ; relative offset = -36
 90ba: mov  rcx [rdx + 104]
 90be: mov  rax [rdi + 104]
 90c2: mov  rsi [rdi + 96]
 90c6: UNKNOWN-INSTRUCTION
 90c8: jnae 912a ; relative offset = 96
 90ca: jnle 9096 ; relative offset = -54
 90cc: jnge 9073 ; relative offset = -91
 90ce: sub  eax ecx
 90d0: jnz 909b ; relative offset = -55
 90d2: mov  rsi [rdi]
 90d5: mov  rdi [rdx]
 90d8: jmp 49f0 ; relative offset = -18157
 90dd: nop  [rax]
 90e0: UNKNOWN-INSTRUCTION
 90e4: mov  rdx [rdi + 120]
 90e8: mov  rax [rsi + 120]
 90ec: mov  rcx [rsi + 112]
 90f0: UNKNOWN-INSTRUCTION
 90f3: jo 9174 ; relative offset = 127
 90f5: sub  dil [41 + rax]
 90f9: UNKNOWN-INSTRUCTION
 90fa: jnz 9110 ; relative offset = 20
 90fc: mov  rsi [rsi]
 90ff: mov  rdi [rdi]
 9102: jmp 49f0 ; relative offset = -18199
 9107: UNKNOWN-INSTRUCTION
 9108: nop  [0x00000000 + rax + rax * 1]
 9110: ret 
 9111: nop  [rax + 0x00000000]
 9118: mov  eax 0x00000001
 911d: ret 
 911e: UNKNOWN-INSTRUCTION
 911f: nop 
 9120: mov  eax 0xffffffff
 9125: ret 
 9126: UNKNOWN-INSTRUCTION
 9128: nop  [0x00000000 + rax + rax * 1]
 9130: UNKNOWN-INSTRUCTION
 9134: mov  rdx rsi
 9137: mov  rcx [rsi + 120]
 913b: mov  rax [rdi + 120]
 913f: mov  rsi [rdi + 112]
 9143: UNKNOWN-INSTRUCTION
 9145: jnae 91b7 ; relative offset = 112
 9147: jnle 9170 ; relative offset = 39
 9149: jnge 9168 ; relative offset = 29
 914b: sub  eax ecx
 914d: jnz 9160 ; relative offset = 17
 914f: mov  rsi [rdi]
 9152: mov  rdi [rdx]
 9155: jmp 49f0 ; relative offset = -18282
 915a: UNKNOWN-INSTRUCTION
 915b: nop  [0 + rax + rax * 1]
 9160: ret 
 9161: nop  [rax + 0x00000000]
 9168: mov  eax 0x00000001
 916d: ret 
 916e: UNKNOWN-INSTRUCTION
 916f: nop 
 9170: mov  eax 0xffffffff
 9175: ret 
 9176: UNKNOWN-INSTRUCTION
 9178: nop  [0x00000000 + rax + rax * 1]
 9180: UNKNOWN-INSTRUCTION
 9184: mov  rdx rsi
 9187: mov  esi [rdi + 0x000000a8]
 918d: mov  ecx [rdx + 0x000000a8]
 9193: cmp  ecx 0x03
 9196: UNKNOWN-INSTRUCTION
 9198: rol  [rbx + 0x940f09f9] 0xc1
 919f: or  eax ecx
 91a1: cmp  esi 0x03
 91a4: jz 91d0 ; relative offset = 42
 91a6: cmp  esi 0x09
 91a9: jz 91d0 ; relative offset = 37
 91ab: mov  ecx [rdi + 0x000000ac]
 91b1: and  ecx 0x0000f000
 91b7: UNKNOWN-INSTRUCTION
 91b9: jz 91f0 ; relative offset = 53
 91bb: cmp  ecx 0x00004000
 91c1: jz 920a ; relative offset = 71
 91c3: mov  eax 0x00000001
 91c8: ret 
 91c9: nop  [rax + 0x00000000]
 91d0: UNKNOWN-INSTRUCTION
 91d2: jnz 920a ; relative offset = 54
 91d4: mov  eax [rdx + 0x000000ac]
 91da: and  eax 0x0000f000
 91df: UNKNOWN-INSTRUCTION
 91e4: jz 920a ; relative offset = 36
 91e6: mov  eax 0xffffffff
 91eb: ret 
 91ec: nop  [rax + 0]
 91f0: mov  eax [rdx + 0x000000ac]
 91f6: and  eax 0x0000f000
 91fb: UNKNOWN-INSTRUCTION
 9200: jz 91bb ; relative offset = -71
 9202: cmp  ecx 0x00004000
 9208: jz 91e6 ; relative offset = -36
 920a: mov  rcx [rdx + 120]
 920e: mov  rax [rdi + 120]
 9212: mov  rsi [rdi + 112]
 9216: UNKNOWN-INSTRUCTION
 9218: jnae 928a ; relative offset = 112
 921a: jnle 91e6 ; relative offset = -54
 921c: jnge 91c3 ; relative offset = -91
 921e: sub  eax ecx
 9220: jnz 91eb ; relative offset = -55
 9222: mov  rsi [rdi]
 9225: mov  rdi [rdx]
 9228: jmp 49f0 ; relative offset = -18493
 922d: nop  [rax]
 9230: push  edi
 9232: mov  edx 0x00000005
 9237: push  esi
 9239: push  ebp
 923b: push  esp
 923d: push  ebp
 923e: mov  ebp edi
 9240: push  ebx
 9241: sub  esp 0x00000088
 9248: mov  r12 [RIP + 0x00019209]
 924f: UNKNOWN-INSTRUCTION
 9250: mov  rax 0x00000028
 9258: mov  [120 + rsp] rax
 925d: xor  eax eax
 925f: UNKNOWN-INSTRUCTION
 9260: push  [72 + rcx + rsi * 1]
 9264: lea  esi 
 926a: xor  edi edi
 926c: call 4860 ; relative offset = -18961
 9271: mov  rcx r12
 9274: mov  esi 0x00000001
 9279: mov  rdx rax
 927c: mov  rax [RIP + 0x00018d6d]
 9283: mov  rdi [rax]
 9286: xor  eax eax
 9288: call 4c50 ; relative offset = -17981
 928d: mov  edi ebp
 928f: call 4c30 ; relative offset = -18020
 9294: xor  edi edi
 9296: lea  rsi 
 929d: call 4860 ; relative offset = -19010
 92a2: mov  rdx r12
 92a5: mov  edi 0x00000001
 92aa: mov  rsi rax
 92ad: xor  eax eax
 92af: call 4b40 ; relative offset = -18292
 92b4: mov  rbx [RIP + 0x00018ced]
 92bb: xor  edi edi
 92bd: mov  edx 0x00000005
 92c2: lea  rsi 
 92c9: mov  r12 [rbx]
 92cc: call 4860 ; relative offset = -19057
 92d1: mov  rdi rax
 92d4: mov  rsi r12
 92d7: call 49d0 ; relative offset = -18700
 92dc: mov  r12 [rbx]
 92df: mov  edx 0x00000005
 92e4: xor  edi edi
 92e6: lea  rsi 
 92ed: call 4860 ; relative offset = -19090
 92f2: mov  rsi r12
 92f5: mov  rdi rax
 92f8: call 49d0 ; relative offset = -18733
 92fd: mov  r12 [rbx]
 9300: mov  edx 0x00000005
 9305: xor  edi edi
 9307: lea  rsi 
 930e: call 4860 ; relative offset = -19123
 9313: mov  rsi r12
 9316: mov  rdi rax
 9319: call 49d0 ; relative offset = -18766
 931e: mov  r12 [rbx]
 9321: mov  edx 0x00000005
 9326: xor  edi edi
 9328: lea  rsi 
 932f: call 4860 ; relative offset = -19156
 9334: mov  rsi r12
 9337: mov  rdi rax
 933a: call 49d0 ; relative offset = -18799
 933f: mov  r12 [rbx]
 9342: mov  edx 0x00000005
 9347: xor  edi edi
 9349: lea  rsi 
 9350: call 4860 ; relative offset = -19189
 9355: mov  rsi r12
 9358: mov  rdi rax
 935b: call 49d0 ; relative offset = -18832
 9360: mov  r12 [rbx]
 9363: mov  edx 0x00000005
 9368: xor  edi edi
 936a: lea  rsi 
 9371: call 4860 ; relative offset = -19222
 9376: mov  rsi r12
 9379: mov  rdi rax
 937c: call 49d0 ; relative offset = -18865
 9381: mov  r12 [rbx]
 9384: mov  edx 0x00000005
 9389: xor  edi edi
 938b: lea  rsi 
 9392: call 4860 ; relative offset = -19255
 9397: mov  rsi r12
 939a: mov  rdi rax
 939d: call 49d0 ; relative offset = -18898
 93a2: mov  r12 [rbx]
 93a5: mov  edx 0x00000005
 93aa: xor  edi edi
 93ac: lea  rsi 
 93b3: call 4860 ; relative offset = -19288
 93b8: mov  rsi r12
 93bb: mov  rdi rax
 93be: call 49d0 ; relative offset = -18931
 93c3: mov  r12 [rbx]
 93c6: mov  edx 0x00000005
 93cb: xor  edi edi
 93cd: lea  rsi 
 93d4: call 4860 ; relative offset = -19321
 93d9: mov  rsi r12
 93dc: mov  rdi rax
 93df: call 49d0 ; relative offset = -18964
 93e4: mov  r12 [rbx]
 93e7: mov  edx 0x00000005
 93ec: xor  edi edi
 93ee: lea  rsi 
 93f5: call 4860 ; relative offset = -19354
 93fa: mov  rsi r12
 93fd: mov  rdi rax
 9400: call 49d0 ; relative offset = -18997
 9405: mov  r12 [rbx]
 9408: mov  edx 0x00000005
 940d: xor  edi edi
 940f: lea  rsi 
 9416: call 4860 ; relative offset = -19387
 941b: mov  rsi r12
 941e: mov  rdi rax
 9421: call 49d0 ; relative offset = -19030
 9426: mov  r12 [rbx]
 9429: mov  edx 0x00000005
 942e: xor  edi edi
 9430: lea  rsi 
 9437: call 4860 ; relative offset = -19420
 943c: mov  rsi r12
 943f: mov  rdi rax
 9442: call 49d0 ; relative offset = -19063
 9447: mov  r12 [rbx]
 944a: mov  edx 0x00000005
 944f: xor  edi edi
 9451: lea  rsi 
 9458: call 4860 ; relative offset = -19453
 945d: mov  rsi r12
 9460: mov  rdi rax
 9463: call 49d0 ; relative offset = -19096
 9468: mov  r12 [rbx]
 946b: mov  edx 0x00000005
 9470: xor  edi edi
 9472: lea  rsi 
 9479: call 4860 ; relative offset = -19486
 947e: mov  rsi r12
 9481: mov  rdi rax
 9484: call 49d0 ; relative offset = -19129
 9489: mov  r12 [rbx]
 948c: mov  edx 0x00000005
 9491: xor  edi edi
 9493: lea  rsi 
 949a: call 4860 ; relative offset = -19519
 949f: mov  rsi r12
 94a2: mov  rdi rax
 94a5: call 49d0 ; relative offset = -19162
 94aa: mov  r12 [rbx]
 94ad: mov  edx 0x00000005
 94b2: xor  edi edi
 94b4: lea  rsi 
 94bb: call 4860 ; relative offset = -19552
 94c0: mov  rsi r12
 94c3: mov  rdi rax
 94c6: call 49d0 ; relative offset = -19195
 94cb: mov  r12 [rbx]
 94ce: mov  edx 0x00000005
 94d3: xor  edi edi
 94d5: lea  rsi 
 94dc: call 4860 ; relative offset = -19585
 94e1: mov  rsi r12
 94e4: mov  rdi rax
 94e7: call 49d0 ; relative offset = -19228
 94ec: mov  r12 [rbx]
 94ef: mov  edx 0x00000005
 94f4: xor  edi edi
 94f6: lea  rsi 
 94fd: call 4860 ; relative offset = -19618
 9502: mov  rsi r12
 9505: mov  rdi rax
 9508: call 49d0 ; relative offset = -19261
 950d: mov  r12 [rbx]
 9510: mov  edx 0x00000005
 9515: xor  edi edi
 9517: lea  rsi 
 951e: call 4860 ; relative offset = -19651
 9523: mov  rsi r12
 9526: mov  rdi rax
 9529: call 49d0 ; relative offset = -19294
 952e: mov  r12 [rbx]
 9531: mov  edx 0x00000005
 9536: xor  edi edi
 9538: lea  rsi 
 953f: call 4860 ; relative offset = -19684
 9544: mov  rsi r12
 9547: mov  rdi rax
 954a: call 49d0 ; relative offset = -19327
 954f: xor  edi edi
 9551: mov  r12 [rbx]
 9554: mov  edx 0x00000005
 9559: lea  rsi 
 9560: call 4860 ; relative offset = -19717
 9565: mov  rsi r12
 9568: mov  rdi rax
 956b: call 49d0 ; relative offset = -19360
 9570: mov  r12 [rbx]
 9573: mov  edx 0x00000005
 9578: xor  edi edi
 957a: lea  rsi 
 9581: call 4860 ; relative offset = -19750
 9586: mov  rsi r12
 9589: mov  rdi rax
 958c: call 49d0 ; relative offset = -19393
 9591: mov  r12 [rbx]
 9594: mov  edx 0x00000005
 9599: xor  edi edi
 959b: lea  rsi 
 95a2: call 4860 ; relative offset = -19783
 95a7: mov  rsi r12
 95aa: mov  rdi rax
 95ad: call 49d0 ; relative offset = -19426
 95b2: mov  r12 [rbx]
 95b5: mov  edx 0x00000005
 95ba: xor  edi edi
 95bc: lea  rsi 
 95c3: call 4860 ; relative offset = -19816
 95c8: mov  rsi r12
 95cb: mov  rdi rax
 95ce: call 49d0 ; relative offset = -19459
 95d3: mov  r12 [rbx]
 95d6: mov  edx 0x00000005
 95db: xor  edi edi
 95dd: lea  rsi 
 95e4: call 4860 ; relative offset = -19849
 95e9: mov  rsi r12
 95ec: mov  rdi rax
 95ef: call 49d0 ; relative offset = -19492
 95f4: mov  r12 [rbx]
 95f7: mov  edx 0x00000005
 95fc: xor  edi edi
 95fe: lea  rsi 
 9605: call 4860 ; relative offset = -19882
 960a: mov  rsi r12
 960d: mov  rdi rax
 9610: call 49d0 ; relative offset = -19525
 9615: mov  r12 [rbx]
 9618: mov  edx 0x00000005
 961d: xor  edi edi
 961f: lea  rsi 
 9626: call 4860 ; relative offset = -19915
 962b: mov  rsi r12
 962e: mov  rdi rax
 9631: call 49d0 ; relative offset = -19558
 9636: mov  r12 [rbx]
 9639: mov  edx 0x00000005
 963e: xor  edi edi
 9640: lea  rsi 
 9647: call 4860 ; relative offset = -19948
 964c: mov  rsi r12
 964f: mov  rdi rax
 9652: call 49d0 ; relative offset = -19591
 9657: mov  r12 [rbx]
 965a: mov  edx 0x00000005
 965f: xor  edi edi
 9661: lea  rsi 
 9668: call 4860 ; relative offset = -19981
 966d: mov  rsi r12
 9670: mov  rdi rax
 9673: call 49d0 ; relative offset = -19624
 9678: mov  edx 0x00000005
 967d: mov  r12 [rbx]
 9680: xor  edi edi
 9682: lea  rsi 
 9689: call 4860 ; relative offset = -20014
 968e: mov  rsi r12
 9691: mov  rdi rax
 9694: call 49d0 ; relative offset = -19657
 9699: lea  rax 
 96a0: mov  rdx rsp
 96a3: lea  rcx 
 96aa: mov  [rsp] rax
 96ae: lea  rax 
 96b5: mov  esi 0x0000006c
 96ba: mov  edi 0x00000073
 96bf: mov  [8 + rsp] rax
 96c4: lea  rax 
 96cb: mov  [16 + rsp] rax
 96d0: lea  rax 
 96d7: mov  [24 + rsp] rax
 96dc: lea  rax 
 96e3: mov  [48 + rsp] rcx
 96e8: lea  rcx 
 96ef: mov  [32 + rsp] rax
 96f4: lea  rax 
 96fb: mov  [64 + rsp] rcx
 9700: lea  rcx 
 9707: mov  [40 + rsp] rax
 970c: mov  [56 + rsp] rax
 9711: mov  [72 + rsp] rax
 9716: mov  [80 + rsp] rcx
 971b: mov  [88 + rsp] rax
 9720: mov  [96 + rsp] 0x00000000
 9729: mov  [104 + rsp] 0x00000000
 9732: UNKNOWN-INSTRUCTION
 9733: nop  [0 + rax + rax * 1]
 9738: mov  rax [rdx + 16]
 973c: add  rdx 0x10
 9740: UNKNOWN-INSTRUCTION
 9743: jz 975a ; relative offset = 21
 9745: movzx  ecx [rax]
 9748: UNKNOWN-INSTRUCTION
 974a: jnz 9738 ; relative offset = -20
 974c: movzx  ecx [rax + 1]
 9750: UNKNOWN-INSTRUCTION
 9752: jnz 9738 ; relative offset = -28
 9754: UNKNOWN-INSTRUCTION
 9755: js 9759 ; relative offset = 2
 9757: UNKNOWN-INSTRUCTION
 9758: jnz 9738 ; relative offset = -34
 975a: mov  r12 [rdx + 8]
 975e: lea  rsi 
 9765: mov  edx 0x00000005
 976a: xor  edi edi
 976c: UNKNOWN-INSTRUCTION
 976e: in  unknown 0x0f
 9770: UNKNOWN-INSTRUCTION
 9771: ret 
 9772: UNKNOWN-INSTRUCTION
 9775: call 4860 ; relative offset = -20250
 977a: lea  r13 
 9781: lea  rdx 
 9788: mov  edi 0x00000001
 978d: mov  rsi rax
 9790: mov  rcx r13
 9793: lea  r14 
 979a: xor  eax eax
 979c: call 4b40 ; relative offset = -19553
 97a1: mov  edi 0x00000005
 97a6: xor  esi esi
 97a8: call 4b30 ; relative offset = -19581
 97ad: mov  rdi rax
 97b0: UNKNOWN-INSTRUCTION
 97b3: jz 97ce ; relative offset = 25
 97b5: mov  edx 0x00000003
 97ba: lea  rsi 
 97c1: call 4720 ; relative offset = -20646
 97c6: UNKNOWN-INSTRUCTION
 97c7: ror  [rdi] 0x85
 97ca: UNKNOWN-INSTRUCTION
 97ce: xor  edi edi
 97d0: mov  edx 0x00000005
 97d5: lea  rsi 
 97dc: call 4860 ; relative offset = -20353
 97e1: mov  rdx r13
 97e4: mov  rcx r14
 97e7: mov  edi 0x00000001
 97ec: mov  rsi rax
 97ef: xor  eax eax
 97f1: lea  r13 
 97f8: call 4b40 ; relative offset = -19645
 97fd: UNKNOWN-INSTRUCTION
 9800: lea  rax 
 9807: UNKNOWN-INSTRUCTION
 9809: call ffffffff8d499740 ; relative offset = -1924595919
 980f: xor  eax 0x00012794
 9814: mov  edx 0x00000005
 9819: call 4860 ; relative offset = -20414
 981e: mov  rcx r13
 9821: mov  rdx r12
 9824: mov  edi 0x00000001
 9829: mov  rsi rax
 982c: xor  eax eax
 982e: call 4b40 ; relative offset = -19699
 9833: jmp 928d ; relative offset = -1451
 9838: call 4860 ; relative offset = -20445
 983d: lea  r13 
 9844: mov  edi 0x00000001
 9849: lea  rdx 
 9850: mov  rsi rax
 9853: mov  rcx r13
 9856: xor  eax eax
 9858: call 4b40 ; relative offset = -19741
 985d: mov  edi 0x00000005
 9862: xor  esi esi
 9864: call 4b30 ; relative offset = -19769
 9869: mov  rdi rax
 986c: UNKNOWN-INSTRUCTION
 986f: jz 9886 ; relative offset = 21
 9871: mov  edx 0x00000003
 9876: lea  rsi 
 987d: call 4720 ; relative offset = -20834
 9882: UNKNOWN-INSTRUCTION
 9884: jnz 98c1 ; relative offset = 59
 9886: mov  edx 0x00000005
 988b: lea  rsi 
 9892: xor  edi edi
 9894: call 4860 ; relative offset = -20537
 9899: lea  r12 
 98a0: mov  rdx r13
 98a3: mov  edi 0x00000001
 98a8: mov  rsi rax
 98ab: mov  rcx r12
 98ae: lea  r13 
 98b5: xor  eax eax
 98b7: call 4b40 ; relative offset = -19836
 98bc: jmp 980b ; relative offset = -182
 98c1: lea  r14 
 98c8: mov  r12 r14
 98cb: mov  r15 [rbx]
 98ce: xor  edi edi
 98d0: mov  edx 0x00000005
 98d5: lea  rsi 
 98dc: call 4860 ; relative offset = -20609
 98e1: mov  rdi rax
 98e4: mov  rsi r15
 98e7: call 49d0 ; relative offset = -20252
 98ec: jmp 97ce ; relative offset = -291
 98f1: UNKNOWN-INSTRUCTION
 98f4: nop  [0x00000000 + rax + rax * 1]
 98fc: nop  [rax + 0]
 9900: UNKNOWN-INSTRUCTION
 9904: push  eax
 9905: pop  eax
 9906: mov  edx 0x00000005
 990b: lea  rsi 
 9912: xor  edi edi
 9914: sub  rsp 0x08
 9918: call 4860 ; relative offset = -20669
 991d: lea  rdx 
 9924: mov  esi 0x00000001
 9929: mov  rcx rax
 992c: mov  rax [RIP + 0x000186bd]
 9933: mov  rdi [rax]
 9936: xor  eax eax
 9938: call 4c50 ; relative offset = -19693
 993d: mov  edi [RIP + 0x0001873d]
 9943: call 4c30 ; relative offset = -19736
 9948: nop  [0x00000000 + rax + rax * 1]
 9950: sub  rsp 0x18
 9954: xor  esi esi
 9956: lea  rcx 
 995d: UNKNOWN-INSTRUCTION
 995e: mov  rax 0x00000028
 9966: mov  [8 + rsp] rax
 996b: xor  eax eax
 996d: mov  rdx rsp
 9970: call 14ab0 ; relative offset = 45371
 9975: UNKNOWN-INSTRUCTION
 9977: jz 99b0 ; relative offset = 55
 9979: cmp  eax 0x01
 997c: jnz 99a8 ; relative offset = 42
 997e: mov  [RIP + 0x00018af7] 0xffffffff
 9989: mov  eax 0x00000001
 998e: mov  rdx [8 + rsp]
 9993: UNKNOWN-INSTRUCTION
 9994: sub  rdx 0x00000028
 999c: jnz 99c2 ; relative offset = 36
 999e: add  rsp 0x18
 99a2: ret 
 99a3: nop  [0 + rax + rax * 1]
 99a8: xor  eax eax
 99aa: jmp 998e ; relative offset = -30
 99ac: nop  [rax + 0]
 99b0: mov  rax [rsp]
 99b4: mov  [RIP + 0x00018ac5] rax
 99bb: mov  eax 0x00000001
 99c0: jmp 998e ; relative offset = -52
 99c2: call 4890 ; relative offset = -20791
 99c7: UNKNOWN-INSTRUCTION
 99c8: nop  [0x00000000 + rax + rax * 1]
 99d0: push  esp
 99d2: push  ebp
 99d3: push  ebx
 99d4: mov  rbx rdi
 99d7: sub  rsp 0x10
 99db: UNKNOWN-INSTRUCTION
 99dc: mov  rax 0x00000028
 99e4: mov  [8 + rsp] rax
 99e9: xor  eax eax
 99eb: UNKNOWN-INSTRUCTION
 99ed: dec  [rdi]
 99ef: UNKNOWN-INSTRUCTION
 99f0: and  unknown 0x01
 99f2: UNKNOWN-INSTRUCTION
 99f4: xor  ebp ebp
 99f6: UNKNOWN-INSTRUCTION
 99f9: jnz 9a04 ; relative offset = 9
 99fb: add  rbx 0x01
 99ff: mov  ebp 0x00000004
 9a04: lea  r12 
 9a0b: lea  rsi 
 9a12: mov  rdi rbx
 9a15: mov  rdx r12
 9a18: call 12e40 ; relative offset = 37923
 9a1d: UNKNOWN-INSTRUCTION
 9a1e: sar  [rax + 63] 0x48
 9a22: mov  [RIP + 0x00018884] 0x00000001
 9a2c: cdqe 
 9a2e: or  ebp [r12 + rax * 4]
 9a32: xor  eax eax
 9a34: mov  [RIP + 0x0001887e] ebp
 9a3a: mov  rdx [8 + rsp]
 9a3f: UNKNOWN-INSTRUCTION
 9a40: sub  rdx 0x00000028
 9a48: jnz 9ba9 ; relative offset = 347
 9a4e: add  rsp 0x10
 9a52: pop  ebx
 9a53: pop  ebp
 9a54: pop  esp
 9a56: ret 
 9a57: UNKNOWN-INSTRUCTION
 9a58: nop  [0x00000000 + rax + rax * 1]
 9a60: mov  rsi rsp
 9a63: lea  rcx 
 9a6a: lea  rdx 
 9a71: mov  rdi rbx
 9a74: call 14ab0 ; relative offset = 45111
 9a79: UNKNOWN-INSTRUCTION
 9a7b: jnz 9ac8 ; relative offset = 75
 9a7d: movzx  ecx [rbx]
 9a80: lea  edx 
 9a83: mov  rcx [rsp]
 9a87: UNKNOWN-INSTRUCTION
 9a89: or  [rdi + 20] esi
 9a8c: jmp 9ab6 ; relative offset = 40
 9a8e: UNKNOWN-INSTRUCTION
 9a8f: nop 
 9a90: movzx  esi [rbx + 1]
 9a94: add  rbx 0x01
 9a98: lea  edx 
 9a9b: UNKNOWN-INSTRUCTION
 9a9d: or  [rsi + 22] esi
 9aa0: UNKNOWN-INSTRUCTION
 9aa3: jnz 9a90 ; relative offset = -21
 9aa5: UNKNOWN-INSTRUCTION
 9aa6: jns 9aa7 ; relative offset = -1
 9aa8: jz 9b78 ; relative offset = 201
 9aaf: UNKNOWN-INSTRUCTION
 9ab2: add  [rbx + 0x2d8920cd] 0xfc
 9ab9: UNKNOWN-INSTRUCTION
 9aba: add  [rax] eax
 9abc: mov  rdx [RIP + 0x000187ed]
 9ac3: jmp 9ad9 ; relative offset = 20
 9ac5: nop  [rax]
 9ac8: mov  [RIP + 0x000187e6] 0x00000000
 9ad2: mov  rdx [RIP + 0x000187d7]
 9ad9: UNKNOWN-INSTRUCTION
 9adb: ror  [rdi] cl
 9add: UNKNOWN-INSTRUCTION
 9ade: pop  eax
 9adf: UNKNOWN-INSTRUCTION
 9ae1: dec  [rax + 141]
 9ae4: UNKNOWN-INSTRUCTION
 9ae5: add  edi edi
 9ae7: UNKNOWN-INSTRUCTION
 9ae9: call 46c0 ; relative offset = -21550
 9aee: cmp  rax 0x01
 9af2: sbb  rax rax
 9af5: and  eax 0x00000200
 9afa: add  unknown 0x00000200
 9b00: mov  [RIP + 0x000187a9] rax
 9b07: mov  eax 0x00000004
 9b0c: jmp 9a3a ; relative offset = -215
 9b11: nop  [rax + 0x00000000]
 9b18: lea  rdi 
 9b1f: call 46c0 ; relative offset = -21604
 9b24: mov  rbx rax
 9b27: UNKNOWN-INSTRUCTION
 9b29: ror  [rdi] 0x85
 9b2c: UNKNOWN-INSTRUCTION
 9b2f: dec  [rax + 141]
 9b32: UNKNOWN-INSTRUCTION
 9b33: test  unknown 0xe80000fe
 9b38: UNKNOWN-INSTRUCTION
 9b39: stosw 
 9b3a: UNKNOWN-INSTRUCTION
 9b3b: dec  [rax + 137]
 9b3e: ret 
 9b3f: UNKNOWN-INSTRUCTION
 9b41: ror  [rdi] 0x85
 9b44: lodsb 
 9b45: UNKNOWN-INSTRUCTION
 9b47: dec  [rax + 141]
 9b4a: UNKNOWN-INSTRUCTION
 9b4c: inc  [rax]
 9b4e: UNKNOWN-INSTRUCTION
 9b4f: call 46c0 ; relative offset = -21652
 9b54: UNKNOWN-INSTRUCTION
 9b57: jz 9b8d ; relative offset = 52
 9b59: mov  [RIP + 0x0001874c] 0x00000200
 9b64: xor  eax eax
 9b66: mov  [RIP + 0x00018748] 0x00000000
 9b70: jmp 9a3a ; relative offset = -315
 9b75: nop  [rax]
 9b78: or  ebp 0x00000180
 9b7e: UNKNOWN-INSTRUCTION
 9b7f: jns 9b7f ; relative offset = -2
 9b81: imul  ecx [rdi] 0xffff2e85
 9b87: jmp  rcx
 9b89: UNKNOWN-INSTRUCTION
 9b8c: dec  [rax + 199]
 9b8f: add  eax 0x00018718
 9b94: UNKNOWN-INSTRUCTION
 9b95: add  unknown 0x00
 9b97: UNKNOWN-INSTRUCTION
 9b98: xor  eax eax
 9b9a: mov  [RIP + 0x00018714] 0x00000000
 9ba4: jmp 9a3a ; relative offset = -367
 9ba9: call 4890 ; relative offset = -21278
 9bae: UNKNOWN-INSTRUCTION
 9baf: nop 
 9bb0: mov  rsi rdi
 9bb3: lea  rdx 
 9bba: xor  edi edi
 9bbc: jmp 14900 ; relative offset = 44351
 9bc1: UNKNOWN-INSTRUCTION
 9bc4: nop  [0x00000000 + rax + rax * 1]
 9bcc: nop  [rax + 0]
 9bd0: UNKNOWN-INSTRUCTION
 9bd4: push  ebp
 9bd6: push  esp
 9bd8: push  ebp
 9bd9: push  ebx
 9bda: mov  rbx rsi
 9bdd: sub  rsp 0x08
 9be1: mov  edx [rsi + 0x000000a8]
 9be7: mov  ecx [rdi + 0x000000a8]
 9bed: cmp  edx 0x03
 9bf0: UNKNOWN-INSTRUCTION
 9bf2: rol  [rbx + 0x940f09fa] 0xc2
 9bf9: or  eax edx
 9bfb: cmp  ecx 0x03
 9bfe: jz 9c30 ; relative offset = 48
 9c00: cmp  ecx 0x09
 9c03: jz 9c30 ; relative offset = 43
 9c05: mov  edx [rdi + 0x000000ac]
 9c0b: and  edx 0x0000f000
 9c11: UNKNOWN-INSTRUCTION
 9c13: jz 9c60 ; relative offset = 75
 9c15: cmp  edx 0x00004000
 9c1b: jz 9c7a ; relative offset = 93
 9c1d: mov  eax 0x00000001
 9c22: add  rsp 0x08
 9c26: pop  ebx
 9c27: pop  ebp
 9c28: pop  esp
 9c2a: pop  ebp
 9c2c: ret 
 9c2d: nop  [rax]
 9c30: UNKNOWN-INSTRUCTION
 9c32: jnz 9c7a ; relative offset = 70
 9c34: mov  eax [rbx + 0x000000ac]
 9c3a: and  eax 0x0000f000
 9c3f: UNKNOWN-INSTRUCTION
 9c44: jz 9c7a ; relative offset = 52
 9c46: add  rsp 0x08
 9c4a: mov  eax 0xffffffff
 9c4f: pop  ebx
 9c50: pop  ebp
 9c51: pop  esp
 9c53: pop  ebp
 9c55: ret 
 9c56: UNKNOWN-INSTRUCTION
 9c58: nop  [0x00000000 + rax + rax * 1]
 9c60: mov  eax [rsi + 0x000000ac]
 9c66: and  eax 0x0000f000
 9c6b: UNKNOWN-INSTRUCTION
 9c70: jz 9c15 ; relative offset = -93
 9c72: cmp  edx 0x00004000
 9c78: jz 9c46 ; relative offset = -52
 9c7a: mov  r12 [rdi]
 9c7d: mov  esi 0x0000002e
 9c82: mov  rdi r12
 9c85: call 4910 ; relative offset = -21370
 9c8a: mov  r13 [rbx]
 9c8d: mov  esi 0x0000002e
 9c92: mov  rbp rax
 9c95: mov  rdi r13
 9c98: call 4910 ; relative offset = -21389
 9c9d: mov  rsi rax
 9ca0: UNKNOWN-INSTRUCTION
 9ca3: jz 9ce0 ; relative offset = 59
 9ca5: UNKNOWN-INSTRUCTION
 9ca7: in  eax dx
 9ca8: lea  rax 
 9caf: UNKNOWN-INSTRUCTION
 9cb1: call ffffffffe8f025ff ; relative offset = -386954936
 9cb7: xor  eax 0x85ffffad
 9cbc: ror  [rdi] 0x85
 9cbf: pop  edi
 9cc0: UNKNOWN-INSTRUCTION
 9cc2: dec  [rax + 131]
 9cc5: UNKNOWN-INSTRUCTION
 9cc7: mov  rsi r13
 9cca: mov  rdi r12
 9ccd: pop  ebx
 9cce: pop  ebp
 9ccf: pop  esp
 9cd1: pop  ebp
 9cd3: jmp 49f0 ; relative offset = -21224
 9cd8: nop  [0x00000000 + rax + rax * 1]
 9ce0: lea  rsi 
 9ce7: UNKNOWN-INSTRUCTION
 9ce9: in  eax dx
 9cea: jnz 9cb3 ; relative offset = -57
 9cec: jmp 9cc3 ; relative offset = -43
 9cee: UNKNOWN-INSTRUCTION
 9cef: nop 
 9cf0: UNKNOWN-INSTRUCTION
 9cf4: push  ebp
 9cf6: mov  r13 rsi
 9cf9: mov  esi 0x0000002e
 9cfe: push  esp
 9d00: push  ebp
 9d01: mov  r12 [rdi]
 9d04: mov  rdi r12
 9d07: call 4910 ; relative offset = -21500
 9d0c: mov  r13 [r13 + 0]
 9d10: mov  esi 0x0000002e
 9d15: mov  rbp rax
 9d18: mov  rdi r13
 9d1b: call 4910 ; relative offset = -21520
 9d20: UNKNOWN-INSTRUCTION
 9d23: jz 9d50 ; relative offset = 43
 9d25: mov  rsi rax
 9d28: UNKNOWN-INSTRUCTION
 9d2a: in  eax dx
 9d2b: lea  rax 
 9d32: UNKNOWN-INSTRUCTION
 9d34: call ffffffffe8f02682 ; relative offset = -386954936
 9d3a: mov  dl 0xac
 9d3c: UNKNOWN-INSTRUCTION
 9d3d: inc  [rbp + 0x5d1a74c0]
 9d43: pop  esp
 9d45: pop  ebp
 9d47: ret 
 9d48: nop  [0x00000000 + rax + rax * 1]
 9d50: lea  rsi 
 9d57: UNKNOWN-INSTRUCTION
 9d59: in  eax dx
 9d5a: jnz 9d36 ; relative offset = -38
 9d5c: pop  ebp
 9d5d: mov  rsi r13
 9d60: mov  rdi r12
 9d63: pop  esp
 9d65: pop  ebp
 9d67: jmp 49f0 ; relative offset = -21372
 9d6c: nop  [rax + 0]
 9d70: UNKNOWN-INSTRUCTION
 9d74: push  ebp
 9d76: mov  r13 rdi
 9d79: push  esp
 9d7b: push  ebp
 9d7c: mov  r12 [rsi]
 9d7f: mov  esi 0x0000002e
 9d84: mov  rdi r12
 9d87: call 4910 ; relative offset = -21628
 9d8c: mov  r13 [r13 + 0]
 9d90: mov  esi 0x0000002e
 9d95: mov  rbp rax
 9d98: mov  rdi r13
 9d9b: call 4910 ; relative offset = -21648
 9da0: UNKNOWN-INSTRUCTION
 9da3: jz 9dd0 ; relative offset = 43
 9da5: mov  rsi rax
 9da8: UNKNOWN-INSTRUCTION
 9daa: in  eax dx
 9dab: lea  rax 
 9db2: UNKNOWN-INSTRUCTION
 9db4: call ffffffffe8f02702 ; relative offset = -386954936
 9dba: UNKNOWN-INSTRUCTION
 9dbb: lodsb 
 9dbc: UNKNOWN-INSTRUCTION
 9dbd: inc  [rbp + 0x5d1a74c0]
 9dc3: pop  esp
 9dc5: pop  ebp
 9dc7: ret 
 9dc8: nop  [0x00000000 + rax + rax * 1]
 9dd0: lea  rsi 
 9dd7: UNKNOWN-INSTRUCTION
 9dd9: in  eax dx
 9dda: jnz 9db6 ; relative offset = -38
 9ddc: pop  ebp
 9ddd: mov  rsi r13
 9de0: mov  rdi r12
 9de3: pop  esp
 9de5: pop  ebp
 9de7: jmp 49f0 ; relative offset = -21500
 9dec: nop  [rax + 0]
 9df0: UNKNOWN-INSTRUCTION
 9df4: push  ebp
 9df6: push  esp
 9df8: push  ebp
 9df9: push  ebx
 9dfa: mov  rbx rdi
 9dfd: sub  rsp 0x08
 9e01: mov  edx [rsi + 0x000000a8]
 9e07: mov  ecx [rdi + 0x000000a8]
 9e0d: cmp  edx 0x03
 9e10: UNKNOWN-INSTRUCTION
 9e12: rol  [rbx + 0x940f09fa] 0xc2
 9e19: or  eax edx
 9e1b: cmp  ecx 0x03
 9e1e: jz 9e50 ; relative offset = 48
 9e20: cmp  ecx 0x09
 9e23: jz 9e50 ; relative offset = 43
 9e25: mov  edx [rdi + 0x000000ac]
 9e2b: and  edx 0x0000f000
 9e31: UNKNOWN-INSTRUCTION
 9e33: jz 9e80 ; relative offset = 75
 9e35: cmp  edx 0x00004000
 9e3b: jz 9e9a ; relative offset = 93
 9e3d: mov  eax 0x00000001
 9e42: add  rsp 0x08
 9e46: pop  ebx
 9e47: pop  ebp
 9e48: pop  esp
 9e4a: pop  ebp
 9e4c: ret 
 9e4d: nop  [rax]
 9e50: UNKNOWN-INSTRUCTION
 9e52: jnz 9e9a ; relative offset = 70
 9e54: mov  eax [rsi + 0x000000ac]
 9e5a: and  eax 0x0000f000
 9e5f: UNKNOWN-INSTRUCTION
 9e64: jz 9e9a ; relative offset = 52
 9e66: add  rsp 0x08
 9e6a: mov  eax 0xffffffff
 9e6f: pop  ebx
 9e70: pop  ebp
 9e71: pop  esp
 9e73: pop  ebp
 9e75: ret 
 9e76: UNKNOWN-INSTRUCTION
 9e78: nop  [0x00000000 + rax + rax * 1]
 9e80: mov  eax [rsi + 0x000000ac]
 9e86: and  eax 0x0000f000
 9e8b: UNKNOWN-INSTRUCTION
 9e90: jz 9e35 ; relative offset = -93
 9e92: cmp  edx 0x00004000
 9e98: jz 9e66 ; relative offset = -52
 9e9a: mov  r12 [rsi]
 9e9d: mov  esi 0x0000002e
 9ea2: mov  rdi r12
 9ea5: call 4910 ; relative offset = -21914
 9eaa: mov  r13 [rbx]
 9ead: mov  esi 0x0000002e
 9eb2: mov  rbp rax
 9eb5: mov  rdi r13
 9eb8: call 4910 ; relative offset = -21933
 9ebd: mov  rsi rax
 9ec0: UNKNOWN-INSTRUCTION
 9ec3: jz 9f00 ; relative offset = 59
 9ec5: UNKNOWN-INSTRUCTION
 9ec7: in  eax dx
 9ec8: lea  rax 
 9ecf: UNKNOWN-INSTRUCTION
 9ed1: call ffffffffe8f0281f ; relative offset = -386954936
 9ed7: adc  eax 0x85ffffab
 9edc: ror  [rdi] 0x85
 9edf: pop  edi
 9ee0: UNKNOWN-INSTRUCTION
 9ee2: dec  [rax + 131]
 9ee5: UNKNOWN-INSTRUCTION
 9ee7: mov  rsi r13
 9eea: mov  rdi r12
 9eed: pop  ebx
 9eee: pop  ebp
 9eef: pop  esp
 9ef1: pop  ebp
 9ef3: jmp 49f0 ; relative offset = -21768
 9ef8: nop  [0x00000000 + rax + rax * 1]
 9f00: lea  rsi 
 9f07: UNKNOWN-INSTRUCTION
 9f09: in  eax dx
 9f0a: jnz 9ed3 ; relative offset = -57
 9f0c: jmp 9ee3 ; relative offset = -43
 9f0e: UNKNOWN-INSTRUCTION
 9f0f: nop 
 9f10: push  ebp
 9f12: push  esp
 9f14: mov  r12 rdi
 9f17: push  ebp
 9f18: mov  rbp rsi
 9f1b: sub  rsp 0x40
 9f1f: UNKNOWN-INSTRUCTION
 9f20: mov  rax 0x00000028
 9f28: mov  [56 + rsp] rax
 9f2d: xor  eax eax
 9f2f: cmp  rdx 0xff
 9f33: mov  edx 0x00000005
 9f38: jz 9fe0 ; relative offset = 162
 9f3e: lea  rsi 
 9f45: xor  edi edi
 9f47: call 4860 ; relative offset = -22252
 9f4c: mov  r13 rax
 9f4f: mov  rsi r12
 9f52: lea  rdx 
 9f59: mov  edi 0x00000001
 9f5e: call 14900 ; relative offset = 43421
 9f63: mov  rdx rsp
 9f66: mov  rsi rbp
 9f69: xor  edi edi
 9f6b: mov  [rsp] 0x00000008
 9f73: mov  r12 rax
 9f76: mov  [8 + rsp] 0x00000000
 9f7f: mov  [16 + rsp] 0x00000000
 9f88: mov  [24 + rsp] 0x00000000
 9f91: mov  [32 + rsp] 0x00000000
 9f9a: mov  [40 + rsp] 0x00000000
 9fa3: mov  [48 + rsp] 0x00000000
 9fac: call 14900 ; relative offset = 43343
 9fb1: mov  rcx rax
 9fb4: mov  rax [56 + rsp]
 9fb9: UNKNOWN-INSTRUCTION
 9fba: sub  rax 0x00000028
 9fc2: jnz 9ff6 ; relative offset = 50
 9fc4: add  rsp 0x40
 9fc8: mov  r8 r12
 9fcb: mov  rdx r13
 9fce: xor  esi esi
 9fd0: pop  ebp
 9fd1: xor  edi edi
 9fd3: pop  esp
 9fd5: xor  eax eax
 9fd7: pop  ebp
 9fd9: jmp 4ba0 ; relative offset = -21566
 9fde: UNKNOWN-INSTRUCTION
 9fdf: nop 
 9fe0: lea  rsi 
 9fe7: xor  edi edi
 9fe9: call 4860 ; relative offset = -22414
 9fee: mov  r13 rax
 9ff1: jmp 9f4f ; relative offset = -167
 9ff6: call 4890 ; relative offset = -22379
 9ffb: nop  [0 + rax + rax * 1]
 a000: push  edi
 a002: push  esi
 a004: mov  r14 rdx
 a007: mov  rdx rcx
 a00a: push  ebp
 a00c: mov  r13 r8
 a00f: push  esp
 a011: mov  r12 rdi
 a014: push  ebp
 a015: mov  rbp rsi
 a018: mov  rsi r14
 a01b: push  ebx
 a01c: mov  rdi rbp
 a01f: mov  rbx rcx
 a022: sub  rsp 0x18
 a026: call 12e40 ; relative offset = 36373
 a02b: UNKNOWN-INSTRUCTION
 a02d: sar  [rax + 16] 0x48
 a031: add  esp 0x18
 a034: pop  ebx
 a035: pop  ebp
 a036: pop  esp
 a038: pop  ebp
 a03a: pop  esi
 a03c: pop  edi
 a03e: ret 
 a03f: nop 
 a040: mov  rdx rax
 a043: mov  rdi r12
 a046: mov  rsi rbp
 a049: call 9f10 ; relative offset = -318
 a04e: mov  rax [RIP + 0x00017f9b]
 a055: mov  edx 0x00000005
 a05a: xor  edi edi
 a05c: lea  rsi 
 a063: mov  r12 [rax]
 a066: call 4860 ; relative offset = -22539
 a06b: mov  rdi rax
 a06e: mov  rsi r12
 a071: call 49d0 ; relative offset = -22182
 a076: mov  rsi [r14]
 a079: UNKNOWN-INSTRUCTION
 a07c: jz a120 ; relative offset = 158
 a082: mov  rbp rbx
 a085: xor  r10d r10d
 a088: xor  ebx ebx
 a08a: lea  r12 
 a091: lea  r15 
 a098: jmp a0da ; relative offset = 64
 a09a: UNKNOWN-INSTRUCTION
 a09b: nop  [0 + rax + rax * 1]
 a0a0: mov  rdx r12
 a0a3: xor  edi edi
 a0a5: call 14900 ; relative offset = 43094
 a0aa: mov  rdx r15
 a0ad: mov  esi 0x00000001
 a0b2: mov  rcx rax
 a0b5: mov  rax [RIP + 0x00017f34]
 a0bc: mov  rdi [rax]
 a0bf: xor  eax eax
 a0c1: call 4c50 ; relative offset = -21622
 a0c6: mov  r10 rbp
 a0c9: add  rbx 0x01
 a0cd: add  rbp 0x04
 a0d1: mov  rsi [r14 + rbx * 8]
 a0d5: UNKNOWN-INSTRUCTION
 a0d7: div  [72 + rsi + rax * 2]
 a0db: UNKNOWN-INSTRUCTION
 a0dd: jz a0a0 ; relative offset = -63
 a0df: mov  eax [rbp + 0]
 a0e2: UNKNOWN-INSTRUCTION
 a0e4: add  sil [rbp + 185]
 a0e7: mov  rdx r12
 a0ea: xor  edi edi
 a0ec: mov  [8 + rsp] r10
 a0f1: call 14900 ; relative offset = 43018
 a0f6: lea  rdx 
 a0fd: mov  esi 0x00000001
 a102: mov  rcx rax
 a105: mov  rax [RIP + 0x00017ee4]
 a10c: mov  rdi [rax]
 a10f: xor  eax eax
 a111: call 4c50 ; relative offset = -21702
 a116: mov  r10 [8 + rsp]
 a11b: jmp a0c9 ; relative offset = -84
 a11d: nop  [rax]
 a120: mov  rax [RIP + 0x00017ec9]
 a127: mov  rdi [rax]
 a12a: mov  rax [rdi + 40]
 a12e: UNKNOWN-INSTRUCTION
 a132: jnb a14e ; relative offset = 26
 a134: lea  rdx 
 a138: mov  [rdi + 40] rdx
 a13c: mov  [rax] 0x0a
 a13f: call  rdx
 a141: UNKNOWN-INSTRUCTION
 a142: mov  rax 0xffffffff
 a149: jmp a030 ; relative offset = -286
 a14e: mov  esi 0x0000000a
 a153: call 4900 ; relative offset = -22616
 a158: jmp a13f ; relative offset = -27
 a15a: UNKNOWN-INSTRUCTION
 a15b: nop  [0 + rax + rax * 1]
 a160: push  ebp
 a162: push  esp
 a164: mov  r12 rsi
 a167: mov  rsi rdx
 a16a: push  ebx
 a16b: mov  ebx edi
 a16d: xor  edi edi
 a16f: sub  rsp 0x40
 a173: UNKNOWN-INSTRUCTION
 a174: mov  rax 0x00000028
 a17c: mov  [56 + rsp] rax
 a181: xor  eax eax
 a183: mov  rdx rsp
 a186: mov  [rsp] 0x00000004
 a18e: mov  [8 + rsp] 0x00000000
 a197: mov  [16 + rsp] 0x00000000
 a1a0: mov  [24 + rsp] 0x00000000
 a1a9: mov  [32 + rsp] 0x00000000
 a1b2: mov  [40 + rsp] 0x00000000
 a1bb: mov  [48 + rsp] 0x00000000
 a1c4: call 14900 ; relative offset = 42807
 a1c9: mov  r13 rax
 a1cc: call 4710 ; relative offset = -23233
 a1d1: xor  edi edi
 a1d3: mov  rcx r13
 a1d6: mov  rdx r12
 a1d9: mov  esi [rax]
 a1db: xor  eax eax
 a1dd: call 4ba0 ; relative offset = -22082
 a1e2: UNKNOWN-INSTRUCTION
 a1e4: jz a210 ; relative offset = 42
 a1e6: mov  [RIP + 0x0001857c] 0x00000002
 a1f0: mov  rax [56 + rsp]
 a1f5: UNKNOWN-INSTRUCTION
 a1f6: sub  rax 0x00000028
 a1fe: jnz a226 ; relative offset = 38
 a200: add  rsp 0x40
 a204: pop  ebx
 a205: pop  esp
 a207: pop  ebp
 a209: ret 
 a20a: UNKNOWN-INSTRUCTION
 a20b: nop  [0 + rax + rax * 1]
 a210: mov  eax [RIP + 0x00018556]
 a216: UNKNOWN-INSTRUCTION
 a218: jnz a1f0 ; relative offset = -42
 a21a: mov  [RIP + 0x00018548] 0x00000001
 a224: jmp a1f0 ; relative offset = -54
 a226: call 4890 ; relative offset = -22939
 a22b: nop  [0 + rax + rax * 1]
 a230: UNKNOWN-INSTRUCTION
 a234: push  esp
 a236: mov  edx 0x00000005
 a23b: lea  rsi 
 a242: xor  edi edi
 a244: mov  r12 [RIP + 0x0001820d]
 a24b: call 4860 ; relative offset = -23024
 a250: mov  rcx r12
 a253: mov  esi 0x00000001
 a258: mov  rdx rax
 a25b: mov  rax [RIP + 0x00017d8e]
 a262: mov  rdi [rax]
 a265: xor  eax eax
 a267: call 4c50 ; relative offset = -22044
 a26c: mov  edi 0x00000001
 a271: call 4c30 ; relative offset = -22086
 a276: UNKNOWN-INSTRUCTION
 a278: nop  [0x00000000 + rax + rax * 1]
 a280: cmp  [RIP + 0x00018340] 0x00
 a288: push  esp
 a28a: push  ebp
 a28b: push  ebx
 a28c: jz a2e3 ; relative offset = 85
 a28e: xor  ebp ebp
 a290: lea  r12 
 a297: UNKNOWN-INSTRUCTION
 a298: nop  [0x00000000 + rax + rax * 1]
 a2a0: mov  rax [RIP + 0x000181a9]
 a2a7: mov  rbx [rax + rbp * 8]
 a2ab: mov  rdi [rbx]
 a2ae: call 4680 ; relative offset = -23603
 a2b3: mov  rdi [rbx + 8]
 a2b7: call 4680 ; relative offset = -23612
 a2bc: mov  rdi [rbx + 16]
 a2c0: call 4680 ; relative offset = -23621
 a2c5: mov  rdi [rbx + 0x000000b0]
 a2cc: UNKNOWN-INSTRUCTION
 a2ce: out  0x74 eax
 a2d0: add  eax 0xffa5eae8
 a2d5: dec  [rax + 131]
 a2d8: UNKNOWN-INSTRUCTION
 a2d9: add  [rax + 57] ecx
 a2dc: sub  eax 0x000182e7
 a2e1: jnbe  0xbd
 a2e3: pop  ebx
 a2e4: pop  ebp
 a2e5: mov  [RIP + 0x00017fc0] 0x00
 a2ec: mov  [RIP + 0x000182d1] 0x00000000
 a2f7: pop  esp
 a2f9: mov  [RIP + 0x0001814c] 0x00
 a300: mov  [RIP + 0x00017f9e] 0x00000000
 a30a: mov  [RIP + 0x00017f90] 0x00000000
 a314: mov  [RIP + 0x0001812a] 0x00000000
 a31e: mov  [RIP + 0x0001811c] 0x00000000
 a328: mov  [RIP + 0x0001810e] 0x00000000
 a332: mov  [RIP + 0x00018100] 0x00000000
 a33c: mov  [RIP + 0x00017f5a] 0x00000000
 a346: mov  [RIP + 0x000180e8] 0x00000000
 a350: mov  [RIP + 0x000180da] 0x00000000
 a35a: mov  [RIP + 0x000180cc] 0x00000000
 a364: ret 
 a365: UNKNOWN-INSTRUCTION
 a368: nop  [0x00000000 + rax + rax * 1]
 a370: push  esp
 a372: push  ebp
 a373: push  ebx
 a374: UNKNOWN-INSTRUCTION
 a375: push  [65 + rax + rbx * 2]
 a379: mov  esp edi
 a37b: cmp  edi 0x0a
 a37e: jz a390 ; relative offset = 16
 a380: mov  eax r12d
 a383: pop  ebx
 a384: pop  ebp
 a385: pop  esp
 a387: ret 
 a388: nop  [0x00000000 + rax + rax * 1]
 a390: mov  rbp [rsi]
 a393: mov  rbx rsi
 a396: lea  rsi 
 a39d: mov  rdi rbp
 a3a0: call 49f0 ; relative offset = -22965
 a3a5: UNKNOWN-INSTRUCTION
 a3a7: jnz a380 ; relative offset = -41
 a3a9: mov  rdi rbp
 a3ac: mov  esp 0xffffffff
 a3b2: call 48c0 ; relative offset = -23287
 a3b7: mov  [rbx] 0x00000000
 a3be: call 4710 ; relative offset = -23731
 a3c3: mov  [rax] 0x0000003d
 a3c9: jmp a380 ; relative offset = -75
 a3cb: nop  [0 + rax + rax * 1]
 a3d0: call 4710 ; relative offset = -23749
 a3d5: mov  esp 0xffffffff
 a3db: mov  [rax] 0x0000005f
 a3e1: jmp a380 ; relative offset = -99
 a3e3: UNKNOWN-INSTRUCTION
 a3e6: nop  [0x00000000 + rax + rax * 1]
 a3ee: UNKNOWN-INSTRUCTION
 a3ef: nop 
 a3f0: push  ebp
 a3f2: push  esp
 a3f4: push  ebp
 a3f5: mov  rbp rdi
 a3f8: push  ebx
 a3f9: sub  rsp 0x18
 a3fd: mov  rbx [RIP + 0x000181bc]
 a404: UNKNOWN-INSTRUCTION
 a405: mov  rax 0x00000028
 a40d: mov  [8 + rsp] rax
 a412: xor  eax eax
 a414: lea  rax 
 a41b: UNKNOWN-INSTRUCTION
 a422: call 4710 ; relative offset = -23831
 a427: lea  rdi 
 a42c: mov  rdx rbp
 a42f: mov  esi 0x00000002
 a434: mov  r13d [rax]
 a437: mov  r8d [rbx + 4]
 a43b: push  [rbx + 48]
 a43e: mov  r12 rax
 a441: mov  ecx [rbx]
 a443: push  [rbx + 40]
 a446: lea  r9 
 a44a: call 12f30 ; relative offset = 35553
 a44f: mov  [r12] r13d
 a453: pop  edx
 a454: pop  ecx
 a455: movzx  ecx [6 + rsp]
 a45a: UNKNOWN-INSTRUCTION
 a45d: jz a480 ; relative offset = 33
 a45f: mov  eax 0x00000001
 a464: mov  rdx [8 + rsp]
 a469: UNKNOWN-INSTRUCTION
 a46a: sub  rdx 0x00000028
 a472: jnz a493 ; relative offset = 31
 a474: add  rsp 0x18
 a478: pop  ebx
 a479: pop  ebp
 a47a: pop  esp
 a47c: pop  ebp
 a47e: ret 
 a47f: nop 
 a480: mov  rdi rbp
 a483: mov  rbx rax
 a486: call 4880 ; relative offset = -23563
 a48b: UNKNOWN-INSTRUCTION
 a490: shr  bpl 0xd1
 a493: call 4890 ; relative offset = -23560
 a498: nop  [0x00000000 + rax + rax * 1]
 a4a0: UNKNOWN-INSTRUCTION
 a4a4: mov  rdx [rdi + 0x00000088]
 a4ab: mov  rax [rsi + 0x00000088]
 a4b2: mov  rcx [rsi + 0x00000080]
 a4b9: UNKNOWN-INSTRUCTION
 a4bb: pop  [rax + 0x7f000000]
 a4c1: UNKNOWN-INSTRUCTION
 a4c2: jnge a500 ; relative offset = 60
 a4c4: sub  eax edx
 a4c6: jnz a4f8 ; relative offset = 48
 a4c8: push  esp
 a4ca: push  ebp
 a4cb: sub  rsp 0x08
 a4cf: mov  rbp [rdi]
 a4d2: mov  r12 [rsi]
 a4d5: call 4710 ; relative offset = -24010
 a4da: mov  [rax] 0x00000000
 a4e0: add  rsp 0x08
 a4e4: mov  rsi r12
 a4e7: mov  rdi rbp
 a4ea: pop  ebp
 a4eb: pop  esp
 a4ed: jmp 4ad0 ; relative offset = -23074
 a4f2: UNKNOWN-INSTRUCTION
 a4f3: nop  [0 + rax + rax * 1]
 a4f8: ret 
 a4f9: nop  [rax + 0x00000000]
 a500: mov  eax 0x00000001
 a505: ret 
 a506: UNKNOWN-INSTRUCTION
 a508: nop  [0x00000000 + rax + rax * 1]
 a510: mov  eax 0xffffffff
 a515: ret 
 a516: UNKNOWN-INSTRUCTION
 a518: nop  [0x00000000 + rax + rax * 1]
 a520: UNKNOWN-INSTRUCTION
 a524: mov  rdx [rsi + 0x00000088]
 a52b: mov  rax [rdi + 0x00000088]
 a532: mov  rcx [rdi + 0x00000080]
 a539: UNKNOWN-INSTRUCTION
 a53b: mov   [rax + 0x7f000000]
 a541: UNKNOWN-INSTRUCTION
 a542: jnge a580 ; relative offset = 60
 a544: sub  eax edx
 a546: jnz a578 ; relative offset = 48
 a548: push  esp
 a54a: push  ebp
 a54b: sub  rsp 0x08
 a54f: mov  rbp [rsi]
 a552: mov  r12 [rdi]
 a555: call 4710 ; relative offset = -24138
 a55a: mov  [rax] 0x00000000
 a560: add  rsp 0x08
 a564: mov  rsi r12
 a567: mov  rdi rbp
 a56a: pop  ebp
 a56b: pop  esp
 a56d: jmp 4ad0 ; relative offset = -23202
 a572: UNKNOWN-INSTRUCTION
 a573: nop  [0 + rax + rax * 1]
 a578: ret 
 a579: nop  [rax + 0x00000000]
 a580: mov  eax 0x00000001
 a585: ret 
 a586: UNKNOWN-INSTRUCTION
 a588: nop  [0x00000000 + rax + rax * 1]
 a590: mov  eax 0xffffffff
 a595: ret 
 a596: UNKNOWN-INSTRUCTION
 a598: nop  [0x00000000 + rax + rax * 1]
 a5a0: UNKNOWN-INSTRUCTION
 a5a4: mov  edx [rsi + 0x000000a8]
 a5aa: mov  ecx [rdi + 0x000000a8]
 a5b0: cmp  edx 0x03
 a5b3: UNKNOWN-INSTRUCTION
 a5b5: rol  [rbx + 0x940f09fa] 0xc2
 a5bc: or  eax edx
 a5be: cmp  ecx 0x03
 a5c1: jz a5f0 ; relative offset = 45
 a5c3: cmp  ecx 0x09
 a5c6: jz a5f0 ; relative offset = 40
 a5c8: mov  edx [rdi + 0x000000ac]
 a5ce: and  edx 0x0000f000
 a5d4: UNKNOWN-INSTRUCTION
 a5d6: jz a610 ; relative offset = 56
 a5d8: cmp  edx 0x00004000
 a5de: jz a62a ; relative offset = 74
 a5e0: mov  eax 0x00000001
 a5e5: ret 
 a5e6: UNKNOWN-INSTRUCTION
 a5e8: nop  [0x00000000 + rax + rax * 1]
 a5f0: UNKNOWN-INSTRUCTION
 a5f2: jnz a62a ; relative offset = 54
 a5f4: mov  eax [rsi + 0x000000ac]
 a5fa: and  eax 0x0000f000
 a5ff: UNKNOWN-INSTRUCTION
 a604: jz a62a ; relative offset = 36
 a606: mov  eax 0xffffffff
 a60b: ret 
 a60c: nop  [rax + 0]
 a610: mov  eax [rsi + 0x000000ac]
 a616: and  eax 0x0000f000
 a61b: UNKNOWN-INSTRUCTION
 a620: jz a5d8 ; relative offset = -74
 a622: cmp  edx 0x00004000
 a628: jz a606 ; relative offset = -36
 a62a: mov  rdx [rdi + 0x00000088]
 a631: mov  rax [rsi + 0x00000088]
 a638: mov  rcx [rsi + 0x00000080]
 a63f: UNKNOWN-INSTRUCTION
 a641: pop  [rax + 0x7f000000]
 a647: mov  esi 0xd029967c
 a64c: jnz a60b ; relative offset = -67
 a64e: push  esp
 a650: push  ebp
 a651: sub  rsp 0x08
 a655: mov  rbp [rdi]
 a658: mov  r12 [rsi]
 a65b: call 4710 ; relative offset = -24400
 a660: mov  [rax] 0x00000000
 a666: add  rsp 0x08
 a66a: mov  rsi r12
 a66d: mov  rdi rbp
 a670: pop  ebp
 a671: pop  esp
 a673: jmp 4ad0 ; relative offset = -23464
 a678: nop  [0x00000000 + rax + rax * 1]
 a680: UNKNOWN-INSTRUCTION
 a684: mov  ecx [rsi + 0x000000a8]
 a68a: mov  rdx rdi
 a68d: mov  edi [rdi + 0x000000a8]
 a693: cmp  ecx 0x03
 a696: UNKNOWN-INSTRUCTION
 a698: rol  [rbx + 0x940f09f9] 0xc1
 a69f: or  eax ecx
 a6a1: cmp  edi 0x03
 a6a4: jz a6d0 ; relative offset = 42
 a6a6: cmp  edi 0x09
 a6a9: jz a6d0 ; relative offset = 37
 a6ab: mov  ecx [rdx + 0x000000ac]
 a6b1: and  ecx 0x0000f000
 a6b7: UNKNOWN-INSTRUCTION
 a6b9: jz a6f0 ; relative offset = 53
 a6bb: cmp  ecx 0x00004000
 a6c1: jz a70a ; relative offset = 71
 a6c3: mov  eax 0x00000001
 a6c8: ret 
 a6c9: nop  [rax + 0x00000000]
 a6d0: UNKNOWN-INSTRUCTION
 a6d2: jnz a70a ; relative offset = 54
 a6d4: mov  eax [rsi + 0x000000ac]
 a6da: and  eax 0x0000f000
 a6df: UNKNOWN-INSTRUCTION
 a6e4: jz a70a ; relative offset = 36
 a6e6: mov  eax 0xffffffff
 a6eb: ret 
 a6ec: nop  [rax + 0]
 a6f0: mov  eax [rsi + 0x000000ac]
 a6f6: and  eax 0x0000f000
 a6fb: UNKNOWN-INSTRUCTION
 a700: jz a6bb ; relative offset = -71
 a702: cmp  ecx 0x00004000
 a708: jz a6e6 ; relative offset = -36
 a70a: mov  rcx [rsi + 0x00000088]
 a711: mov  rax [rdx + 0x00000088]
 a718: mov  rdi [rdx + 0x00000080]
 a71f: UNKNOWN-INSTRUCTION
 a721: mov  esi 0x00000080
 a726: jnle a6e6 ; relative offset = -66
 a728: jnge a6c3 ; relative offset = -103
 a72a: sub  eax ecx
 a72c: jnz a6eb ; relative offset = -67
 a72e: push  esp
 a730: push  ebp
 a731: sub  rsp 0x08
 a735: mov  rbp [rsi]
 a738: mov  r12 [rdx]
 a73b: call 4710 ; relative offset = -24624
 a740: mov  [rax] 0x00000000
 a746: add  rsp 0x08
 a74a: mov  rsi r12
 a74d: mov  rdi rbp
 a750: pop  ebp
 a751: pop  esp
 a753: jmp 4ad0 ; relative offset = -23688
 a758: nop  [0x00000000 + rax + rax * 1]
 a760: UNKNOWN-INSTRUCTION
 a764: mov  rdx [rdi + 120]
 a768: mov  rax [rsi + 120]
 a76c: mov  rcx [rsi + 112]
 a770: UNKNOWN-INSTRUCTION
 a773: jo a7f4 ; relative offset = 127
 a775: UNKNOWN-INSTRUCTION
 a776: jnge a7b8 ; relative offset = 64
 a778: sub  eax edx
 a77a: jnz a7b0 ; relative offset = 52
 a77c: push  esp
 a77e: push  ebp
 a77f: sub  rsp 0x08
 a783: mov  rbp [rdi]
 a786: mov  r12 [rsi]
 a789: call 4710 ; relative offset = -24702
 a78e: mov  [rax] 0x00000000
 a794: add  rsp 0x08
 a798: mov  rsi r12
 a79b: mov  rdi rbp
 a79e: pop  ebp
 a79f: pop  esp
 a7a1: jmp 4ad0 ; relative offset = -23766
 a7a6: UNKNOWN-INSTRUCTION
 a7a8: nop  [0x00000000 + rax + rax * 1]
 a7b0: ret 
 a7b1: nop  [rax + 0x00000000]
 a7b8: mov  eax 0x00000001
 a7bd: ret 
 a7be: UNKNOWN-INSTRUCTION
 a7bf: nop 
 a7c0: mov  eax 0xffffffff
 a7c5: ret 
 a7c6: UNKNOWN-INSTRUCTION
 a7c8: nop  [0x00000000 + rax + rax * 1]
 a7d0: UNKNOWN-INSTRUCTION
 a7d4: mov  rdx [rsi + 120]
 a7d8: mov  rax [rdi + 120]
 a7dc: mov  rcx [rdi + 112]
 a7e0: UNKNOWN-INSTRUCTION
 a7e3: jo a864 ; relative offset = 127
 a7e5: UNKNOWN-INSTRUCTION
 a7e6: jnge a828 ; relative offset = 64
 a7e8: sub  eax edx
 a7ea: jnz a820 ; relative offset = 52
 a7ec: push  esp
 a7ee: push  ebp
 a7ef: sub  rsp 0x08
 a7f3: mov  rbp [rsi]
 a7f6: mov  r12 [rdi]
 a7f9: call 4710 ; relative offset = -24814
 a7fe: mov  [rax] 0x00000000
 a804: add  rsp 0x08
 a808: mov  rsi r12
 a80b: mov  rdi rbp
 a80e: pop  ebp
 a80f: pop  esp
 a811: jmp 4ad0 ; relative offset = -23878
 a816: UNKNOWN-INSTRUCTION
 a818: nop  [0x00000000 + rax + rax * 1]
 a820: ret 
 a821: nop  [rax + 0x00000000]
 a828: mov  eax 0x00000001
 a82d: ret 
 a82e: UNKNOWN-INSTRUCTION
 a82f: nop 
 a830: mov  eax 0xffffffff
 a835: ret 
 a836: UNKNOWN-INSTRUCTION
 a838: nop  [0x00000000 + rax + rax * 1]
 a840: UNKNOWN-INSTRUCTION
 a844: mov  rdx [rdi + 104]
 a848: mov  rax [rsi + 104]
 a84c: mov  rcx [rsi + 96]
 a850: UNKNOWN-INSTRUCTION
 a854: jnle a8a0 ; relative offset = 74
 a856: jnge a898 ; relative offset = 64
 a858: sub  eax edx
 a85a: jnz a890 ; relative offset = 52
 a85c: push  esp
 a85e: push  ebp
 a85f: sub  rsp 0x08
 a863: mov  rbp [rdi]
 a866: mov  r12 [rsi]
 a869: call 4710 ; relative offset = -24926
 a86e: mov  [rax] 0x00000000
 a874: add  rsp 0x08
 a878: mov  rsi r12
 a87b: mov  rdi rbp
 a87e: pop  ebp
 a87f: pop  esp
 a881: jmp 4ad0 ; relative offset = -23990
 a886: UNKNOWN-INSTRUCTION
 a888: nop  [0x00000000 + rax + rax * 1]
 a890: ret 
 a891: nop  [rax + 0x00000000]
 a898: mov  eax 0x00000001
 a89d: ret 
 a89e: UNKNOWN-INSTRUCTION
 a89f: nop 
 a8a0: mov  eax 0xffffffff
 a8a5: ret 
 a8a6: UNKNOWN-INSTRUCTION
 a8a8: nop  [0x00000000 + rax + rax * 1]
 a8b0: UNKNOWN-INSTRUCTION
 a8b4: mov  rdx [rsi + 104]
 a8b8: mov  rax [rdi + 104]
 a8bc: mov  rcx [rdi + 96]
 a8c0: UNKNOWN-INSTRUCTION
 a8c4: jnle a910 ; relative offset = 74
 a8c6: jnge a908 ; relative offset = 64
 a8c8: sub  eax edx
 a8ca: jnz a900 ; relative offset = 52
 a8cc: push  esp
 a8ce: push  ebp
 a8cf: sub  rsp 0x08
 a8d3: mov  rbp [rsi]
 a8d6: mov  r12 [rdi]
 a8d9: call 4710 ; relative offset = -25038
 a8de: mov  [rax] 0x00000000
 a8e4: add  rsp 0x08
 a8e8: mov  rsi r12
 a8eb: mov  rdi rbp
 a8ee: pop  ebp
 a8ef: pop  esp
 a8f1: jmp 4ad0 ; relative offset = -24102
 a8f6: UNKNOWN-INSTRUCTION
 a8f8: nop  [0x00000000 + rax + rax * 1]
 a900: ret 
 a901: nop  [rax + 0x00000000]
 a908: mov  eax 0x00000001
 a90d: ret 
 a90e: UNKNOWN-INSTRUCTION
 a90f: nop 
 a910: mov  eax 0xffffffff
 a915: ret 
 a916: UNKNOWN-INSTRUCTION
 a918: nop  [0x00000000 + rax + rax * 1]
 a920: UNKNOWN-INSTRUCTION
 a924: mov  edx [rsi + 0x000000a8]
 a92a: mov  ecx [rdi + 0x000000a8]
 a930: cmp  edx 0x03
 a933: UNKNOWN-INSTRUCTION
 a935: rol  [rbx + 0x940f09fa] 0xc2
 a93c: or  eax edx
 a93e: cmp  ecx 0x03
 a941: jz a970 ; relative offset = 45
 a943: cmp  ecx 0x09
 a946: jz a970 ; relative offset = 40
 a948: mov  edx [rdi + 0x000000ac]
 a94e: and  edx 0x0000f000
 a954: UNKNOWN-INSTRUCTION
 a956: jz a990 ; relative offset = 56
 a958: cmp  edx 0x00004000
 a95e: jz a9aa ; relative offset = 74
 a960: mov  eax 0x00000001
 a965: ret 
 a966: UNKNOWN-INSTRUCTION
 a968: nop  [0x00000000 + rax + rax * 1]
 a970: UNKNOWN-INSTRUCTION
 a972: jnz a9aa ; relative offset = 54
 a974: mov  eax [rsi + 0x000000ac]
 a97a: and  eax 0x0000f000
 a97f: UNKNOWN-INSTRUCTION
 a984: jz a9aa ; relative offset = 36
 a986: mov  eax 0xffffffff
 a98b: ret 
 a98c: nop  [rax + 0]
 a990: mov  eax [rsi + 0x000000ac]
 a996: and  eax 0x0000f000
 a99b: UNKNOWN-INSTRUCTION
 a9a0: jz a958 ; relative offset = -74
 a9a2: cmp  edx 0x00004000
 a9a8: jz a986 ; relative offset = -36
 a9aa: mov  rdx [rdi + 104]
 a9ae: mov  rax [rsi + 104]
 a9b2: mov  rcx [rsi + 96]
 a9b6: UNKNOWN-INSTRUCTION
 a9ba: jnle a986 ; relative offset = -54
 a9bc: jnge a960 ; relative offset = -94
 a9be: sub  eax edx
 a9c0: jnz a98b ; relative offset = -55
 a9c2: push  esp
 a9c4: push  ebp
 a9c5: sub  rsp 0x08
 a9c9: mov  rbp [rdi]
 a9cc: mov  r12 [rsi]
 a9cf: call 4710 ; relative offset = -25284
 a9d4: mov  [rax] 0x00000000
 a9da: add  rsp 0x08
 a9de: mov  rsi r12
 a9e1: mov  rdi rbp
 a9e4: pop  ebp
 a9e5: pop  esp
 a9e7: jmp 4ad0 ; relative offset = -24348
 a9ec: nop  [rax + 0]
 a9f0: UNKNOWN-INSTRUCTION
 a9f4: mov  ecx [rsi + 0x000000a8]
 a9fa: mov  rdx rdi
 a9fd: mov  edi [rdi + 0x000000a8]
 aa03: cmp  ecx 0x03
 aa06: UNKNOWN-INSTRUCTION
 aa08: rol  [rbx + 0x940f09f9] 0xc1
 aa0f: or  eax ecx
 aa11: cmp  edi 0x03
 aa14: jz aa40 ; relative offset = 42
 aa16: cmp  edi 0x09
 aa19: jz aa40 ; relative offset = 37
 aa1b: mov  ecx [rdx + 0x000000ac]
 aa21: and  ecx 0x0000f000
 aa27: UNKNOWN-INSTRUCTION
 aa29: jz aa60 ; relative offset = 53
 aa2b: cmp  ecx 0x00004000
 aa31: jz aa7a ; relative offset = 71
 aa33: mov  eax 0x00000001
 aa38: ret 
 aa39: nop  [rax + 0x00000000]
 aa40: UNKNOWN-INSTRUCTION
 aa42: jnz aa7a ; relative offset = 54
 aa44: mov  eax [rsi + 0x000000ac]
 aa4a: and  eax 0x0000f000
 aa4f: UNKNOWN-INSTRUCTION
 aa54: jz aa7a ; relative offset = 36
 aa56: mov  eax 0xffffffff
 aa5b: ret 
 aa5c: nop  [rax + 0]
 aa60: mov  eax [rsi + 0x000000ac]
 aa66: and  eax 0x0000f000
 aa6b: UNKNOWN-INSTRUCTION
 aa70: jz aa2b ; relative offset = -71
 aa72: cmp  ecx 0x00004000
 aa78: jz aa56 ; relative offset = -36
 aa7a: mov  rcx [rsi + 104]
 aa7e: mov  rax [rdx + 104]
 aa82: mov  rdi [rdx + 96]
 aa86: UNKNOWN-INSTRUCTION
 aa88: jng aaea ; relative offset = 96
 aa8a: jnle aa56 ; relative offset = -54
 aa8c: jnge aa33 ; relative offset = -91
 aa8e: sub  eax ecx
 aa90: jnz aa5b ; relative offset = -55
 aa92: push  esp
 aa94: push  ebp
 aa95: sub  rsp 0x08
 aa99: mov  rbp [rsi]
 aa9c: mov  r12 [rdx]
 aa9f: call 4710 ; relative offset = -25492
 aaa4: mov  [rax] 0x00000000
 aaaa: add  rsp 0x08
 aaae: mov  rsi r12
 aab1: mov  rdi rbp
 aab4: pop  ebp
 aab5: pop  esp
 aab7: jmp 4ad0 ; relative offset = -24556
 aabc: nop  [rax + 0]
 aac0: UNKNOWN-INSTRUCTION
 aac4: mov  rdx [rdi + 120]
 aac8: mov  rax [rsi + 120]
 aacc: mov  rcx [rsi + 112]
 aad0: UNKNOWN-INSTRUCTION
 aad3: jo ab54 ; relative offset = 127
 aad5: UNKNOWN-INSTRUCTION
 aad6: jnge ab18 ; relative offset = 64
 aad8: sub  eax edx
 aada: jnz ab10 ; relative offset = 52
 aadc: push  esp
 aade: push  ebp
 aadf: sub  rsp 0x08
 aae3: mov  rbp [rdi]
 aae6: mov  r12 [rsi]
 aae9: call 4710 ; relative offset = -25566
 aaee: mov  [rax] 0x00000000
 aaf4: add  rsp 0x08
 aaf8: mov  rsi r12
 aafb: mov  rdi rbp
 aafe: pop  ebp
 aaff: pop  esp
 ab01: jmp 4ad0 ; relative offset = -24630
 ab06: UNKNOWN-INSTRUCTION
 ab08: nop  [0x00000000 + rax + rax * 1]
 ab10: ret 
 ab11: nop  [rax + 0x00000000]
 ab18: mov  eax 0x00000001
 ab1d: ret 
 ab1e: UNKNOWN-INSTRUCTION
 ab1f: nop 
 ab20: mov  eax 0xffffffff
 ab25: ret 
 ab26: UNKNOWN-INSTRUCTION
 ab28: nop  [0x00000000 + rax + rax * 1]
 ab30: UNKNOWN-INSTRUCTION
 ab34: mov  rdx [rsi + 120]
 ab38: mov  rax [rdi + 120]
 ab3c: mov  rcx [rdi + 112]
 ab40: UNKNOWN-INSTRUCTION
 ab43: jo abc4 ; relative offset = 127
 ab45: UNKNOWN-INSTRUCTION
 ab46: jnge ab88 ; relative offset = 64
 ab48: sub  eax edx
 ab4a: jnz ab80 ; relative offset = 52
 ab4c: push  esp
 ab4e: push  ebp
 ab4f: sub  rsp 0x08
 ab53: mov  rbp [rsi]
 ab56: mov  r12 [rdi]
 ab59: call 4710 ; relative offset = -25678
 ab5e: mov  [rax] 0x00000000
 ab64: add  rsp 0x08
 ab68: mov  rsi r12
 ab6b: mov  rdi rbp
 ab6e: pop  ebp
 ab6f: pop  esp
 ab71: jmp 4ad0 ; relative offset = -24742
 ab76: UNKNOWN-INSTRUCTION
 ab78: nop  [0x00000000 + rax + rax * 1]
 ab80: ret 
 ab81: nop  [rax + 0x00000000]
 ab88: mov  eax 0x00000001
 ab8d: ret 
 ab8e: UNKNOWN-INSTRUCTION
 ab8f: nop 
 ab90: mov  eax 0xffffffff
 ab95: ret 
 ab96: UNKNOWN-INSTRUCTION
 ab98: nop  [0x00000000 + rax + rax * 1]
 aba0: UNKNOWN-INSTRUCTION
 aba4: mov  edx [rsi + 0x000000a8]
 abaa: mov  ecx [rdi + 0x000000a8]
 abb0: cmp  edx 0x03
 abb3: UNKNOWN-INSTRUCTION
 abb5: rol  [rbx + 0x940f09fa] 0xc2
 abbc: or  eax edx
 abbe: cmp  ecx 0x03
 abc1: jz abf0 ; relative offset = 45
 abc3: cmp  ecx 0x09
 abc6: jz abf0 ; relative offset = 40
 abc8: mov  edx [rdi + 0x000000ac]
 abce: and  edx 0x0000f000
 abd4: UNKNOWN-INSTRUCTION
 abd6: jz ac10 ; relative offset = 56
 abd8: cmp  edx 0x00004000
 abde: jz ac2a ; relative offset = 74
 abe0: mov  eax 0x00000001
 abe5: ret 
 abe6: UNKNOWN-INSTRUCTION
 abe8: nop  [0x00000000 + rax + rax * 1]
 abf0: UNKNOWN-INSTRUCTION
 abf2: jnz ac2a ; relative offset = 54
 abf4: mov  eax [rsi + 0x000000ac]
 abfa: and  eax 0x0000f000
 abff: UNKNOWN-INSTRUCTION
 ac04: jz ac2a ; relative offset = 36
 ac06: mov  eax 0xffffffff
 ac0b: ret 
 ac0c: nop  [rax + 0]
 ac10: mov  eax [rsi + 0x000000ac]
 ac16: and  eax 0x0000f000
 ac1b: UNKNOWN-INSTRUCTION
 ac20: jz abd8 ; relative offset = -74
 ac22: cmp  edx 0x00004000
 ac28: jz ac06 ; relative offset = -36
 ac2a: mov  rdx [rdi + 120]
 ac2e: mov  rax [rsi + 120]
 ac32: mov  rcx [rsi + 112]
 ac36: UNKNOWN-INSTRUCTION
 ac39: jo acba ; relative offset = 127
 ac3b: ret  0xa27c
 ac3e: sub  eax edx
 ac40: jnz ac0b ; relative offset = -55
 ac42: push  esp
 ac44: push  ebp
 ac45: sub  rsp 0x08
 ac49: mov  rbp [rdi]
 ac4c: mov  r12 [rsi]
 ac4f: call 4710 ; relative offset = -25924
 ac54: mov  [rax] 0x00000000
 ac5a: add  rsp 0x08
 ac5e: mov  rsi r12
 ac61: mov  rdi rbp
 ac64: pop  ebp
 ac65: pop  esp
 ac67: jmp 4ad0 ; relative offset = -24988
 ac6c: nop  [rax + 0]
 ac70: UNKNOWN-INSTRUCTION
 ac74: jmp aba0 ; relative offset = -217
 ac79: nop  [rax + 0x00000000]
 ac80: UNKNOWN-INSTRUCTION
 ac84: mov  ecx [rsi + 0x000000a8]
 ac8a: mov  rdx rdi
 ac8d: mov  edi [rdi + 0x000000a8]
 ac93: cmp  ecx 0x03
 ac96: UNKNOWN-INSTRUCTION
 ac98: rol  [rbx + 0x940f09f9] 0xc1
 ac9f: or  eax ecx
 aca1: cmp  edi 0x03
 aca4: jz acd0 ; relative offset = 42
 aca6: cmp  edi 0x09
 aca9: jz acd0 ; relative offset = 37
 acab: mov  ecx [rdx + 0x000000ac]
 acb1: and  ecx 0x0000f000
 acb7: UNKNOWN-INSTRUCTION
 acb9: jz acf0 ; relative offset = 53
 acbb: cmp  ecx 0x00004000
 acc1: jz ad0a ; relative offset = 71
 acc3: mov  eax 0x00000001
 acc8: ret 
 acc9: nop  [rax + 0x00000000]
 acd0: UNKNOWN-INSTRUCTION
 acd2: jnz ad0a ; relative offset = 54
 acd4: mov  eax [rsi + 0x000000ac]
 acda: and  eax 0x0000f000
 acdf: UNKNOWN-INSTRUCTION
 ace4: jz ad0a ; relative offset = 36
 ace6: mov  eax 0xffffffff
 aceb: ret 
 acec: nop  [rax + 0]
 acf0: mov  eax [rsi + 0x000000ac]
 acf6: and  eax 0x0000f000
 acfb: UNKNOWN-INSTRUCTION
 ad00: jz acbb ; relative offset = -71
 ad02: cmp  ecx 0x00004000
 ad08: jz ace6 ; relative offset = -36
 ad0a: mov  rcx [rsi + 120]
 ad0e: mov  rax [rdx + 120]
 ad12: mov  rdi [rdx + 112]
 ad16: UNKNOWN-INSTRUCTION
 ad18: jng ad8a ; relative offset = 112
 ad1a: jnle ace6 ; relative offset = -54
 ad1c: jnge acc3 ; relative offset = -91
 ad1e: sub  eax ecx
 ad20: jnz aceb ; relative offset = -55
 ad22: push  esp
 ad24: push  ebp
 ad25: sub  rsp 0x08
 ad29: mov  rbp [rsi]
 ad2c: mov  r12 [rdx]
 ad2f: call 4710 ; relative offset = -26148
 ad34: mov  [rax] 0x00000000
 ad3a: add  rsp 0x08
 ad3e: mov  rsi r12
 ad41: mov  rdi rbp
 ad44: pop  ebp
 ad45: pop  esp
 ad47: jmp 4ad0 ; relative offset = -25212
 ad4c: nop  [rax + 0]
 ad50: UNKNOWN-INSTRUCTION
 ad54: jmp ac80 ; relative offset = -217
 ad59: nop  [rax + 0x00000000]
 ad60: UNKNOWN-INSTRUCTION
 ad64: mov  rax [rdi + 72]
 ad68: UNKNOWN-INSTRUCTION
 ad6c: jnge adb0 ; relative offset = 66
 ad6e: jnz ada0 ; relative offset = 48
 ad70: push  esp
 ad72: push  ebp
 ad73: sub  rsp 0x08
 ad77: mov  rbp [rdi]
 ad7a: mov  r12 [rsi]
 ad7d: call 4710 ; relative offset = -26226
 ad82: mov  [rax] 0x00000000
 ad88: add  rsp 0x08
 ad8c: mov  rsi r12
 ad8f: mov  rdi rbp
 ad92: pop  ebp
 ad93: pop  esp
 ad95: jmp 4ad0 ; relative offset = -25290
 ad9a: UNKNOWN-INSTRUCTION
 ad9b: nop  [0 + rax + rax * 1]
 ada0: mov  eax 0x00000001
 ada5: ret 
 ada6: UNKNOWN-INSTRUCTION
 ada8: nop  [0x00000000 + rax + rax * 1]
 adb0: mov  eax 0xffffffff
 adb5: ret 
 adb6: UNKNOWN-INSTRUCTION
 adb8: nop  [0x00000000 + rax + rax * 1]
 adc0: UNKNOWN-INSTRUCTION
 adc4: mov  rax [rsi + 72]
 adc8: UNKNOWN-INSTRUCTION
 adcc: jnge ae10 ; relative offset = 66
 adce: jnz ae00 ; relative offset = 48
 add0: push  esp
 add2: push  ebp
 add3: sub  rsp 0x08
 add7: mov  rbp [rsi]
 adda: mov  r12 [rdi]
 addd: call 4710 ; relative offset = -26322
 ade2: mov  [rax] 0x00000000
 ade8: add  rsp 0x08
 adec: mov  rsi r12
 adef: mov  rdi rbp
 adf2: pop  ebp
 adf3: pop  esp
 adf5: jmp 4ad0 ; relative offset = -25386
 adfa: UNKNOWN-INSTRUCTION
 adfb: nop  [0 + rax + rax * 1]
 ae00: mov  eax 0x00000001
 ae05: ret 
 ae06: UNKNOWN-INSTRUCTION
 ae08: nop  [0x00000000 + rax + rax * 1]
 ae10: mov  eax 0xffffffff
 ae15: ret 
 ae16: UNKNOWN-INSTRUCTION
 ae18: nop  [0x00000000 + rax + rax * 1]
 ae20: UNKNOWN-INSTRUCTION
 ae24: mov  edx [rsi + 0x000000a8]
 ae2a: mov  ecx [rdi + 0x000000a8]
 ae30: cmp  edx 0x09
 ae33: UNKNOWN-INSTRUCTION
 ae35: rol  [rbx + 0x940f03fa] 0xc2
 ae3c: or  eax edx
 ae3e: cmp  ecx 0x03
 ae41: jz ae70 ; relative offset = 45
 ae43: cmp  ecx 0x09
 ae46: jz ae70 ; relative offset = 40
 ae48: mov  edx [rdi + 0x000000ac]
 ae4e: and  edx 0x0000f000
 ae54: UNKNOWN-INSTRUCTION
 ae56: jz ae90 ; relative offset = 56
 ae58: cmp  edx 0x00004000
 ae5e: jz aeaa ; relative offset = 74
 ae60: mov  eax 0x00000001
 ae65: ret 
 ae66: UNKNOWN-INSTRUCTION
 ae68: nop  [0x00000000 + rax + rax * 1]
 ae70: UNKNOWN-INSTRUCTION
 ae72: jnz aeaa ; relative offset = 54
 ae74: mov  eax [rsi + 0x000000ac]
 ae7a: and  eax 0x0000f000
 ae7f: UNKNOWN-INSTRUCTION
 ae84: jz aeaa ; relative offset = 36
 ae86: mov  eax 0xffffffff
 ae8b: ret 
 ae8c: nop  [rax + 0]
 ae90: mov  eax [rsi + 0x000000ac]
 ae96: and  eax 0x0000f000
 ae9b: UNKNOWN-INSTRUCTION
 aea0: jz ae58 ; relative offset = -74
 aea2: cmp  edx 0x00004000
 aea8: jz ae86 ; relative offset = -36
 aeaa: mov  rax [rdi + 72]
 aeae: UNKNOWN-INSTRUCTION
 aeb2: jnge ae86 ; relative offset = -46
 aeb4: jnz ae60 ; relative offset = -86
 aeb6: push  esp
 aeb8: push  ebp
 aeb9: sub  rsp 0x08
 aebd: mov  rbp [rdi]
 aec0: mov  r12 [rsi]
 aec3: call 4710 ; relative offset = -26552
 aec8: mov  [rax] 0x00000000
 aece: add  rsp 0x08
 aed2: mov  rsi r12
 aed5: mov  rdi rbp
 aed8: pop  ebp
 aed9: pop  esp
 aedb: jmp 4ad0 ; relative offset = -25616
 aee0: UNKNOWN-INSTRUCTION
 aee4: mov  edx [rsi + 0x000000a8]
 aeea: mov  ecx [rdi + 0x000000a8]
 aef0: cmp  edx 0x09
 aef3: UNKNOWN-INSTRUCTION
 aef5: rol  [rbx + 0x940f03fa] 0xc2
 aefc: or  eax edx
 aefe: cmp  ecx 0x03
 af01: jz af30 ; relative offset = 45
 af03: cmp  ecx 0x09
 af06: jz af30 ; relative offset = 40
 af08: mov  edx [rdi + 0x000000ac]
 af0e: and  edx 0x0000f000
 af14: UNKNOWN-INSTRUCTION
 af16: jz af50 ; relative offset = 56
 af18: cmp  edx 0x00004000
 af1e: jz af6a ; relative offset = 74
 af20: mov  eax 0x00000001
 af25: ret 
 af26: UNKNOWN-INSTRUCTION
 af28: nop  [0x00000000 + rax + rax * 1]
 af30: UNKNOWN-INSTRUCTION
 af32: jnz af6a ; relative offset = 54
 af34: mov  eax [rsi + 0x000000ac]
 af3a: and  eax 0x0000f000
 af3f: UNKNOWN-INSTRUCTION
 af44: jz af6a ; relative offset = 36
 af46: mov  eax 0xffffffff
 af4b: ret 
 af4c: nop  [rax + 0]
 af50: mov  eax [rsi + 0x000000ac]
 af56: and  eax 0x0000f000
 af5b: UNKNOWN-INSTRUCTION
 af60: jz af18 ; relative offset = -74
 af62: cmp  edx 0x00004000
 af68: jz af46 ; relative offset = -36
 af6a: mov  rax [rsi + 72]
 af6e: UNKNOWN-INSTRUCTION
 af72: jnge af46 ; relative offset = -46
 af74: jnz af20 ; relative offset = -86
 af76: push  esp
 af78: push  ebp
 af79: sub  rsp 0x08
 af7d: mov  rbp [rsi]
 af80: mov  r12 [rdi]
 af83: call 4710 ; relative offset = -26744
 af88: mov  [rax] 0x00000000
 af8e: add  rsp 0x08
 af92: mov  rsi r12
 af95: mov  rdi rbp
 af98: pop  ebp
 af99: pop  esp
 af9b: jmp 4ad0 ; relative offset = -25808
 afa0: UNKNOWN-INSTRUCTION
 afa4: push  esp
 afa6: push  ebp
 afa7: sub  rsp 0x08
 afab: mov  r12 [rsi]
 afae: mov  rbp [rdi]
 afb1: call 4710 ; relative offset = -26790
 afb6: mov  [rax] 0x00000000
 afbc: add  rsp 0x08
 afc0: mov  rsi r12
 afc3: mov  rdi rbp
 afc6: pop  ebp
 afc7: pop  esp
 afc9: jmp 4ad0 ; relative offset = -25854
 afce: UNKNOWN-INSTRUCTION
 afcf: nop 
 afd0: UNKNOWN-INSTRUCTION
 afd4: push  esp
 afd6: push  ebp
 afd7: sub  rsp 0x08
 afdb: mov  r12 [rdi]
 afde: mov  rbp [rsi]
 afe1: call 4710 ; relative offset = -26838
 afe6: mov  [rax] 0x00000000
 afec: add  rsp 0x08
 aff0: mov  rsi r12
 aff3: mov  rdi rbp
 aff6: pop  ebp
 aff7: pop  esp
 aff9: jmp 4ad0 ; relative offset = -25902
 affe: UNKNOWN-INSTRUCTION
 afff: nop 
 b000: UNKNOWN-INSTRUCTION
 b004: mov  edx [rsi + 0x000000a8]
 b00a: mov  ecx [rdi + 0x000000a8]
 b010: cmp  edx 0x03
 b013: UNKNOWN-INSTRUCTION
 b015: rol  [rbx + 0x940f09fa] 0xc2
 b01c: or  eax edx
 b01e: cmp  ecx 0x03
 b021: jz b050 ; relative offset = 45
 b023: cmp  ecx 0x09
 b026: jz b050 ; relative offset = 40
 b028: mov  edx [rdi + 0x000000ac]
 b02e: and  edx 0x0000f000
 b034: UNKNOWN-INSTRUCTION
 b036: jz b070 ; relative offset = 56
 b038: cmp  edx 0x00004000
 b03e: jz b08a ; relative offset = 74
 b040: mov  eax 0x00000001
 b045: ret 
 b046: UNKNOWN-INSTRUCTION
 b048: nop  [0x00000000 + rax + rax * 1]
 b050: UNKNOWN-INSTRUCTION
 b052: jnz b08a ; relative offset = 54
 b054: mov  eax [rsi + 0x000000ac]
 b05a: and  eax 0x0000f000
 b05f: UNKNOWN-INSTRUCTION
 b064: jz b08a ; relative offset = 36
 b066: mov  eax 0xffffffff
 b06b: ret 
 b06c: nop  [rax + 0]
 b070: mov  eax [rsi + 0x000000ac]
 b076: and  eax 0x0000f000
 b07b: UNKNOWN-INSTRUCTION
 b080: jz b038 ; relative offset = -74
 b082: cmp  edx 0x00004000
 b088: jz b066 ; relative offset = -36
 b08a: push  esp
 b08c: push  ebp
 b08d: sub  rsp 0x08
 b091: mov  r12 [rsi]
 b094: mov  rbp [rdi]
 b097: call 4710 ; relative offset = -27020
 b09c: mov  [rax] 0x00000000
 b0a2: add  rsp 0x08
 b0a6: mov  rsi r12
 b0a9: mov  rdi rbp
 b0ac: pop  ebp
 b0ad: pop  esp
 b0af: jmp 4ad0 ; relative offset = -26084
 b0b4: UNKNOWN-INSTRUCTION
 b0b7: nop  [0x00000000 + rax + rax * 1]
 b0bf: nop 
 b0c0: UNKNOWN-INSTRUCTION
 b0c4: mov  edx [rsi + 0x000000a8]
 b0ca: mov  ecx [rdi + 0x000000a8]
 b0d0: cmp  edx 0x03
 b0d3: UNKNOWN-INSTRUCTION
 b0d5: rol  [rbx + 0x940f09fa] 0xc2
 b0dc: or  eax edx
 b0de: cmp  ecx 0x03
 b0e1: jz b110 ; relative offset = 45
 b0e3: cmp  ecx 0x09
 b0e6: jz b110 ; relative offset = 40
 b0e8: mov  edx [rdi + 0x000000ac]
 b0ee: and  edx 0x0000f000
 b0f4: UNKNOWN-INSTRUCTION
 b0f6: jz b130 ; relative offset = 56
 b0f8: cmp  edx 0x00004000
 b0fe: jz b14a ; relative offset = 74
 b100: mov  eax 0x00000001
 b105: ret 
 b106: UNKNOWN-INSTRUCTION
 b108: nop  [0x00000000 + rax + rax * 1]
 b110: UNKNOWN-INSTRUCTION
 b112: jnz b14a ; relative offset = 54
 b114: mov  eax [rsi + 0x000000ac]
 b11a: and  eax 0x0000f000
 b11f: UNKNOWN-INSTRUCTION
 b124: jz b14a ; relative offset = 36
 b126: mov  eax 0xffffffff
 b12b: ret 
 b12c: nop  [rax + 0]
 b130: mov  eax [rsi + 0x000000ac]
 b136: and  eax 0x0000f000
 b13b: UNKNOWN-INSTRUCTION
 b140: jz b0f8 ; relative offset = -74
 b142: cmp  edx 0x00004000
 b148: jz b126 ; relative offset = -36
 b14a: push  esp
 b14c: push  ebp
 b14d: sub  rsp 0x08
 b151: mov  r12 [rdi]
 b154: mov  rbp [rsi]
 b157: call 4710 ; relative offset = -27212
 b15c: mov  [rax] 0x00000000
 b162: add  rsp 0x08
 b166: mov  rsi r12
 b169: mov  rdi rbp
 b16c: pop  ebp
 b16d: pop  esp
 b16f: jmp 4ad0 ; relative offset = -26276
 b174: UNKNOWN-INSTRUCTION
 b177: nop  [0x00000000 + rax + rax * 1]
 b17f: nop 
 b180: UNKNOWN-INSTRUCTION
 b184: push  esi
 b186: push  ebp
 b188: push  esp
 b18a: mov  r12 rsi
 b18d: mov  esi 0x0000002e
 b192: push  ebp
 b193: sub  rsp 0x08
 b197: mov  r13 [rdi]
 b19a: mov  rdi r13
 b19d: call 4910 ; relative offset = -26770
 b1a2: mov  r14 [r12]
 b1a6: mov  esi 0x0000002e
 b1ab: mov  rbp rax
 b1ae: mov  rdi r14
 b1b1: call 4910 ; relative offset = -26790
 b1b6: mov  r12 rax
 b1b9: lea  rax 
 b1c0: UNKNOWN-INSTRUCTION
 b1c2: in  unknown 0x4c
 b1c4: UNKNOWN-INSTRUCTION
 b1c5: loopne b210 ; relative offset = 72
 b1c8: UNKNOWN-INSTRUCTION
 b1c9: in  eax dx
 b1ca: UNKNOWN-INSTRUCTION
 b1cc: call ffffffffff95efba ; relative offset = -6996504
 b1d2: dec  [230 + rcx + rcx * 4]
 b1d6: mov  [rax] 0x00000000
 b1dc: mov  rdi rbp
 b1df: call 4ad0 ; relative offset = -26388
 b1e4: UNKNOWN-INSTRUCTION
 b1e6: jnz b200 ; relative offset = 24
 b1e8: add  rsp 0x08
 b1ec: mov  rsi r14
 b1ef: mov  rdi r13
 b1f2: pop  ebp
 b1f3: pop  esp
 b1f5: pop  ebp
 b1f7: pop  esi
 b1f9: jmp 4ad0 ; relative offset = -26414
 b1fe: UNKNOWN-INSTRUCTION
 b1ff: nop 
 b200: add  rsp 0x08
 b204: pop  ebp
 b205: pop  esp
 b207: pop  ebp
 b209: pop  esi
 b20b: ret 
 b20c: nop  [rax + 0]
 b210: UNKNOWN-INSTRUCTION
 b214: push  esi
 b216: push  ebp
 b218: push  esp
 b21a: mov  r12 rdi
 b21d: push  ebp
 b21e: sub  rsp 0x08
 b222: mov  r13 [rsi]
 b225: mov  esi 0x0000002e
 b22a: mov  rdi r13
 b22d: call 4910 ; relative offset = -26914
 b232: mov  r14 [r12]
 b236: mov  esi 0x0000002e
 b23b: mov  rbp rax
 b23e: mov  rdi r14
 b241: call 4910 ; relative offset = -26934
 b246: mov  r12 rax
 b249: lea  rax 
 b250: UNKNOWN-INSTRUCTION
 b252: in  unknown 0x4c
 b254: UNKNOWN-INSTRUCTION
 b255: loopne b2a0 ; relative offset = 72
 b258: UNKNOWN-INSTRUCTION
 b259: in  eax dx
 b25a: UNKNOWN-INSTRUCTION
 b25c: call ffffffffff95604a ; relative offset = -7033368
 b262: dec  [230 + rcx + rcx * 4]
 b266: mov  [rax] 0x00000000
 b26c: mov  rdi rbp
 b26f: call 4ad0 ; relative offset = -26532
 b274: UNKNOWN-INSTRUCTION
 b276: jnz b290 ; relative offset = 24
 b278: add  rsp 0x08
 b27c: mov  rsi r14
 b27f: mov  rdi r13
 b282: pop  ebp
 b283: pop  esp
 b285: pop  ebp
 b287: pop  esi
 b289: jmp 4ad0 ; relative offset = -26558
 b28e: UNKNOWN-INSTRUCTION
 b28f: nop 
 b290: add  rsp 0x08
 b294: pop  ebp
 b295: pop  esp
 b297: pop  ebp
 b299: pop  esi
 b29b: ret 
 b29c: nop  [rax + 0]
 b2a0: UNKNOWN-INSTRUCTION
 b2a4: push  esi
 b2a6: push  ebp
 b2a8: push  esp
 b2aa: push  ebp
 b2ab: push  ebx
 b2ac: mov  edx [rsi + 0x000000a8]
 b2b2: mov  rbx rsi
 b2b5: mov  ecx [rdi + 0x000000a8]
 b2bb: cmp  edx 0x03
 b2be: UNKNOWN-INSTRUCTION
 b2c0: rol  [rbx + 0x940f09fa] 0xc2
 b2c7: or  eax edx
 b2c9: cmp  ecx 0x03
 b2cc: jz b300 ; relative offset = 50
 b2ce: cmp  ecx 0x09
 b2d1: jz b300 ; relative offset = 45
 b2d3: mov  edx [rdi + 0x000000ac]
 b2d9: and  edx 0x0000f000
 b2df: UNKNOWN-INSTRUCTION
 b2e1: jz b328 ; relative offset = 69
 b2e3: cmp  edx 0x00004000
 b2e9: jz b342 ; relative offset = 87
 b2eb: mov  eax 0x00000001
 b2f0: pop  ebx
 b2f1: pop  ebp
 b2f2: pop  esp
 b2f4: pop  ebp
 b2f6: pop  esi
 b2f8: ret 
 b2f9: nop  [rax + 0x00000000]
 b300: UNKNOWN-INSTRUCTION
 b302: jnz b342 ; relative offset = 62
 b304: mov  eax [rbx + 0x000000ac]
 b30a: and  eax 0x0000f000
 b30f: UNKNOWN-INSTRUCTION
 b314: jz b342 ; relative offset = 44
 b316: pop  ebx
 b317: mov  eax 0xffffffff
 b31c: pop  ebp
 b31d: pop  esp
 b31f: pop  ebp
 b321: pop  esi
 b323: ret 
 b324: nop  [rax + 0]
 b328: mov  eax [rsi + 0x000000ac]
 b32e: and  eax 0x0000f000
 b333: UNKNOWN-INSTRUCTION
 b338: jz b2e3 ; relative offset = -87
 b33a: cmp  edx 0x00004000
 b340: jz b316 ; relative offset = -44
 b342: mov  r13 [rdi]
 b345: mov  esi 0x0000002e
 b34a: mov  rdi r13
 b34d: call 4910 ; relative offset = -27202
 b352: mov  r14 [rbx]
 b355: mov  esi 0x0000002e
 b35a: mov  rbp rax
 b35d: mov  rdi r14
 b360: call 4910 ; relative offset = -27221
 b365: mov  r12 rax
 b368: lea  rax 
 b36f: UNKNOWN-INSTRUCTION
 b371: in  unknown 0x4c
 b373: UNKNOWN-INSTRUCTION
 b374: loopne b3bf ; relative offset = 72
 b377: UNKNOWN-INSTRUCTION
 b378: in  eax dx
 b379: UNKNOWN-INSTRUCTION
 b37b: call ffffffffff944269 ; relative offset = -7106840
 b381: dec  [230 + rcx + rcx * 4]
 b385: mov  [rax] 0x00000000
 b38b: mov  rdi rbp
 b38e: call 4ad0 ; relative offset = -26819
 b393: UNKNOWN-INSTRUCTION
 b394: ror  [rdi] 0x85
 b397: push  ebp
 b398: UNKNOWN-INSTRUCTION
 b39b: pop  ebx
 b39c: mov  rsi r14
 b39f: pop  ebp
 b3a0: mov  rdi r13
 b3a3: pop  esp
 b3a5: pop  ebp
 b3a7: pop  esi
 b3a9: jmp 4ad0 ; relative offset = -26846
 b3ae: UNKNOWN-INSTRUCTION
 b3af: nop 
 b3b0: UNKNOWN-INSTRUCTION
 b3b4: push  esi
 b3b6: push  ebp
 b3b8: push  esp
 b3ba: push  ebp
 b3bb: push  ebx
 b3bc: mov  edx [rsi + 0x000000a8]
 b3c2: mov  rbx rdi
 b3c5: mov  ecx [rdi + 0x000000a8]
 b3cb: cmp  edx 0x03
 b3ce: UNKNOWN-INSTRUCTION
 b3d0: rol  [rbx + 0x940f09fa] 0xc2
 b3d7: or  eax edx
 b3d9: cmp  ecx 0x03
 b3dc: jz b410 ; relative offset = 50
 b3de: cmp  ecx 0x09
 b3e1: jz b410 ; relative offset = 45
 b3e3: mov  edx [rdi + 0x000000ac]
 b3e9: and  edx 0x0000f000
 b3ef: UNKNOWN-INSTRUCTION
 b3f1: jz b438 ; relative offset = 69
 b3f3: cmp  edx 0x00004000
 b3f9: jz b452 ; relative offset = 87
 b3fb: mov  eax 0x00000001
 b400: pop  ebx
 b401: pop  ebp
 b402: pop  esp
 b404: pop  ebp
 b406: pop  esi
 b408: ret 
 b409: nop  [rax + 0x00000000]
 b410: UNKNOWN-INSTRUCTION
 b412: jnz b452 ; relative offset = 62
 b414: mov  eax [rsi + 0x000000ac]
 b41a: and  eax 0x0000f000
 b41f: UNKNOWN-INSTRUCTION
 b424: jz b452 ; relative offset = 44
 b426: pop  ebx
 b427: mov  eax 0xffffffff
 b42c: pop  ebp
 b42d: pop  esp
 b42f: pop  ebp
 b431: pop  esi
 b433: ret 
 b434: nop  [rax + 0]
 b438: mov  eax [rsi + 0x000000ac]
 b43e: and  eax 0x0000f000
 b443: UNKNOWN-INSTRUCTION
 b448: jz b3f3 ; relative offset = -87
 b44a: cmp  edx 0x00004000
 b450: jz b426 ; relative offset = -44
 b452: mov  r13 [rsi]
 b455: mov  esi 0x0000002e
 b45a: mov  rdi r13
 b45d: call 4910 ; relative offset = -27474
 b462: mov  r14 [rbx]
 b465: mov  esi 0x0000002e
 b46a: mov  rbp rax
 b46d: mov  rdi r14
 b470: call 4910 ; relative offset = -27493
 b475: mov  r12 rax
 b478: lea  rax 
 b47f: UNKNOWN-INSTRUCTION
 b481: in  unknown 0x4c
 b483: UNKNOWN-INSTRUCTION
 b484: loopne b4cf ; relative offset = 72
 b487: UNKNOWN-INSTRUCTION
 b488: in  eax dx
 b489: UNKNOWN-INSTRUCTION
 b48b: call ffffffffff933379 ; relative offset = -7176472
 b491: dec  [230 + rcx + rcx * 4]
 b495: mov  [rax] 0x00000000
 b49b: mov  rdi rbp
 b49e: call 4ad0 ; relative offset = -27091
 b4a3: UNKNOWN-INSTRUCTION
 b4a4: ror  [rdi] 0x85
 b4a7: push  ebp
 b4a8: UNKNOWN-INSTRUCTION
 b4ab: pop  ebx
 b4ac: mov  rsi r14
 b4af: pop  ebp
 b4b0: mov  rdi r13
 b4b3: pop  esp
 b4b5: pop  ebp
 b4b7: pop  esi
 b4b9: jmp 4ad0 ; relative offset = -27118
 b4be: UNKNOWN-INSTRUCTION
 b4bf: nop 
 b4c0: push  esp
 b4c2: push  ebp
 b4c3: push  ebx
 b4c4: mov  ebx edx
 b4c6: UNKNOWN-INSTRUCTION
 b4c8: dec  [rdi]
 b4ca: UNKNOWN-INSTRUCTION
 b4cf: mov  r12 rdi
 b4d2: call 4880 ; relative offset = -27735
 b4d7: mov  rdi r12
 b4da: mov  rsi rax
 b4dd: call 12c20 ; relative offset = 30526
 b4e2: mov  rbp [RIP + 0x00016abf]
 b4e9: mov  rdi r12
 b4ec: sub  ebx eax
 b4ee: mov  eax 0x00000000
 b4f3: mov  rsi [rbp + 0]
 b4f7: UNKNOWN-INSTRUCTION
 b4fa: call 49d0 ; relative offset = -27439
 b4ff: mov  rdi r12
 b502: movsxd  r12 ebx
 b505: call 4880 ; relative offset = -27786
 b50a: add  r12 rax
 b50d: nop  [rax]
 b510: mov  rdi [rbp + 0]
 b514: mov  rax [rdi + 40]
 b518: UNKNOWN-INSTRUCTION
 b51c: jnb b550 ; relative offset = 50
 b51e: lea  rdx 
 b522: mov  [rdi + 40] rdx
 b526: mov  [rax] 0x20
 b529: sub  ebx 0x01
 b52c: jnb b510 ; relative offset = -30
 b52e: mov  rax [RIP + 0x00016dc3]
 b535: pop  ebx
 b536: pop  ebp
 b537: lea  rax 
 b53c: pop  esp
 b53e: mov  [RIP + 0x00016db3] rax
 b545: ret 
 b546: UNKNOWN-INSTRUCTION
 b548: nop  [0x00000000 + rax + rax * 1]
 b550: mov  esi 0x00000020
 b555: call 4900 ; relative offset = -27738
 b55a: jmp b529 ; relative offset = -51
 b55c: nop  [rax + 0]
 b560: mov  rcx rsi
 b563: mov  edi 0x00000001
 b568: xor  eax eax
 b56a: movsxd  r12 ebx
 b56d: lea  rsi 
 b574: call 4b40 ; relative offset = -27193
 b579: jmp b52e ; relative offset = -77
 b57b: nop  [0 + rax + rax * 1]
 b580: push  ebp
 b581: push  ebx
 b582: sub  esp 0x00001000
 b589: or  [rsp] 0x00
 b58e: sub  esp 0x00001000
 b595: or  [rsp] 0x00
 b59a: sub  rsp 0x38
 b59e: mov  rbx rdi
 b5a1: lea  rbp 
 b5a6: lea  rdi 
 b5ab: mov  ecx edx
 b5ad: UNKNOWN-INSTRUCTION
 b5ae: mov  rax 0x00000028
 b5b6: mov  [0x00002028 + rsp] rax
 b5be: xor  eax eax
 b5c0: mov  rdx rsi
 b5c3: lea  r9 
 b5c8: lea  r8 
 b5cd: mov  rsi rbx
 b5d0: mov  [24 + rsp] rbp
 b5d5: call 143d0 ; relative offset = 36342
 b5da: mov  rdi [24 + rsp]
 b5df: UNKNOWN-INSTRUCTION
 b5e1: out  dx eax
 b5e2: jz b5ee ; relative offset = 10
 b5e4: UNKNOWN-INSTRUCTION
 b5e7: jz b5ee ; relative offset = 5
 b5e9: call 4680 ; relative offset = -28526
 b5ee: movzx  eax [15 + rsp]
 b5f3: add  rax [16 + rsp]
 b5f8: mov  rdx [0x00002028 + rsp]
 b600: UNKNOWN-INSTRUCTION
 b601: sub  rdx 0x00000028
 b609: jnz b615 ; relative offset = 10
 b60b: add  esp 0x00002038
 b612: pop  ebx
 b613: pop  ebp
 b614: ret 
 b615: call 4890 ; relative offset = -28042
 b61a: UNKNOWN-INSTRUCTION
 b61b: nop  [0 + rax + rax * 1]
 b620: push  edi
 b622: mov  rax rsi
 b625: push  esi
 b627: shr  rax 
 b62a: push  ebp
 b62c: push  esp
 b62e: push  ebp
 b62f: mov  rbp rcx
 b632: push  ebx
 b633: mov  rbx rdi
 b636: sub  rsp 0x38
 b63a: mov  [16 + rsp] rsi
 b63f: sub  rsi rax
 b642: mov  [8 + rsp] rax
 b647: lea  rax 
 b64b: mov  [24 + rsp] rdx
 b650: mov  [40 + rsp] rax
 b655: cmp  rsi 0x02
 b659: UNKNOWN-INSTRUCTION
 b65c: add  [rax] eax
 b65e: UNKNOWN-INSTRUCTION
 b65f: jz b728 ; relative offset = 195
 b665: cmp  [16 + rsp] 0x03
 b66b: jnz b758 ; relative offset = 231
 b671: mov  r14 [rbx]
 b674: mov  rax [24 + rsp]
 b679: mov  [rax] r14
 b67c: mov  rax [40 + rsp]
 b681: mov  [rsp] 0x00000000
 b689: xor  r15d r15d
 b68c: mov  r13 [8 + rsp]
 b691: mov  r12 [rax]
 b694: nop  [rax + 0]
 b698: mov  rsi r12
 b69b: mov  rdi r14
 b69e: add  r15 0x01
 b6a2: call  rdx
 b6a3: UNKNOWN-INSTRUCTION
 b6a5: sar  [rsi + 36] 0x4e
 b6a9: mov  [248 + rbx + rdi * 8] esp
 b6ad: add  r13 0x01
 b6b1: UNKNOWN-INSTRUCTION
 b6b3: insb 
 b6b4: and  unknown 0x10
 b6b6: jz b6f0 ; relative offset = 56
 b6b8: mov  r12 [rbx + r13 * 8]
 b6bc: mov  rdi r14
 b6bf: add  r15 0x01
 b6c3: mov  rsi r12
 b6c6: call  rdx
 b6c7: UNKNOWN-INSTRUCTION
 b6c9: sar  [rdi + 220] 0x48
 b6cd: add  [rsp] 0x01
 b6d1: mov  rax [rsp]
 b6d5: mov  [248 + rbx + r15 * 8] r14
 b6da: UNKNOWN-INSTRUCTION
 b6dc: and  unknown 0x08
 b6df: jz b840 ; relative offset = 347
 b6e5: mov  rdx [24 + rsp]
 b6ea: mov  r14 [rdx + rax * 8]
 b6ee: jmp b698 ; relative offset = -88
 b6f0: mov  rax [rsp]
 b6f4: mov  r12 [8 + rsp]
 b6f9: lea  rdi 
 b6fd: mov  rcx [24 + rsp]
 b702: add  rsp 0x38
 b706: sub  r12 rax
 b709: pop  ebx
 b70a: pop  ebp
 b70b: lea  rdx 
 b713: lea  rsi 
 b717: pop  esp
 b719: pop  ebp
 b71b: pop  esi
 b71d: pop  edi
 b71f: jmp 4a50 ; relative offset = -27860
 b724: nop  [rax + 0]
 b728: mov  r14 [rax]
 b72b: mov  r12 [rax + 8]
 b72f: mov  r15 rax
 b732: mov  rsi r12
 b735: mov  rdi r14
 b738: call  rdx
 b739: rol  [rbp + 0x238e0fc0] 
 b73f: UNKNOWN-INSTRUCTION
 b741: dec  [rax + 131]
 b744: jnge b76a ; relative offset = 36
 b746: UNKNOWN-INSTRUCTION
 b747: add  ecx [rbp + 137]
 b74a: UNKNOWN-INSTRUCTION
 b74b: mov  [r15 + 8] r14
 b74f: jz b671 ; relative offset = -228
 b755: nop  [rax]
 b758: mov  rax [16 + rsp]
 b75d: mov  rsi [8 + rsp]
 b762: shr  rax 0x02
 b766: sub  rsi rax
 b769: mov  [32 + rsp] rax
 b76e: lea  r15 
 b772: cmp  rsi 0x02
 b776: UNKNOWN-INSTRUCTION
 b778: add  eax 0x0f000001
 b77d: UNKNOWN-INSTRUCTION
 b77e: xor  eax [rcx]
 b780: UNKNOWN-INSTRUCTION
 b782: cmp  [32 + rsp] 0x02
 b788: UNKNOWN-INSTRUCTION
 b78e: mov  r14 [rbx]
 b791: jz b896 ; relative offset = 255
 b797: mov  r15 [r15]
 b79a: mov  [rsp] 0x00000000
 b7a2: mov  r12 [32 + rsp]
 b7a7: mov  r13 [24 + rsp]
 b7ac: nop  [rax + 0]
 b7b0: mov  rsi r15
 b7b3: mov  rdi r14
 b7b6: add  r13 0x08
 b7ba: call  rdx
 b7bb: UNKNOWN-INSTRUCTION
 b7bd: sar  [rsi + 35] 0x4d
 b7c1: mov  [rbp + 248] edi
 b7c4: add  r12 0x01
 b7c8: UNKNOWN-INSTRUCTION
 b7cb: and  unknown 0x08
 b7cd: jz b80e ; relative offset = 63
 b7cf: mov  r15 [rbx + r12 * 8]
 b7d3: mov  rdi r14
 b7d6: add  r13 0x08
 b7da: mov  rsi r15
 b7dd: call  rdx
 b7de: UNKNOWN-INSTRUCTION
 b7e0: sar  [rdi + 221] 0x48
 b7e4: add  [rsp] 0x01
 b7e8: mov  rax [rsp]
 b7ec: mov  [r13 + 248] r14
 b7f0: UNKNOWN-INSTRUCTION
 b7f2: and  unknown 0x20
 b7f5: jz b800 ; relative offset = 9
 b7f7: mov  r14 [rbx + rax * 8]
 b7fb: jmp b7b0 ; relative offset = -77
 b7fd: nop  [rax]
 b800: mov  rax [8 + rsp]
 b805: mov  [rsp] r12
 b809: mov  [32 + rsp] rax
 b80e: mov  rax [rsp]
 b812: mov  rdx [32 + rsp]
 b817: mov  rdi r13
 b81a: sub  rdx rax
 b81d: lea  rsi 
 b821: sal  rdx 0x03
 b825: call 4a50 ; relative offset = -28122
 b82a: mov  rax [24 + rsp]
 b82f: mov  r14 [rax]
 b832: jmp b67c ; relative offset = -443
 b837: UNKNOWN-INSTRUCTION
 b838: nop  [0x00000000 + rax + rax * 1]
 b840: add  rsp 0x38
 b844: pop  ebx
 b845: pop  ebp
 b846: pop  esp
 b848: pop  ebp
 b84a: pop  esi
 b84c: pop  edi
 b84e: ret 
 b84f: nop 
 b850: mov  rdx [24 + rsp]
 b855: mov  rdi [40 + rsp]
 b85a: call b620 ; relative offset = -575
 b85f: jmp b665 ; relative offset = -511
 b864: mov  rdx [24 + rsp]
 b869: mov  rsi [32 + rsp]
 b86e: mov  rcx rbp
 b871: mov  rdi rbx
 b874: call b620 ; relative offset = -601
 b879: mov  r14 [rbx]
 b87c: jmp b797 ; relative offset = -234
 b881: mov  rdx [24 + rsp]
 b886: mov  rcx rbp
 b889: mov  rdi r15
 b88c: call b620 ; relative offset = -625
 b891: jmp b782 ; relative offset = -276
 b896: mov  r12 [rbx + 8]
 b89a: mov  rdi r14
 b89d: mov  rsi r12
 b8a0: call  rdx
 b8a1: UNKNOWN-INSTRUCTION
 b8a3: sar  [rsi + 211] 0x4c
 b8a7: mov  [rbx + 8] esi
 b8aa: mov  r14 r12
 b8ad: mov  [rbx] r12
 b8b0: jmp b797 ; relative offset = -286
 b8b5: mov  r12 [r15]
 b8b8: mov  r13 [r15 + 8]
 b8bc: mov  rdi r12
 b8bf: mov  rsi r13
 b8c2: call  rdx
 b8c3: UNKNOWN-INSTRUCTION
 b8c5: ror  [rdi] 0x8e
 b8c8: mov  sil 0xfe
 b8ca: UNKNOWN-INSTRUCTION
 b8cb: dec  [rbp + 137]
 b8ce: UNKNOWN-INSTRUCTION
 b8cf: mov  [r15 + 8] r12
 b8d3: jmp b782 ; relative offset = -342
 b8d8: nop  [0x00000000 + rax + rax * 1]
 b8e0: push  esp
 b8e2: push  ebp
 b8e3: push  ebx
 b8e4: UNKNOWN-INSTRUCTION
 b8e6: push  [72 + rdi]
 b8ea: mov  ebp edi
 b8ec: call 4880 ; relative offset = -28785
 b8f1: lea  rbx 
 b8f5: mov  eax 0x00000076
 b8fa: UNKNOWN-INSTRUCTION
 b8fc: ret 
 b8fd: UNKNOWN-INSTRUCTION
 b8ff: ret 
 b901: mov  rdi rax
 b904: add  rdi 0x11
 b908: and  rdi 0xf8
 b90c: call 4690 ; relative offset = -29313
 b911: mov  r12 rax
 b914: UNKNOWN-INSTRUCTION
 b917: jz b941 ; relative offset = 40
 b919: mov  [rax] 0x00000000
 b920: mov  eax 0x00000001
 b925: lea  rdi 
 b92a: mov  rdx rbx
 b92d: mov  [8 + r12] eax
 b933: mov  rsi rbp
 b936: call 4a50 ; relative offset = -28395
 b93b: mov  [9 + r12 + rbx * 1] 0x00
 b941: mov  rax r12
 b944: pop  ebx
 b945: pop  ebp
 b946: pop  esp
 b948: ret 
 b949: nop  [rax + 0x00000000]
 b950: mov  edi 0x00000080
 b955: call 4690 ; relative offset = -29386
 b95a: mov  r12 rax
 b95d: UNKNOWN-INSTRUCTION
 b960: jz b941 ; relative offset = -33
 b962: xor  edx edx
 b964: mov  [r12] 0x00000000
 b96c: mov  rax r12
 b96f: mov  [8 + r12] edx
 b975: pop  ebx
 b976: pop  ebp
 b977: pop  esp
 b979: ret 
 b97a: UNKNOWN-INSTRUCTION
 b97b: nop  [0 + rax + rax * 1]
 b980: push  esi
 b982: push  ebp
 b984: push  esp
 b986: push  ebp
 b987: mov  rbp rdi
 b98a: push  ebx
 b98b: call 4770 ; relative offset = -29216
 b990: mov  ebx [rbp + 0]
 b993: mov  rdi rbp
 b996: mov  r12 rax
 b999: call 4a70 ; relative offset = -28462
 b99e: and  ebx 0x20
 b9a1: mov  rdi rbp
 b9a4: UNKNOWN-INSTRUCTION
 b9a5: sar  [rax + 119] 0xe8
 b9a9: UNKNOWN-INSTRUCTION
 b9ac: inc  [rbp + 0x484f75c0]
 b9b2: mov  edi ebp
 b9b4: call 4af0 ; relative offset = -28361
 b9b9: UNKNOWN-INSTRUCTION
 b9ba: ror  [rdi] 0x85
 b9bd: pop  [rax]
 b9bf: UNKNOWN-INSTRUCTION
 b9c1: mov  rdi rbp
 b9c4: call 4ab0 ; relative offset = -28441
 b9c9: UNKNOWN-INSTRUCTION
 b9cb: jz ba1c ; relative offset = 79
 b9cd: call 4710 ; relative offset = -29378
 b9d2: mov  rdi rbp
 b9d5: mov  r14d [rax]
 b9d8: mov  r13 rax
 b9db: call 4820 ; relative offset = -29120
 b9e0: UNKNOWN-INSTRUCTION
 b9e2: div  [69 + rdi + rdi * 1]
 b9e6: mov  [rbp + 0] esi
 b9e9: UNKNOWN-INSTRUCTION
 b9eb: jz ba30 ; relative offset = 67
 b9ed: nop  [rax]
 b9f0: mov  eax 0xffffffff
 b9f5: pop  ebx
 b9f6: pop  ebp
 b9f7: pop  esp
 b9f9: pop  ebp
 b9fb: pop  esi
 b9fd: ret 
 b9fe: UNKNOWN-INSTRUCTION
 b9ff: nop 
 ba00: mov  rdi rbp
 ba03: call 4a70 ; relative offset = -28568
 ba08: xor  esi esi
 ba0a: mov  edx 0x00000001
 ba0f: mov  edi eax
 ba11: call 4930 ; relative offset = -28902
 ba16: cmp  rax 0xff
 ba1a: jnz b9b1 ; relative offset = -107
 ba1c: mov  rdi rbp
 ba1f: call 4820 ; relative offset = -29188
 ba24: UNKNOWN-INSTRUCTION
 ba26: jnz bac8 ; relative offset = 156
 ba2c: UNKNOWN-INSTRUCTION
 ba2e: jz b9f5 ; relative offset = -59
 ba30: UNKNOWN-INSTRUCTION
 ba32: in  unknown 0x75
 ba34: mov  ebx 0xff8cd6e8
 ba39: UNKNOWN-INSTRUCTION
 ba3a: pop  ebx
 ba3b: pop  ebp
 ba3c: cmp  [rax] 0x09
 ba3f: pop  esp
 ba41: UNKNOWN-INSTRUCTION
 ba43: rol  [rcx + 93] 0x41
 ba47: pop  esi
 ba48: movzx  eax al
 ba4b: neg  eax
 ba4d: ret 
 ba4e: UNKNOWN-INSTRUCTION
 ba4f: nop 
 ba50: test  [rbp + 0] 0x00000100
 ba57: jz b9c1 ; relative offset = -156
 ba5d: mov  rax [rbp + 8]
 ba61: UNKNOWN-INSTRUCTION
 ba65: jz ba80 ; relative offset = 25
 ba67: mov  edx 0x00000001
 ba6c: xor  esi esi
 ba6e: mov  rdi rbp
 ba71: call 4bb0 ; relative offset = -28358
 ba76: jmp b9c1 ; relative offset = -186
 ba7b: nop  [0 + rax + rax * 1]
 ba80: mov  rax [rbp + 32]
 ba84: UNKNOWN-INSTRUCTION
 ba88: jnz ba67 ; relative offset = -35
 ba8a: cmp  [rbp + 72] 0x00
 ba8f: jnz ba67 ; relative offset = -42
 ba91: mov  rdi rbp
 ba94: call 4a70 ; relative offset = -28713
 ba99: xor  esi esi
 ba9b: mov  edx 0x00000001
 baa0: mov  edi eax
 baa2: call 4930 ; relative offset = -29047
 baa7: cmp  rax 0xff
 baab: jz b9c1 ; relative offset = -240
 bab1: and  [rbp + 0] 0xef
 bab5: mov  [rbp + 0x00000090] rax
 babc: jmp b9c1 ; relative offset = -256
 bac1: nop  [rax + 0x00000000]
 bac8: UNKNOWN-INSTRUCTION
 bac9: ror  [rdi] 0x85
 bacc: UNKNOWN-INSTRUCTION
 bacf: jmp  rax
 bad1: UNKNOWN-INSTRUCTION
 bad2: mov  di 
 bad4: inc  edi
 bad6: UNKNOWN-INSTRUCTION
 badb: jmp b9f0 ; relative offset = -240
 bae0: UNKNOWN-INSTRUCTION
 bae4: mov  rax [RIP + 0x000164bd]
 baeb: push  esp
 baed: mov  rdi [rax]
 baf0: call b980 ; relative offset = -373
 baf5: UNKNOWN-INSTRUCTION
 baf7: jz bb38 ; relative offset = 63
 baf9: mov  edx 0x00000005
 bafe: lea  rsi 
 bb05: xor  edi edi
 bb07: call 4860 ; relative offset = -29356
 bb0c: mov  r12 rax
 bb0f: call 4710 ; relative offset = -29700
 bb14: xor  edi edi
 bb16: mov  rcx r12
 bb19: lea  rdx 
 bb20: mov  esi [rax]
 bb22: xor  eax eax
 bb24: call 4ba0 ; relative offset = -28553
 bb29: mov  edi [RIP + 0x00016551]
 bb2f: call 4740 ; relative offset = -29684
 bb34: nop  [rax + 0]
 bb38: mov  rax [RIP + 0x000164b1]
 bb3f: mov  rdi [rax]
 bb42: call b980 ; relative offset = -455
 bb47: UNKNOWN-INSTRUCTION
 bb49: jnz bb4e ; relative offset = 3
 bb4b: pop  esp
 bb4d: ret 
 bb4e: mov  edi [RIP + 0x0001652c]
 bb54: call 4740 ; relative offset = -29721
 bb59: nop  [rax + 0x00000000]
 bb60: push  edi
 bb62: mov  r10 rsi
 bb65: mov  r11 rcx
 bb68: push  esi
 bb6a: push  ebp
 bb6c: push  esp
 bb6e: push  ebp
 bb6f: mov  rbp rdi
 bb72: push  ebx
 bb73: sub  esp 0x00000158
 bb7a: mov  [0x000000c0 + rsp] r8
 bb82: mov  [0x000000c8 + rsp] r9
 bb8a: UNKNOWN-INSTRUCTION
 bb8c: jz bbce ; relative offset = 64
 bb8e: UNKNOWN-INSTRUCTION
 bb8f: sub  [0x000000d0 + rsp] eax
 bb96: UNKNOWN-INSTRUCTION
 bb97: sub  [0x000000e0 + rsp] ecx
 bb9e: UNKNOWN-INSTRUCTION
 bb9f: sub  [0x000000f0 + rsp] edx
 bba6: UNKNOWN-INSTRUCTION
 bba7: sub  [0x00000100 + rsp] ebx
 bbae: UNKNOWN-INSTRUCTION
 bbaf: sub  [0x00000110 + rsp] esp
 bbb6: UNKNOWN-INSTRUCTION
 bbb7: sub  [0x00000120 + rsp] ebp
 bbbe: UNKNOWN-INSTRUCTION
 bbbf: sub  [0x00000130 + rsp] esi
 bbc6: UNKNOWN-INSTRUCTION
 bbc7: sub  [0x00000140 + rsp] edi
 bbce: UNKNOWN-INSTRUCTION
 bbcf: mov  rax 0x00000028
 bbd7: mov  [0x00000098 + rsp] rax
 bbdf: xor  eax eax
 bbe1: lea  r9 
 bbe9: xor  edi edi
 bbeb: xor  r8d r8d
 bbee: lea  rax 
 bbf6: mov  [32 + rsp] 0x00000020
 bbfe: mov  edx 0x00000020
 bc03: lea  rcx 
 bc0b: mov  [36 + rsp] 0x00000030
 bc13: xor  ebx ebx
 bc15: lea  rsi 
 bc1a: mov  [40 + rsp] rax
 bc1f: mov  [48 + rsp] r9
 bc24: jmp bc58 ; relative offset = 50
 bc26: UNKNOWN-INSTRUCTION
 bc28: nop  [0x00000000 + rax + rax * 1]
 bc30: mov  eax edx
 bc32: mov  eax 0x00000001
 bc38: add  edx 0x08
 bc3b: add  rax r9
 bc3e: mov  rax [rax]
 bc41: mov  [rsi + rbx * 8] rax
 bc45: UNKNOWN-INSTRUCTION
 bc48: jz bc75 ; relative offset = 43
 bc4a: add  rbx 0x01
 bc4e: cmp  rbx 0x0a
 bc52: jz c02a ; relative offset = 978
 bc58: cmp  edx 0x2f
 bc5b: jna bc30 ; relative offset = -45
 bc5d: mov  rax rcx
 bc60: mov  edi 0x00000001
 bc65: add  rcx 0x08
 bc69: mov  rax [rax]
 bc6c: mov  [rsi + rbx * 8] rax
 bc70: UNKNOWN-INSTRUCTION
 bc73: jnz bc4a ; relative offset = -43
 bc75: UNKNOWN-INSTRUCTION
 bc77: push  [RBP + 72 + rax * 1]
 bc7b: mov  [40 + rsp] ecx
 bc7f: UNKNOWN-INSTRUCTION
 bc82: jz bc88 ; relative offset = 4
 bc84: mov  [32 + rsp] edx
 bc88: mov  rcx r10
 bc8b: mov  r9 r11
 bc8e: lea  r8 
 bc95: mov  rdi rbp
 bc98: lea  rdx 
 bc9f: mov  esi 0x00000001
 bca4: xor  eax eax
 bca6: call 4c50 ; relative offset = -28763
 bcab: xor  edi edi
 bcad: mov  edx 0x00000005
 bcb2: lea  rsi 
 bcb9: call 4860 ; relative offset = -29790
 bcbe: mov  eax 0x000007e4
 bcc4: mov  esi 0x00000001
 bcc9: mov  rdi rbp
 bccc: mov  rcx rax
 bccf: lea  rdx 
 bcd6: xor  eax eax
 bcd8: call 4c50 ; relative offset = -28813
 bcdd: mov  rsi rbp
 bce0: mov  edi 0x0000000a
 bce5: call 4a20 ; relative offset = -29386
 bcea: xor  edi edi
 bcec: mov  edx 0x00000005
 bcf1: lea  rsi 
 bcf8: call 4860 ; relative offset = -29853
 bcfd: mov  esi 0x00000001
 bd02: mov  rdi rbp
 bd05: lea  rcx 
 bd0c: mov  rdx rax
 bd0f: xor  eax eax
 bd11: call 4c50 ; relative offset = -28870
 bd16: mov  rsi rbp
 bd19: mov  edi 0x0000000a
 bd1e: call 4a20 ; relative offset = -29443
 bd23: cmp  rbx 0x09
 bd27: UNKNOWN-INSTRUCTION
 bd2d: lea  rdx 
 bd34: movsxd  rax [rdx + rbx * 4]
 bd38: add  rax rdx
 bd3b: UNKNOWN-INSTRUCTION
 bd3c: jmp  rax
 bd3e: mov  r9 [120 + rsp]
 bd43: mov  r8 [112 + rsp]
 bd48: xor  edi edi
 bd4a: mov  edx 0x00000005
 bd4f: mov  rcx [104 + rsp]
 bd54: lea  rsi 
 bd5b: mov  r15 [96 + rsp]
 bd60: mov  r14 [88 + rsp]
 bd65: mov  r13 [80 + rsp]
 bd6a: mov  [16 + rsp] r9
 bd6f: mov  rbx [72 + rsp]
 bd74: mov  r12 [64 + rsp]
 bd79: mov  [8 + rsp] r8
 bd7e: mov  [rsp] rcx
 bd82: call 4860 ; relative offset = -29991
 bd87: mov  rdx rax
 bd8a: push  eax
 bd8b: mov  r9 [24 + rsp]
 bd90: mov  esi 0x00000001
 bd95: mov  rdi rbp
 bd98: xor  eax eax
 bd9a: push  ecx
 bd9c: mov  r8 [24 + rsp]
 bda1: mov  r9 r13
 bda4: push  eax
 bda6: mov  rcx [24 + rsp]
 bdab: mov  r8 rbx
 bdae: push  ecx
 bdaf: mov  rcx r12
 bdb2: push  edi
 bdb4: push  esi
 bdb6: call 4c50 ; relative offset = -29035
 bdbb: add  rsp 0x30
 bdbf: mov  rax [0x00000098 + rsp]
 bdc7: UNKNOWN-INSTRUCTION
 bdc8: sub  rax 0x00000028
 bdd0: jnz c119 ; relative offset = 835
 bdd6: add  esp 0x00000158
 bddd: pop  ebx
 bdde: pop  ebp
 bddf: pop  esp
 bde1: pop  ebp
 bde3: pop  esi
 bde5: pop  edi
 bde7: ret 
 bde8: mov  r9 [120 + rsp]
 bded: mov  r8 [112 + rsp]
 bdf2: mov  edx 0x00000005
 bdf7: lea  rsi 
 bdfe: mov  r10 [0x00000080 + rsp]
 be06: mov  rcx [104 + rsp]
 be0b: mov  r15 [96 + rsp]
 be10: mov  r14 [88 + rsp]
 be15: mov  [16 + rsp] r9
 be1a: mov  r13 [80 + rsp]
 be1f: mov  rbx [72 + rsp]
 be24: mov  [24 + rsp] r10
 be29: mov  [8 + rsp] r8
 be2e: mov  r12 [64 + rsp]
 be33: mov  [rsp] rcx
 be37: xor  edi edi
 be39: call 4860 ; relative offset = -30174
 be3e: mov  r10 [24 + rsp]
 be43: mov  rdx rax
 be46: push  edx
 be48: jmp bd8b ; relative offset = -194
 be4d: mov  r12 [64 + rsp]
 be52: xor  edi edi
 be54: mov  edx 0x00000005
 be59: lea  rsi 
 be60: call 4860 ; relative offset = -30213
 be65: mov  esi 0x00000001
 be6a: mov  rdi rbp
 be6d: mov  rdx rax
 be70: mov  rcx r12
 be73: xor  eax eax
 be75: call 4c50 ; relative offset = -29226
 be7a: jmp bdbf ; relative offset = -192
 be7f: mov  rbx [72 + rsp]
 be84: mov  r12 [64 + rsp]
 be89: xor  edi edi
 be8b: mov  edx 0x00000005
 be90: lea  rsi 
 be97: call 4860 ; relative offset = -30268
 be9c: mov  r8 rbx
 be9f: mov  rcx r12
 bea2: mov  esi 0x00000001
 bea7: mov  rdx rax
 beaa: mov  rdi rbp
 bead: xor  eax eax
 beaf: call 4c50 ; relative offset = -29284
 beb4: jmp bdbf ; relative offset = -250
 beb9: mov  r13 [80 + rsp]
 bebe: mov  rbx [72 + rsp]
 bec3: xor  edi edi
 bec5: mov  edx 0x00000005
 beca: mov  r12 [64 + rsp]
 becf: lea  rsi 
 bed6: call 4860 ; relative offset = -30331
 bedb: mov  r9 r13
 bede: mov  r8 rbx
 bee1: mov  esi 0x00000001
 bee6: mov  rdx rax
 bee9: mov  rcx r12
 beec: mov  rdi rbp
 beef: xor  eax eax
 bef1: call 4c50 ; relative offset = -29350
 bef6: jmp bdbf ; relative offset = -316
 befb: mov  edx 0x00000005
 bf00: lea  rsi 
 bf07: xor  edi edi
 bf09: mov  r14 [88 + rsp]
 bf0e: mov  r13 [80 + rsp]
 bf13: mov  rbx [72 + rsp]
 bf18: mov  r12 [64 + rsp]
 bf1d: call 4860 ; relative offset = -30402
 bf22: push  eax
 bf24: mov  rdx rax
 bf27: push  esi
 bf29: mov  esi 0x00000001
 bf2e: mov  rdi rbp
 bf31: mov  r9 r13
 bf34: mov  r8 rbx
 bf37: mov  rcx r12
 bf3a: xor  eax eax
 bf3c: call 4c50 ; relative offset = -29425
 bf41: pop  esi
 bf42: pop  edi
 bf43: jmp bdbf ; relative offset = -393
 bf48: mov  r15 [96 + rsp]
 bf4d: mov  edx 0x00000005
 bf52: lea  rsi 
 bf59: xor  edi edi
 bf5b: mov  r14 [88 + rsp]
 bf60: mov  r13 [80 + rsp]
 bf65: mov  rbx [72 + rsp]
 bf6a: mov  r12 [64 + rsp]
 bf6f: call 4860 ; relative offset = -30484
 bf74: push  edi
 bf76: mov  rdx rax
 bf79: jmp bf27 ; relative offset = -84
 bf7b: mov  rcx [104 + rsp]
 bf80: mov  edx 0x00000005
 bf85: lea  rsi 
 bf8c: xor  edi edi
 bf8e: mov  r15 [96 + rsp]
 bf93: mov  r14 [88 + rsp]
 bf98: mov  r13 [80 + rsp]
 bf9d: mov  rbx [72 + rsp]
 bfa2: mov  [rsp] rcx
 bfa6: mov  r12 [64 + rsp]
 bfab: call 4860 ; relative offset = -30544
 bfb0: push  ecx
 bfb1: mov  rdx rax
 bfb4: mov  rcx [8 + rsp]
 bfb9: mov  r9 r13
 bfbc: mov  r8 rbx
 bfbf: mov  esi 0x00000001
 bfc4: mov  rdi rbp
 bfc7: xor  eax eax
 bfc9: push  ecx
 bfca: mov  rcx r12
 bfcd: push  edi
 bfcf: push  esi
 bfd1: call 4c50 ; relative offset = -29574
 bfd6: add  rsp 0x20
 bfda: jmp bdbf ; relative offset = -544
 bfdf: mov  r8 [112 + rsp]
 bfe4: mov  rcx [104 + rsp]
 bfe9: mov  edx 0x00000005
 bfee: xor  edi edi
 bff0: lea  rsi 
 bff7: mov  r15 [96 + rsp]
 bffc: mov  r14 [88 + rsp]
 c001: mov  r13 [80 + rsp]
 c006: mov  rbx [72 + rsp]
 c00b: mov  [8 + rsp] r8
 c010: mov  [rsp] rcx
 c014: mov  r12 [64 + rsp]
 c019: call 4860 ; relative offset = -30654
 c01e: mov  r8 [8 + rsp]
 c023: mov  rdx rax
 c026: push  eax
 c028: jmp bfb4 ; relative offset = -118
 c02a: mov  rcx r10
 c02d: mov  r9 r11
 c030: lea  r8 
 c037: mov  rdi rbp
 c03a: lea  rdx 
 c041: mov  esi 0x00000001
 c046: xor  eax eax
 c048: call 4c50 ; relative offset = -29693
 c04d: mov  edx 0x00000005
 c052: lea  rsi 
 c059: xor  edi edi
 c05b: call 4860 ; relative offset = -30720
 c060: mov  eax 0x000007e4
 c066: mov  esi 0x00000001
 c06b: mov  rdi rbp
 c06e: mov  rcx rax
 c071: lea  rdx 
 c078: xor  eax eax
 c07a: call 4c50 ; relative offset = -29743
 c07f: mov  rsi rbp
 c082: mov  edi 0x0000000a
 c087: call 4a20 ; relative offset = -30316
 c08c: mov  edx 0x00000005
 c091: lea  rsi 
 c098: xor  edi edi
 c09a: call 4860 ; relative offset = -30783
 c09f: lea  rcx 
 c0a6: mov  esi 0x00000001
 c0ab: mov  rdi rbp
 c0ae: mov  rdx rax
 c0b1: xor  eax eax
 c0b3: call 4c50 ; relative offset = -29800
 c0b8: mov  rsi rbp
 c0bb: mov  edi 0x0000000a
 c0c0: call 4a20 ; relative offset = -30373
 c0c5: mov  r9 [120 + rsp]
 c0ca: mov  r8 [112 + rsp]
 c0cf: mov  edx 0x00000005
 c0d4: mov  r10 [0x00000080 + rsp]
 c0dc: mov  rcx [104 + rsp]
 c0e1: lea  rsi 
 c0e8: mov  r15 [96 + rsp]
 c0ed: mov  r14 [88 + rsp]
 c0f2: mov  [16 + rsp] r9
 c0f7: mov  r13 [80 + rsp]
 c0fc: mov  rbx [72 + rsp]
 c101: mov  [24 + rsp] r10
 c106: mov  [8 + rsp] r8
 c10b: mov  r12 [64 + rsp]
 c110: mov  [rsp] rcx
 c114: jmp be37 ; relative offset = -738
 c119: call 4890 ; relative offset = -30862
 c11e: UNKNOWN-INSTRUCTION
 c11f: nop 
 c120: UNKNOWN-INSTRUCTION
 c124: mov  edi edi
 c126: lea  rax 
 c12d: xor  r8d r8d
 c130: sal  rdi 0x04
 c134: add  rax rdi
 c137: mov  rdx [rax]
 c13a: UNKNOWN-INSTRUCTION
 c13d: jz c155 ; relative offset = 22
 c13f: mov  rcx [rax + 8]
 c143: cmp  rdx 0x01
 c147: jz c160 ; relative offset = 23
 c149: mov  eax 0x00000001
 c14f: cmp  rdx 0x02
 c153: jz c170 ; relative offset = 27
 c155: mov  eax r8d
 c158: ret 
 c159: nop  [rax + 0x00000000]
 c160: UNKNOWN-INSTRUCTION
 c166: rol  [192 + rcx + rcx * 4] 0xc3
 c16b: nop  [0 + rax + rax * 1]
 c170: movzx  eax [rcx]
 c173: sub  eax 0x30
 c176: jnz c17f ; relative offset = 7
 c178: movzx  eax [rcx + 1]
 c17c: sub  eax 0x30
 c17f: UNKNOWN-INSTRUCTION
 c180: rol  [rcx + 15] 0x95
 c184: rol  [192 + rcx + rcx * 4] 0xc3
 c189: nop  [rax + 0x00000000]
 c190: UNKNOWN-INSTRUCTION
 c196: push  [137 + rdi + rcx * 2]
 c19a: UNKNOWN-INSTRUCTION
 c19b: and  ecx 0x0000f000
 c1a1: cmp  ecx 0x00008000
 c1a7: jnz c1c0 ; relative offset = 23
 c1a9: xor  eax eax
 c1ab: cmp  [RIP + 0x00016152] 0x03
 c1b2: jz c240 ; relative offset = 136
 c1b8: ret 
 c1b9: nop  [rax + 0x00000000]
 c1c0: mov  eax 0x0000002f
 c1c5: cmp  ecx 0x00004000
 c1cb: jz c238 ; relative offset = 107
 c1cd: xor  eax eax
 c1cf: cmp  ecx 0x0000a000
 c1d5: UNKNOWN-INSTRUCTION
 c1d7: rol  [rbx + 0x0161253d] 0x00
 c1de: add  [rbp + 39] esi
 c1e1: ret 
 c1e2: UNKNOWN-INSTRUCTION
 c1e3: nop  [0 + rax + rax * 1]
 c1e8: xor  eax eax
 c1ea: cmp  edx 0x05
 c1ed: jz c1b8 ; relative offset = -55
 c1ef: cmp  edx 0x03
 c1f2: jz c250 ; relative offset = 92
 c1f4: cmp  edx 0x09
 c1f7: jz c250 ; relative offset = 87
 c1f9: cmp  edx 0x06
 c1fc: UNKNOWN-INSTRUCTION
 c1fe: rol  [rbx + 0x0160fe3d] 0x00
 c205: add  [184 + rax + rdi * 2] esi
 c209: UNKNOWN-INSTRUCTION
 c20e: leave 
 c20f: jnz c1b8 ; relative offset = -89
 c211: UNKNOWN-INSTRUCTION
 c213: push  [129 + rdx + rcx * 2]
 c217: out  0x00 unknown
 c219: UNKNOWN-INSTRUCTION
 c21c: mov  eax 0x0000007c
 c221: cmp  esi 0x00001000
 c227: jz c290 ; relative offset = 103
 c229: cmp  esi 0x0000c000
 c22f: UNKNOWN-INSTRUCTION
 c231: shr  bpl 0x3c
 c234: nop  [rax + 0]
 c238: ret 
 c239: nop  [rax + 0x00000000]
 c240: and  esi 0x49
 c243: neg  esi
 c245: UNKNOWN-INSTRUCTION
 c246: rol  [rbx + 0x0fc32ae0] 0x1f
 c24d: UNKNOWN-INSTRUCTION
 c250: mov  eax 0x0000002f
 c255: ret 
 c256: UNKNOWN-INSTRUCTION
 c258: nop  [0x00000000 + rax + rax * 1]
 c260: mov  eax 0x0000007c
 c265: cmp  edx 0x01
 c268: jz c288 ; relative offset = 30
 c26a: cmp  edx 0x07
 c26d: UNKNOWN-INSTRUCTION
 c270: neg  eax
 c272: and  eax 0x3d
 c275: ret 
 c276: UNKNOWN-INSTRUCTION
 c278: nop  [0x00000000 + rax + rax * 1]
 c280: ret 
 c281: nop  [rax + 0x00000000]
 c288: ret 
 c289: nop  [rax + 0x00000000]
 c290: ret 
 c291: UNKNOWN-INSTRUCTION
 c294: nop  [0x00000000 + rax + rax * 1]
 c29c: nop  [rax + 0]
 c2a0: UNKNOWN-INSTRUCTION
 c2a6: push  ebp
 c2a7: UNKNOWN-INSTRUCTION
 c2a8: add  [rax] eax
 c2aa: UNKNOWN-INSTRUCTION
 c2ab: push  ebx
 c2ac: mov  rbx rdi
 c2af: jz c2d0 ; relative offset = 31
 c2b1: mov  rax [RIP + 0x00015cf0]
 c2b8: mov  rdi [rbx + 8]
 c2bc: mov  edx 0x00000001
 c2c1: mov  rsi [rbx]
 c2c4: pop  ebx
 c2c5: mov  rcx [rax]
 c2c8: jmp 4b00 ; relative offset = -30669
 c2cd: nop  [rax]
 c2d0: mov  edi 0x00000001
 c2d5: mov  [RIP + 0x00016524] 0x01
 c2dc: call 4a80 ; relative offset = -30817
 c2e1: UNKNOWN-INSTRUCTION
 c2e2: sar  [rcx + 27] 0x48
 c2e6: cmp  [RIP + 0x00015dfb] 0x00
 c2ed: jz c310 ; relative offset = 33
 c2ef: lea  rdi 
 c2f6: call c2a0 ; relative offset = -91
 c2fb: jmp c2b1 ; relative offset = -76
 c2fd: nop  [rax]
 c300: mov  edi 0x00000001
 c305: call 7f00 ; relative offset = -17418
 c30a: jmp c2e5 ; relative offset = -39
 c30c: nop  [rax + 0]
 c310: lea  rdi 
 c317: call c2a0 ; relative offset = -124
 c31c: lea  rdi 
 c323: call c2a0 ; relative offset = -136
 c328: lea  rdi 
 c32f: call c2a0 ; relative offset = -148
 c334: jmp c2b1 ; relative offset = -136
 c339: nop  [rax + 0x00000000]
 c340: push  esi
 c342: push  ebp
 c344: lea  r13 
 c34b: push  esp
 c34d: lea  r12 
 c351: push  ebp
 c352: lea  rbp 
 c359: push  ebx
 c35a: sub  esp 0x00000090
 c361: UNKNOWN-INSTRUCTION
 c362: mov  rax 0x00000028
 c36a: mov  [0x00000088 + rsp] rax
 c372: xor  eax eax
 c374: mov  rbx rsp
 c377: jmp c3d3 ; relative offset = 90
 c379: nop  [rax + 0x00000000]
 c380: mov  rax [RIP + 0x00015c21]
 c387: mov  rdi [rax]
 c38a: call 4c70 ; relative offset = -30495
 c38f: mov  rdx rbx
 c392: mov  rsi rbp
 c395: xor  edi edi
 c397: call 46d0 ; relative offset = -31948
 c39c: mov  r14d [RIP + 0x00016465]
 c3a3: mov  eax [RIP + 0x0001645b]
 c3a9: UNKNOWN-INSTRUCTION
 c3ab: jz c408 ; relative offset = 91
 c3ad: sub  eax 0x01
 c3b0: mov  esi 0x00000013
 c3b6: mov  [RIP + 0x00016448] eax
 c3bc: mov  edi r14d
 c3bf: call 46f0 ; relative offset = -31956
 c3c4: xor  edx edx
 c3c6: mov  rsi rbx
 c3c9: mov  edi 0x00000002
 c3ce: call 46d0 ; relative offset = -32003
 c3d3: mov  eax [RIP + 0x0001642f]
 c3d9: UNKNOWN-INSTRUCTION
 c3db: jnz c3e7 ; relative offset = 10
 c3dd: mov  eax [RIP + 0x00016421]
 c3e3: UNKNOWN-INSTRUCTION
 c3e5: jz c418 ; relative offset = 49
 c3e7: UNKNOWN-INSTRUCTION
 c3e9: adc  spl [0 + rcx + rax * 1]
 c3ed: UNKNOWN-INSTRUCTION
 c3ee: jz c380 ; relative offset = -112
 c3f0: mov  rdi r13
 c3f3: call c2a0 ; relative offset = -344
 c3f8: mov  rdi r12
 c3fb: call c2a0 ; relative offset = -352
 c400: jmp c380 ; relative offset = -133
 c405: nop  [rax]
 c408: xor  esi esi
 c40a: mov  edi r14d
 c40d: call 4a00 ; relative offset = -31250
 c412: jmp c3bc ; relative offset = -88
 c414: nop  [rax + 0]
 c418: mov  rax [0x00000088 + rsp]
 c420: UNKNOWN-INSTRUCTION
 c421: sub  rax 0x00000028
 c429: jnz c43b ; relative offset = 16
 c42b: add  esp 0x00000090
 c432: pop  ebx
 c433: pop  ebp
 c434: pop  esp
 c436: pop  ebp
 c438: pop  esi
 c43a: ret 
 c43b: call 4890 ; relative offset = -31664
 c440: UNKNOWN-INSTRUCTION
 c444: push  edi
 c446: push  esi
 c448: push  ebp
 c44a: push  esp
 c44c: push  ebp
 c44d: mov  rbp rdi
 c450: push  ebx
 c451: mov  ebx 0x00000080
 c456: sub  esp 0x000000a8
 c45d: UNKNOWN-INSTRUCTION
 c45e: mov  rax 0x00000028
 c466: mov  [0x00000098 + rsp] rax
 c46e: xor  eax eax
 c470: UNKNOWN-INSTRUCTION
 c472: test  [rcx + 15] 0x95
 c476: UNKNOWN-INSTRUCTION
 c477: jz c48d ; relative offset = 20
 c479: lea  rbx 
 c47d: cmp  rsi 0x00000401
 c484: mov  eax 0x00000401
 c489: UNKNOWN-INSTRUCTION
 c48d: mov  rsp 0x3fffffffffffffff
 c497: lea  rax 
 c49c: mov  [rsp] rax
 c4a0: cmp  rbx 0x00000080
 c4a7: jnz c4ed ; relative offset = 68
 c4a9: mov  r13 [rsp]
 c4ad: xor  r15d r15d
 c4b0: UNKNOWN-INSTRUCTION
 c4b2: div  [rbp + 56]
 c4b5: mov  rdx rbx
 c4b8: mov  rsi r13
 c4bb: mov  rdi rbp
 c4be: call 47e0 ; relative offset = -31971
 c4c3: mov  rdx rax
 c4c6: UNKNOWN-INSTRUCTION
 c4c8: sar  [rax + 101] 0x48
 c4cc: UNKNOWN-INSTRUCTION
 c4cd: ror  [rdi] cl
 c4cf: UNKNOWN-INSTRUCTION
 c4d4: mov  rdi r15
 c4d7: call 4680 ; relative offset = -32348
 c4dc: UNKNOWN-INSTRUCTION
 c4de: jecxz  0x77
 c4e0: UNKNOWN-INSTRUCTION
 c4e1: add  rbx rbx
 c4e4: cmp  rbx 0x00000080
 c4eb: jz c4a9 ; relative offset = -68
 c4ed: mov  rdi rbx
 c4f0: call 4690 ; relative offset = -32357
 c4f5: mov  r13 rax
 c4f8: UNKNOWN-INSTRUCTION
 c4fa: ror  [rdi] 0x84
 c4fd: UNKNOWN-INSTRUCTION
 c501: mov  r15 rax
 c504: jmp c4b5 ; relative offset = -81
 c506: UNKNOWN-INSTRUCTION
 c508: nop  [0x00000000 + rax + rax * 1]
 c510: mov  rax 0x7fffffffffffffff
 c51a: UNKNOWN-INSTRUCTION
 c51c: ret 
 c51d: jz c598 ; relative offset = 121
 c51f: mov  rbx 0x7fffffffffffffff
 c529: jmp c4a0 ; relative offset = -142
 c52e: UNKNOWN-INSTRUCTION
 c52f: nop 
 c530: mov  [8 + rsp] rax
 c535: call 4710 ; relative offset = -32298
 c53a: mov  rdx [8 + rsp]
 c53f: cmp  [rax] 0x22
 c542: jz c4cb ; relative offset = -121
 c544: mov  rdi r15
 c547: xor  r15d r15d
 c54a: call 4680 ; relative offset = -32463
 c54f: jmp c56c ; relative offset = 27
 c551: nop  [rax + 0x00000000]
 c558: mov  [R13 + 0 + rdx * 1] 0x00
 c55e: lea  r12 
 c562: UNKNOWN-INSTRUCTION
 c564: push  [76 + rcx + rax * 2]
 c568: UNKNOWN-INSTRUCTION
 c569: jecxz  0x77
 c56b: pop  esp
 c56c: mov  rax [0x00000098 + rsp]
 c574: UNKNOWN-INSTRUCTION
 c575: sub  rax 0x00000028
 c57d: jnz c5e1 ; relative offset = 98
 c57f: add  esp 0x000000a8
 c586: mov  rax r15
 c589: pop  ebx
 c58a: pop  ebp
 c58b: pop  esp
 c58d: pop  ebp
 c58f: pop  esi
 c591: pop  edi
 c593: ret 
 c594: nop  [rax + 0]
 c598: call 4710 ; relative offset = -32397
 c59d: xor  r15d r15d
 c5a0: mov  [rax] 0x0000000c
 c5a6: jmp c56c ; relative offset = -60
 c5a8: mov  rdi r12
 c5ab: call 4690 ; relative offset = -32544
 c5b0: mov  rdi rax
 c5b3: UNKNOWN-INSTRUCTION
 c5b6: jz c5dc ; relative offset = 36
 c5b8: mov  rdx r12
 c5bb: mov  rsi r13
 c5be: call 4a50 ; relative offset = -31603
 c5c3: mov  r15 rax
 c5c6: jmp c56c ; relative offset = -92
 c5c8: mov  rdi r15
 c5cb: mov  rsi r12
 c5ce: call 4b10 ; relative offset = -31427
 c5d3: UNKNOWN-INSTRUCTION
 c5d5: ror  [69 + rdi + rcx * 1] 0xf8
 c5da: jmp c56c ; relative offset = -112
 c5dc: xor  r15d r15d
 c5df: jmp c56c ; relative offset = -117
 c5e1: call 4890 ; relative offset = -32086
 c5e6: UNKNOWN-INSTRUCTION
 c5e8: nop  [0x00000000 + rax + rax * 1]
 c5f0: UNKNOWN-INSTRUCTION
 c5f4: push  esp
 c5f6: xor  esi esi
 c5f8: push  ebp
 c5f9: sub  esp 0x00000118
 c600: UNKNOWN-INSTRUCTION
 c601: mov  rax 0x00000028
 c609: mov  [0x00000108 + rsp] rax
 c611: xor  eax eax
 c613: call 4b30 ; relative offset = -31464
 c618: UNKNOWN-INSTRUCTION
 c61a: ror  [rdi] 0x84
 c61d: UNKNOWN-INSTRUCTION
 c621: mov  rdi rax
 c624: mov  rbp rax
 c627: xor  r12d r12d
 c62a: call 4880 ; relative offset = -32175
 c62f: UNKNOWN-INSTRUCTION
 c632: add  [rax] eax
 c634: UNKNOWN-INSTRUCTION
 c635: jna c660 ; relative offset = 41
 c637: mov  rax [0x00000108 + rsp]
 c63f: UNKNOWN-INSTRUCTION
 c640: sub  rax 0x00000028
 c648: jnz c6ad ; relative offset = 99
 c64a: add  esp 0x00000118
 c651: mov  eax r12d
 c654: pop  ebp
 c655: pop  esp
 c657: ret 
 c658: nop  [0x00000000 + rax + rax * 1]
 c660: mov  rdi rsp
 c663: lea  rdx 
 c667: mov  ecx 0x00000101
 c66c: mov  rsi rbp
 c66f: call 4a30 ; relative offset = -31812
 c674: UNKNOWN-INSTRUCTION
 c675: cmp  unknown 0x24
 c677: UNKNOWN-INSTRUCTION
 c678: mov  rdi rax
 c67b: jz c698 ; relative offset = 27
 c67d: lea  rsi 
 c684: call 49f0 ; relative offset = -31897
 c689: UNKNOWN-INSTRUCTION
 c68a: rol  [rcx + 15] 0x95
 c68e: UNKNOWN-INSTRUCTION
 c68f: jmp c637 ; relative offset = -90
 c691: nop  [rax + 0x00000000]
 c698: UNKNOWN-INSTRUCTION
 c699: jnge c6bf ; relative offset = 36
 c69b: add  [rax] eax
 c69d: jz c637 ; relative offset = -104
 c69f: jmp c67d ; relative offset = -36
 c6a1: nop  [rax + 0x00000000]
 c6a8: xor  r12d r12d
 c6ab: jmp c637 ; relative offset = -118
 c6ad: call 4890 ; relative offset = -32290
 c6b2: UNKNOWN-INSTRUCTION
 c6b5: nop  [0x00000000 + rax + rax * 1]
 c6bd: nop  [rax]
 c6c0: UNKNOWN-INSTRUCTION
 c6c4: mov  rax [rdi + 40]
 c6c8: lea  rdx 
 c6cf: UNKNOWN-INSTRUCTION
 c6d2: jz c740 ; relative offset = 108
 c6d4: UNKNOWN-INSTRUCTION
 c6db: add  eax 0x0000fdf8
 c6e0: jna c733 ; relative offset = 81
 c6e2: UNKNOWN-INSTRUCTION
 c6e5: or  eax 0x0000fdf2
 c6ea: UNKNOWN-INSTRUCTION
 c6ed: jna c733 ; relative offset = 68
 c6ef: UNKNOWN-INSTRUCTION
 c6f3: or  unknown 0x0f
 c6f5: UNKNOWN-INSTRUCTION
 c6f6: or  eax 0x0000fde5
 c6fb: jna c733 ; relative offset = 54
 c6fd: UNKNOWN-INSTRUCTION
 c703: or  eax 0x0000fe04
 c708: jnae c733 ; relative offset = 41
 c70a: UNKNOWN-INSTRUCTION
 c70c: pop  eax
 c70d: or  eax 0x0000fdc6
 c712: UNKNOWN-INSTRUCTION
 c715: push  eax
 c716: add  unknown 0x0f
 c718: UNKNOWN-INSTRUCTION
 c71a: jna c733 ; relative offset = 23
 c71c: UNKNOWN-INSTRUCTION
 c71f: sbb  eax 0x0000fdc0
 c724: UNKNOWN-INSTRUCTION
 c727: jnae c733 ; relative offset = 10
 c729: UNKNOWN-INSTRUCTION
 c72b: sar  [rax + 0x00000001] 0x77
 c732: adc  cl [rax + 137]
 c735: push  edi
 c736: UNKNOWN-INSTRUCTION
 c737: xor  eax eax
 c739: ret 
 c73a: UNKNOWN-INSTRUCTION
 c73b: nop  [0 + rax + rax * 1]
 c740: mov  eax 0x00000001
 c745: ret 
 c746: UNKNOWN-INSTRUCTION
 c748: nop  [0x00000000 + rax + rax * 1]
 c750: UNKNOWN-INSTRUCTION
 c755: jng c767 ; relative offset = 16
 c757: UNKNOWN-INSTRUCTION
 c758: jnz c7a0 ; relative offset = 70
 c75a: UNKNOWN-INSTRUCTION
 c75c: dec  [rdi]
 c75e: mov  bpl dil
 c760: UNKNOWN-INSTRUCTION
 c765: out  dx eax
 c766: UNKNOWN-INSTRUCTION
 c76a: sub  al dil
 c76c: xor  r8d r8d
 c76f: UNKNOWN-INSTRUCTION
 c771: pop  esi
 c772: UNKNOWN-INSTRUCTION
 c776: add  eax 0x0000fd6d
 c77b: jnb c85c ; relative offset = 219
 c781: UNKNOWN-INSTRUCTION
 c783: add  eax 0x0000fd64
 c788: jnae c885 ; relative offset = 247
 c78e: UNKNOWN-INSTRUCTION
 c790: pop  esp
 c791: add  eax 0x0000fd56
 c796: UNKNOWN-INSTRUCTION
 c799: sub  unknown 0xf8
 c79b: UNKNOWN-INSTRUCTION
 c79d: mov  edx 0xb9493fff
 c7a2: stosw 
 c7a3: stosb 
 c7a4: stosb 
 c7a5: stosb 
 c7a6: stosb 
 c7a7: stosb 
 c7a8: stosb 
 c7a9: stosb 
 c7aa: mov  eax 0x0000000a
 c7af: UNKNOWN-INSTRUCTION
 c7b6: mov  r8 rax
 c7b9: or  r8 0x01
 c7bd: cmp  r8 0xff
 c7c1: jz c83c ; relative offset = 121
 c7c3: nop  [0 + rax + rax * 1]
 c7c8: mov  rax r8
 c7cb: mul  rsp
 c7ce: mov  rax rdx
 c7d1: and  rdx 0xfe
 c7d5: shr  rax 
 c7d8: add  rdx rax
 c7db: mov  rax r8
 c7de: sub  rax rdx
 c7e1: cmp  r8 0x09
 c7e5: jna c87e ; relative offset = 147
 c7eb: UNKNOWN-INSTRUCTION
 c7ee: jz c832 ; relative offset = 66
 c7f0: mov  edi 0x00000010
 c7f5: mov  esi 0x00000009
 c7fa: mov  ecx 0x00000003
 c7ff: jmp c811 ; relative offset = 16
 c801: nop  [rax + 0x00000000]
 c808: add  rdi 0x08
 c80c: UNKNOWN-INSTRUCTION
 c80f: jz c832 ; relative offset = 33
 c811: add  rcx 0x02
 c815: mov  rax r8
 c818: xor  edx edx
 c81a: add  rsi rdi
 c81d: div  rcx
 c820: UNKNOWN-INSTRUCTION
 c823: jnae c808 ; relative offset = -29
 c825: mov  rax r8
 c828: xor  edx edx
 c82a: div  rcx
 c82d: UNKNOWN-INSTRUCTION
 c830: jnz c843 ; relative offset = 17
 c832: add  r8 0x02
 c836: cmp  r8 0xff
 c83a: jnz c7c8 ; relative offset = -116
 c83c: xor  r8d r8d
 c83f: mov  rax r8
 c842: ret 
 c843: mov  rax r8
 c846: shr  rax 0x3d
 c84a: UNKNOWN-INSTRUCTION
 c84c: ror  [rcx + 15] 0xba
 c850: loopne c88e ; relative offset = 60
 c852: movzx  eax al
 c855: jnae c83c ; relative offset = -27
 c857: UNKNOWN-INSTRUCTION
 c85a: jnz c83c ; relative offset = -32
 c85c: mov  rax r8
 c85f: ret 
 c860: mov  rax rdi
 c863: and  edi 0x01
 c866: UNKNOWN-INSTRUCTION
 c868: out  dx eax
 c869: ror  [rax + 209] 0xe8
 c86d: or  rax rdi
 c870: UNKNOWN-INSTRUCTION
 c873: sub  al al
 c875: UNKNOWN-INSTRUCTION
 c877: pop  eax
 c878: shr  cl 0xee
 c87b: UNKNOWN-INSTRUCTION
 c87e: mov  ecx 0x00000003
 c883: jmp c825 ; relative offset = -96
 c885: UNKNOWN-INSTRUCTION
 c888: sub  unknown 0xf8
 c88a: jmp c7a0 ; relative offset = -239
 c88f: nop 
 c890: push  ebp
 c892: push  esp
 c894: push  ebp
 c895: mov  rbp rdi
 c898: mov  rdi rsi
 c89b: push  ebx
 c89c: sub  rsp 0x68
 c8a0: mov  r12 [rbp + 40]
 c8a4: UNKNOWN-INSTRUCTION
 c8a5: mov  rax 0x00000028
 c8ad: mov  [88 + rsp] rax
 c8b2: xor  eax eax
 c8b4: mov  rsi r12
 c8b7: call c750 ; relative offset = -364
 c8bc: UNKNOWN-INSTRUCTION
 c8be: ror  [rdi] 0x84
 c8c1: UNKNOWN-INSTRUCTION
 c8c5: mov  rbx rax
 c8c8: UNKNOWN-INSTRUCTION
 c8cc: jz c9b0 ; relative offset = 222
 c8d2: mov  esi 0x00000010
 c8d7: mov  rdi rax
 c8da: call 49e0 ; relative offset = -32511
 c8df: mov  [rsp] rax
 c8e3: UNKNOWN-INSTRUCTION
 c8e5: ror  [rdi] 0x84
 c8e8: UNKNOWN-INSTRUCTION
 c8ec: mov  [16 + rsp] rbx
 c8f1: sal  rbx 0x04
 c8f5: mov  r13 rsp
 c8f8: xor  edx edx
 c8fa: add  rax rbx
 c8fd: mov  rsi rbp
 c900: mov  rdi r13
 c903: mov  [40 + rsp] r12
 c908: mov  [8 + rsp] rax
 c90d: mov  rax [rbp + 48]
 c911: mov  [24 + rsp] 0x00000000
 c91a: mov  [48 + rsp] rax
 c91f: mov  rax [rbp + 56]
 c923: mov  [32 + rsp] 0x00000000
 c92c: mov  [56 + rsp] rax
 c931: mov  rax [rbp + 64]
 c935: mov  [64 + rsp] rax
 c93a: mov  rax [rbp + 72]
 c93e: mov  [72 + rsp] rax
 c943: call 7590 ; relative offset = -21432
 c948: mov  r12d eax
 c94b: UNKNOWN-INSTRUCTION
 c94d: jnz c9c8 ; relative offset = 121
 c94f: mov  rax [72 + rsp]
 c954: mov  edx 0x00000001
 c959: mov  rsi r13
 c95c: mov  rdi rbp
 c95f: mov  [rbp + 72] rax
 c963: call 7590 ; relative offset = -21464
 c968: UNKNOWN-INSTRUCTION
 c969: ror  [rdi] 0x84
 c96c: nop 
 c96d: cmp  edi 0xff
 c970: xor  edx edx
 c972: mov  rsi r13
 c975: mov  rdi rbp
 c978: call 7590 ; relative offset = -21485
 c97d: UNKNOWN-INSTRUCTION
 c97e: ror  [rdi] 0x84
 c981: jpo c906 ; relative offset = -125
 c983: UNKNOWN-INSTRUCTION
 c984: dec  [rax + 139]
 c987: cmp  unknown 0x24
 c989: call 4680 ; relative offset = -33550
 c98e: mov  rax [88 + rsp]
 c993: UNKNOWN-INSTRUCTION
 c994: sub  rax 0x00000028
 c99c: jnz c9ff ; relative offset = 97
 c99e: add  rsp 0x68
 c9a2: mov  eax r12d
 c9a5: pop  ebx
 c9a6: pop  ebp
 c9a7: pop  esp
 c9a9: pop  ebp
 c9ab: ret 
 c9ac: nop  [rax + 0]
 c9b0: mov  esp 0x00000001
 c9b6: jmp c98e ; relative offset = -42
 c9b8: nop  [0x00000000 + rax + rax * 1]
 c9c0: xor  r12d r12d
 c9c3: jmp c98e ; relative offset = -55
 c9c5: nop  [rax]
 c9c8: mov  rdi [rbp + 0]
 c9cc: call 4680 ; relative offset = -33617
 c9d1: mov  rax [rsp]
 c9d5: mov  [rbp + 0] rax
 c9d9: mov  rax [8 + rsp]
 c9de: mov  [rbp + 8] rax
 c9e2: mov  rax [16 + rsp]
 c9e7: mov  [rbp + 16] rax
 c9eb: mov  rax [24 + rsp]
 c9f0: mov  [rbp + 24] rax
 c9f4: mov  rax [72 + rsp]
 c9f9: mov  [rbp + 72] rax
 c9fd: jmp c98e ; relative offset = -113
 c9ff: call 4890 ; relative offset = -33140
 ca04: UNKNOWN-INSTRUCTION
 ca07: nop  [0x00000000 + rax + rax * 1]
 ca0f: nop 
 ca10: UNKNOWN-INSTRUCTION
 ca14: push  esp
 ca16: mov  r12 rdi
 ca19: push  ebp
 ca1a: push  ebx
 ca1b: cmp  [rdi + 64] 0x00
 ca20: mov  rbp [rdi]
 ca23: mov  rax [rdi + 8]
 ca27: jz ca80 ; relative offset = 87
 ca29: cmp  [rdi + 32] 0x00
 ca2e: jz ca80 ; relative offset = 80
 ca30: UNKNOWN-INSTRUCTION
 ca33: jnae ca4e ; relative offset = 25
 ca35: jmp cabc ; relative offset = 130
 ca3a: UNKNOWN-INSTRUCTION
 ca3b: nop  [0 + rax + rax * 1]
 ca40: mov  rax [8 + r12]
 ca45: add  rbp 0x10
 ca49: UNKNOWN-INSTRUCTION
 ca4b: call ffffffff8b48fcc6 ; relative offset = -1958202762
 ca50: jnl ca52 ; relative offset = 0
 ca52: UNKNOWN-INSTRUCTION
 ca54: push  [72 + rcx + rbp * 8]
 ca58: mov  ebx ebp
 ca5a: jmp ca63 ; relative offset = 7
 ca5c: nop  [rax + 0]
 ca60: mov  rdi [rbx]
 ca63: call  rdx
 ca65: push  esp
 ca66: and  unknown 0x40
 ca68: mov  rbx [rbx + 8]
 ca6c: UNKNOWN-INSTRUCTION
 ca6f: jnz ca60 ; relative offset = -17
 ca71: mov  rax [8 + r12]
 ca76: add  rbp 0x10
 ca7a: UNKNOWN-INSTRUCTION
 ca7c: call 499199f8 ; relative offset = 1234227063
 ca81: mov  ebp [rsp]
 ca84: UNKNOWN-INSTRUCTION
 ca87: jnb cabc ; relative offset = 51
 ca89: nop  [rax + 0x00000000]
 ca90: mov  rbx [rbp + 8]
 ca94: UNKNOWN-INSTRUCTION
 ca97: jz cab1 ; relative offset = 24
 ca99: nop  [rax + 0x00000000]
 caa0: mov  rdi rbx
 caa3: mov  rbx [rbx + 8]
 caa7: call 4680 ; relative offset = -33836
 caac: UNKNOWN-INSTRUCTION
 caaf: jnz caa0 ; relative offset = -17
 cab1: add  rbp 0x10
 cab5: UNKNOWN-INSTRUCTION
 cab7: insb 
 cab8: and  unknown 0x08
 caba: jnbe  0xd4
 cabc: mov  rbx [72 + r12]
 cac1: UNKNOWN-INSTRUCTION
 cac4: jz cae1 ; relative offset = 27
 cac6: UNKNOWN-INSTRUCTION
 cac8: nop  [0x00000000 + rax + rax * 1]
 cad0: mov  rdi rbx
 cad3: mov  rbx [rbx + 8]
 cad7: call 4680 ; relative offset = -33884
 cadc: UNKNOWN-INSTRUCTION
 cadf: jnz cad0 ; relative offset = -17
 cae1: mov  rdi [r12]
 cae5: call 4680 ; relative offset = -33898
 caea: pop  ebx
 caeb: mov  rdi r12
 caee: pop  ebp
 caef: pop  esp
 caf1: jmp 4680 ; relative offset = -33910
 caf6: UNKNOWN-INSTRUCTION
 caf8: nop  [0x00000000 + rax + rax * 1]
 cb00: UNKNOWN-INSTRUCTION
 cb04: push  ebp
 cb06: push  esp
 cb08: push  ebp
 cb09: push  ebx
 cb0a: sub  rsp 0x18
 cb0e: UNKNOWN-INSTRUCTION
 cb0f: mov  rax 0x00000028
 cb17: mov  [8 + rsp] rax
 cb1c: xor  eax eax
 cb1e: UNKNOWN-INSTRUCTION
 cb21: jz 4d05 ; relative offset = -32290
 cb27: mov  r13 rsp
 cb2a: mov  r12 rdx
 cb2d: xor  ecx ecx
 cb2f: mov  rbx rdi
 cb32: mov  rdx r13
 cb35: mov  rbp rsi
 cb38: call 7480 ; relative offset = -22205
 cb3d: UNKNOWN-INSTRUCTION
 cb40: jz cb70 ; relative offset = 46
 cb42: mov  [r12] rax
 cb46: xor  eax eax
 cb48: mov  rdx [8 + rsp]
 cb4d: UNKNOWN-INSTRUCTION
 cb4e: sub  rdx 0x00000028
 cb56: jnz cd14 ; relative offset = 440
 cb5c: add  rsp 0x18
 cb60: pop  ebx
 cb61: pop  ebp
 cb62: pop  esp
 cb64: pop  ebp
 cb66: ret 
 cb67: UNKNOWN-INSTRUCTION
 cb68: nop  [0x00000000 + rax + rax * 1]
 cb70: mov  rax [rbx + 24]
 cb74: UNKNOWN-INSTRUCTION
 cb76: sar  [rax + 127] 0x66
 cb7a: UNKNOWN-INSTRUCTION
 cb7b: out  dx eax
 cb7c: in  eax dx
 cb7d: UNKNOWN-INSTRUCTION
 cb80: sub  bpl al
 cb82: mov  rax [rbx + 16]
 cb86: UNKNOWN-INSTRUCTION
 cb88: ror  [rdi] 0x88
 cb8b: pop  [rax]
 cb8d: UNKNOWN-INSTRUCTION
 cb91: out  dx eax
 cb92: in  unknown 0xf3
 cb94: UNKNOWN-INSTRUCTION
 cb96: sub  spl al
 cb98: mov  rax [rbx + 40]
 cb9c: UNKNOWN-INSTRUCTION
 cba3: pop  ecx
 cba4: UNKNOWN-INSTRUCTION
 cba7: call 9352bb ; relative offset = 9602831
 cbac: UNKNOWN-INSTRUCTION
 cbae: mov  r12 [rsp]
 cbb2: cmp  [r12] 0x00
 cbb7: jz cc80 ; relative offset = 195
 cbbd: mov  rax [rbx + 72]
 cbc1: UNKNOWN-INSTRUCTION
 cbc3: ror  [rdi] 0x84
 cbc6: UNKNOWN-INSTRUCTION
 cbca: mov  rdx [rax + 8]
 cbce: mov  [rbx + 72] rdx
 cbd2: mov  rdx [8 + r12]
 cbd7: mov  [rax] rbp
 cbda: mov  [rax + 8] rdx
 cbde: mov  [8 + r12] rax
 cbe3: mov  eax 0x00000001
 cbe8: add  [rbx + 32] 0x01
 cbed: jmp cb48 ; relative offset = -170
 cbf2: UNKNOWN-INSTRUCTION
 cbf3: nop  [0 + rax + rax * 1]
 cbf8: mov  rdx rax
 cbfb: and  eax 0x01
 cbfe: UNKNOWN-INSTRUCTION
 cc00: out  dx eax
 cc01: in  eax dx
 cc02: shr  rdx 
 cc05: or  rdx rax
 cc08: mov  rax [rbx + 16]
 cc0c: UNKNOWN-INSTRUCTION
 cc0f: sub  bpl dl
 cc11: UNKNOWN-INSTRUCTION
 cc13: pop  eax
 cc14: in  eax dx
 cc15: UNKNOWN-INSTRUCTION
 cc17: ror  [rdi] 0x89
 cc1a: jno cc1b ; relative offset = -1
 cc1c: UNKNOWN-INSTRUCTION
 cc1d: dec  [rax + 137]
 cc20: ret  0xe083
 cc23: add  [rsi + 15] esp
 cc26: out  dx eax
 cc27: in  unknown 0x48
 cc29: shr  edx 
 cc2b: or  rdx rax
 cc2e: UNKNOWN-INSTRUCTION
 cc31: sub  spl dl
 cc33: UNKNOWN-INSTRUCTION
 cc35: pop  eax
 cc36: in  unknown 0xe9
 cc38: pop  esp
 cc39: UNKNOWN-INSTRUCTION
 cc3b: dec  [rdi]
 cc3d: UNKNOWN-INSTRUCTION
 cc40: mov  rdi rbx
 cc43: call c6c0 ; relative offset = -1416
 cc48: mov  rax [rbx + 40]
 cc4c: UNKNOWN-INSTRUCTION
 cc56: pop  ecx
 cc57: UNKNOWN-INSTRUCTION
 cc5a: jmp ffffffffff4e526e ; relative offset = -11696625
 cc5f: UNKNOWN-INSTRUCTION
 cc60: push  ebx
 cc62: UNKNOWN-INSTRUCTION
 cc63: pop  ecx
 cc64: UNKNOWN-INSTRUCTION
 cc65: or  unknown 0x80
 cc67: js cc79 ; relative offset = 16
 cc69: UNKNOWN-INSTRUCTION
 cc6a: jz ccb8 ; relative offset = 76
 cc6c: UNKNOWN-INSTRUCTION
 cc6e: and  eax 0x0000f875
 cc73: jnae ccc0 ; relative offset = 75
 cc75: mov  eax 0xffffffff
 cc7a: jmp cb48 ; relative offset = -311
 cc7f: nop 
 cc80: mov  [r12] rbp
 cc84: mov  eax 0x00000001
 cc89: add  [rbx + 32] 0x01
 cc8e: add  [rbx + 24] 0x01
 cc93: jmp cb48 ; relative offset = -336
 cc98: nop  [0x00000000 + rax + rax * 1]
 cca0: mov  edi 0x00000010
 cca5: call 4690 ; relative offset = -34330
 ccaa: UNKNOWN-INSTRUCTION
 ccad: jz cc75 ; relative offset = -58
 ccaf: jmp cbd2 ; relative offset = -226
 ccb4: nop  [rax + 0]
 ccb8: UNKNOWN-INSTRUCTION
 ccba: pop  ecx
 ccbb: loopne cca8 ; relative offset = -21
 ccbd: scasb 
 ccbe: UNKNOWN-INSTRUCTION
 ccbf: nop 
 ccc0: UNKNOWN-INSTRUCTION
 ccc2: and  eax 0x0000f825
 ccc7: jnb cd00 ; relative offset = 55
 ccc9: UNKNOWN-INSTRUCTION
 cccc: sub  unknown 0xf4
 ccce: mov  rdi rbx
 ccd1: call c890 ; relative offset = -1094
 ccd6: UNKNOWN-INSTRUCTION
 ccd8: jz cc75 ; relative offset = -101
 ccda: xor  ecx ecx
 ccdc: mov  rdx r13
 ccdf: mov  rsi rbp
 cce2: mov  rdi rbx
 cce5: call 7480 ; relative offset = -22634
 ccea: UNKNOWN-INSTRUCTION
 ccec: ror  [rdi] 0x84
 ccef: mov  ebx 0xe9fffffe
 ccf4: or  eax 0x0fffff80
 ccf9: UNKNOWN-INSTRUCTION
 cd02: pop  esp
 cd03: and  eax 0x0000f7e4
 cd08: UNKNOWN-INSTRUCTION
 cd0b: sub  unknown 0xf4
 cd0d: UNKNOWN-INSTRUCTION
 cd0f: mov  edx 0xbaeb3ffe
 cd14: call 4890 ; relative offset = -33929
 cd19: nop  [rax + 0x00000000]
 cd20: UNKNOWN-INSTRUCTION
 cd24: push  edi
 cd26: push  esi
 cd28: push  ebp
 cd2a: mov  r13 r8
 cd2d: push  esp
 cd2f: mov  r12 rdi
 cd32: push  ebp
 cd33: push  ebx
 cd34: mov  rbx rcx
 cd37: sub  esp 0x00000098
 cd3e: mov  [rsp] rsi
 cd42: mov  [24 + rsp] r8
 cd47: mov  [72 + rsp] edx
 cd4b: UNKNOWN-INSTRUCTION
 cd4c: mov  rax 0x00000028
 cd54: mov  [0x00000088 + rsp] rax
 cd5c: mov  eax edx
 cd5e: and  edx 0x20
 cd61: mov  [48 + rsp] edx
 cd65: and  eax 0x03
 cd68: cmp  edx 0x01
 cd6b: mov  [16 + rsp] eax
 cd6f: sbb  eax eax
 cd71: and  eax 0xe8
 cd74: add  eax 0x00000400
 cd79: mov  [52 + rsp] eax
 cd7d: call 47c0 ; relative offset = -34242
 cd82: mov  r15 [rax]
 cd85: mov  r14 rax
 cd88: mov  rdi r15
 cd8b: call 4880 ; relative offset = -34064
 cd90: mov  rcx [r14 + 16]
 cd94: mov  r14 [r14 + 8]
 cd98: mov  rbp rax
 cd9b: sub  rax 0x01
 cd9f: cmp  rax 0x10
 cda3: mov  eax 0x00000001
 cda8: mov  rdi r14
 cdab: mov  [56 + rsp] rcx
 cdb0: UNKNOWN-INSTRUCTION
 cdb2: call 20065b00 ; relative offset = 537234760
 cdb8: UNKNOWN-INSTRUCTION
 cdbd: clc 
 cdbf: call 4880 ; relative offset = -34116
 cdc4: cmp  rax 0x10
 cdc8: lea  rax 
 cdcf: UNKNOWN-INSTRUCTION
 cdd2: LOCK mov  rax [rsp]
 cdd7: add  unknown 0x00000287
 cddd: mov  [8 + rsp] rax
 cde2: UNKNOWN-INSTRUCTION
 cde5: jna cf90 ; relative offset = 421
 cdeb: mov  rax [24 + rsp]
 cdf0: xor  edx edx
 cdf2: div  rbx
 cdf5: mov  rdi rax
 cdf8: UNKNOWN-INSTRUCTION
 cdfa: ror  [rdi] cl
 cdfc: UNKNOWN-INSTRUCTION
 cdfd: test  unknown 0x01
 cdff: UNKNOWN-INSTRUCTION
 ce01: mov  rax r12
 ce04: xor  edx edx
 ce06: div  rdi
 ce09: mov  rcx rax
 ce0c: lea  rax 
 ce10: xor  edx edx
 ce12: add  rax rax
 ce15: div  rdi
 ce18: add  rdx rdx
 ce1b: mov  r9d eax
 ce1e: UNKNOWN-INSTRUCTION
 ce21: jna d5b8 ; relative offset = 1937
 ce27: xor  edi edi
 ce29: UNKNOWN-INSTRUCTION
 ce2b: rol  [rax + 15] cl
 ce2e: UNKNOWN-INSTRUCTION
 ce2f: mov  [92 + rbx + rcx * 4] 0x83414824
 ce37: jecxz  0x10
 ce39: jz d37c ; relative offset = 1341
 ce3f: mov  r8d [52 + rsp]
 ce44: xor  ebx ebx
 ce46: mov  rsi r8
 ce49: UNKNOWN-INSTRUCTION
 ce4c: jna d29f ; relative offset = 1101
 ce52: cmp  [16 + rsp] 0x01
 ce57: mov  r8 [8 + rsp]
 ce5c: jz d590 ; relative offset = 1838
 ce62: mov  r10d [16 + rsp]
 ce67: UNKNOWN-INSTRUCTION
 ce6a: jnz ce90 ; relative offset = 36
 ce6c: add  edi r9d
 ce6f: UNKNOWN-INSTRUCTION
 ce71: jng ce90 ; relative offset = 29
 ce73: add  rcx 0x01
 ce77: UNKNOWN-INSTRUCTION
 ce7a: jz ce90 ; relative offset = 20
 ce7c: mov  eax [52 + rsp]
 ce80: UNKNOWN-INSTRUCTION
 ce83: jz d692 ; relative offset = 2057
 ce89: nop  [rax + 0x00000000]
 ce90: mov  rsi 0xcccccccccccccccd
 ce9a: mov  rbp r8
 ce9d: nop  [rax]
 cea0: mov  rax rcx
 cea3: sub  rbp 0x01
 cea7: mul  rsp
 ceaa: mov  rax rcx
 cead: shr  rdx 0x03
 ceb1: lea  rdi 
 ceb5: add  rdi rdi
 ceb8: sub  rax rdi
 cebb: add  eax 0x30
 cebe: mov  [rbp + 0] al
 cec1: mov  rax rcx
 cec4: mov  rcx rdx
 cec7: cmp  rax 0x09
 cecb: jnbe  0xd3
 cecd: test  [72 + rsp] 0x04
 ced2: jz d1fc ; relative offset = 804
 ced8: mov  rdi r14
 cedb: mov  r12 r8
 cede: mov  [64 + rsp] r8
 cee3: mov  r13 0xffffffff
 ceea: call 4880 ; relative offset = -34415
 ceef: sub  r12 rbp
 cef2: mov  rsi rbp
 cef5: mov  ecx 0x00000029
 cefa: mov  r15 rax
 cefd: lea  rax 
 cf02: mov  rdx r12
 cf05: mov  rdi rax
 cf08: mov  [16 + rsp] rax
 cf0d: call 4a30 ; relative offset = -34018
 cf12: mov  [32 + rsp] ebx
 cf16: mov  rbp [64 + rsp]
 cf1b: mov  rbx r12
 cf1e: mov  r12 [56 + rsp]
 cf23: jmp cf63 ; relative offset = 62
 cf25: nop  [rax]
 cf28: UNKNOWN-INSTRUCTION
 cf2b: mov  rax [16 + rsp]
 cf30: UNKNOWN-INSTRUCTION
 cf32: jmp cf81 ; relative offset = 76
 cf35: sub  ebx ebp
 cf37: lea  rsi 
 cf3b: sub  rbp r13
 cf3e: mov  rdx r13
 cf41: mov  rdi rbp
 cf44: call 4a50 ; relative offset = -34041
 cf49: UNKNOWN-INSTRUCTION
 cf4c: jz d270 ; relative offset = 798
 cf52: sub  rbp r15
 cf55: mov  rdx r15
 cf58: mov  rsi r14
 cf5b: mov  rdi rbp
 cf5e: call 4a50 ; relative offset = -34067
 cf63: movzx  rax [r12]
 cf68: UNKNOWN-INSTRUCTION
 cf6a: jz cf28 ; relative offset = -68
 cf6c: cmp  unknown 0x7e
 cf6e: UNKNOWN-INSTRUCTION
 cf70: in  unknown 0x02
 cf72: UNKNOWN-INSTRUCTION
 cf79: ret 
 cf7b: sub  rbx rax
 cf7e: mov  r13 rax
 cf81: mov  rax [16 + rsp]
 cf86: lea  rsi 
 cf8a: add  r12 0x01
 cf8e: jmp cf3b ; relative offset = -85
 cf90: mov  rax rbx
 cf93: xor  edx edx
 cf95: div  r13
 cf98: UNKNOWN-INSTRUCTION
 cf9b: jnz cfa9 ; relative offset = 12
 cf9d: mul  rsp
 cfa0: mov  rcx rax
 cfa3: jno d368 ; relative offset = 959
 cfa9: mov  rax [24 + rsp]
 cfae: mov  [32 + rsp] rbx
 cfb3: UNKNOWN-INSTRUCTION
 cfb4: insb 
 cfb5: and  unknown 0x20
 cfb7: mov  [32 + rsp] rax
 cfbc: UNKNOWN-INSTRUCTION
 cfbd: insb 
 cfbe: and  unknown 0x20
 cfc0: UNKNOWN-INSTRUCTION
 cfc2: ror  [rdi] 0x88
 cfc5: UNKNOWN-INSTRUCTION
 cfc6: add  [rax] eax
 cfc8: UNKNOWN-INSTRUCTION
 cfc9: mov  [32 + rsp] r12
 cfce: UNKNOWN-INSTRUCTION
 cfcf: stc 
 cfd0: UNKNOWN-INSTRUCTION
 cfd1: insb 
 cfd2: and  unknown 0x20
 cfd4: UNKNOWN-INSTRUCTION
 cfd6: in  unknown 0x0f
 cfd8: mov  bpl sil
 cfda: UNKNOWN-INSTRUCTION
 cfde: leave 
 cfdf: test  [72 + rsp] 0x10
 cfe4: jz d108 ; relative offset = 286
 cfea: UNKNOWN-INSTRUCTION
 cfeb: and  unknown 0x34
 cfee: xor  ebx ebx
 cff0: UNKNOWN-INSTRUCTION
 cff1: shr  bpl 0x08
 cff4: nop  [rax + 0]
 cff8: UNKNOWN-INSTRUCTION
 cffb: ret  0xc0d9
 cffe: add  ebx 0x01
 d001: UNKNOWN-INSTRUCTION
 d002: ret  0xcbd9
 d005: UNKNOWN-INSTRUCTION
 d006: jnae d018 ; relative offset = 15
 d009: cmp  ebx 0x08
 d00c: jnz cff8 ; relative offset = -22
 d00e: UNKNOWN-INSTRUCTION
 d012: jmp d01c ; relative offset = 8
 d014: nop  [rax + 0]
 d018: UNKNOWN-INSTRUCTION
 d01c: lea  r15 
 d020: UNKNOWN-INSTRUCTION
 d022: cmp  [48 + rsp] 0x01
 d027: adc  rbp 0x02
 d02b: cmp  [16 + rsp] 0x01
 d030: jz d448 ; relative offset = 1042
 d036: UNKNOWN-INSTRUCTION
 d037: sub  eax 0x0000f4c4
 d03c: UNKNOWN-INSTRUCTION
 d03e: jna d2e0 ; relative offset = 668
 d044: UNKNOWN-INSTRUCTION
 d045: add  eax 0x0000f4a2
 d04a: UNKNOWN-INSTRUCTION
 d04b: leave 
 d04c: UNKNOWN-INSTRUCTION
 d04e: jnb d5d0 ; relative offset = 1404
 d054: UNKNOWN-INSTRUCTION
 d057: jnge d07d ; relative offset = 36
 d059: movzx  r8 [78 + rsp + r12 * 1]
 d05f: UNKNOWN-INSTRUCTION
 d061: or  unknown 0x66
 d063: mov  [76 + rsp] eax
 d067: UNKNOWN-INSTRUCTION
 d068: rcr  cl 0x6c
 d06b: and  unknown 0x4c
 d06d: UNKNOWN-INSTRUCTION
 d06e: jnge d094 ; relative offset = 36
 d070: UNKNOWN-INSTRUCTION
 d072: insb 
 d073: and  unknown 0x4e
 d075: mov  rax [32 + rsp]
 d07a: mov  [32 + rsp] rax
 d07f: UNKNOWN-INSTRUCTION
 d080: insb 
 d081: and  unknown 0x20
 d083: UNKNOWN-INSTRUCTION
 d085: sar  [rcx + 6] 0xd8
 d089: add  eax 0x0000f45a
 d08e: mov  ecx [16 + rsp]
 d092: UNKNOWN-INSTRUCTION
 d093: leave 
 d094: jnz d2e8 ; relative offset = 590
 d09a: UNKNOWN-INSTRUCTION
 d09b: leave 
 d09c: UNKNOWN-INSTRUCTION
 d09d: jmp ffffffff840fdb1c ; relative offset = -2079389062
 d0a2: add  al [rax]
 d0a5: UNKNOWN-INSTRUCTION
 d0a8: jmp d0b0 ; relative offset = 6
 d0aa: UNKNOWN-INSTRUCTION
 d0ac: nop  [rax + 0]
 d0b0: add  rax 0x01
 d0b4: mov  [32 + rsp] rax
 d0b9: UNKNOWN-INSTRUCTION
 d0ba: insb 
 d0bb: and  unknown 0x20
 d0bd: jns d2ec ; relative offset = 553
 d0c3: UNKNOWN-INSTRUCTION
 d0c4: add  eax 0x0000f41f
 d0c9: UNKNOWN-INSTRUCTION
 d0ca: leave 
 d0cb: jmp d2f0 ; relative offset = 544
 d0d0: UNKNOWN-INSTRUCTION
 d0d1: add  eax 0x0000f412
 d0d6: UNKNOWN-INSTRUCTION
 d0d7: leave 
 d0d8: test  [72 + rsp] 0x10
 d0dd: jnz cfea ; relative offset = -249
 d0e3: jmp d108 ; relative offset = 35
 d0e5: nop  [rax]
 d0e8: UNKNOWN-INSTRUCTION
 d0e9: add  eax 0x0000f3fa
 d0ee: mov  [32 + rsp] r12
 d0f3: UNKNOWN-INSTRUCTION
 d0f4: stc 
 d0f5: UNKNOWN-INSTRUCTION
 d0f6: insb 
 d0f7: and  unknown 0x20
 d0f9: UNKNOWN-INSTRUCTION
 d0fb: in  unknown 0x0f
 d0fd: mov  ebx ebx
 d0ff: UNKNOWN-INSTRUCTION
 d101: jmp  rbx
 d103: UNKNOWN-INSTRUCTION
 d104: nop  [rax + 0]
 d108: cmp  [16 + rsp] 0x01
 d10d: jz d19a ; relative offset = 135
 d113: UNKNOWN-INSTRUCTION
 d114: sub  eax 0x0000f3e7
 d119: UNKNOWN-INSTRUCTION
 d11b: jna d19a ; relative offset = 125
 d11d: UNKNOWN-INSTRUCTION
 d11e: add  eax 0x0000f3c9
 d123: UNKNOWN-INSTRUCTION
 d124: leave 
 d125: UNKNOWN-INSTRUCTION
 d127: jnb d630 ; relative offset = 1283
 d12d: UNKNOWN-INSTRUCTION
 d130: jnge d156 ; relative offset = 36
 d132: movzx  r8 [78 + rsp + r12 * 1]
 d138: UNKNOWN-INSTRUCTION
 d13a: or  unknown 0x66
 d13c: mov  [76 + rsp] eax
 d140: UNKNOWN-INSTRUCTION
 d141: rcr  cl 0x6c
 d144: and  unknown 0x4c
 d146: UNKNOWN-INSTRUCTION
 d147: jnge d16d ; relative offset = 36
 d149: UNKNOWN-INSTRUCTION
 d14b: insb 
 d14c: and  unknown 0x4e
 d14e: mov  rax [32 + rsp]
 d153: mov  [32 + rsp] rax
 d158: UNKNOWN-INSTRUCTION
 d159: insb 
 d15a: and  unknown 0x20
 d15c: UNKNOWN-INSTRUCTION
 d15e: sar  [rcx + 6] 0xd8
 d162: add  eax 0x0000f381
 d167: mov  r8d [16 + rsp]
 d16c: UNKNOWN-INSTRUCTION
 d16f: jnz d198 ; relative offset = 39
 d171: UNKNOWN-INSTRUCTION
 d172: leave 
 d173: UNKNOWN-INSTRUCTION
 d174: jmp 2174d7f3 ; relative offset = 561251962
 d179: UNKNOWN-INSTRUCTION
 d17b: jmp d17f ; relative offset = 2
 d17d: UNKNOWN-INSTRUCTION
 d17f: add  rax 0x01
 d183: mov  [16 + rsp] rax
 d188: UNKNOWN-INSTRUCTION
 d189: insb 
 d18a: and  unknown 0x10
 d18c: js d6b7 ; relative offset = 1317
 d192: jmp d19a ; relative offset = 6
 d194: nop  [rax + 0]
 d198: UNKNOWN-INSTRUCTION
 d19a: sub  rsp 0x10
 d19e: mov  rdx 0xffffffff
 d1a5: mov  esi 0x00000001
 d1aa: xor  eax eax
 d1ac: mov  rbx [16 + rsp]
 d1b1: lea  rcx 
 d1b8: UNKNOWN-INSTRUCTION
 d1b9: cmp  unknown 0x24
 d1bb: mov  rdi rbx
 d1be: call 4ce0 ; relative offset = -34019
 d1c3: mov  rdi rbx
 d1c6: mov  ebx 0xffffffff
 d1cb: call 4880 ; relative offset = -35152
 d1d0: pop  esi
 d1d1: pop  edi
 d1d2: mov  rdx rax
 d1d5: mov  r12 rax
 d1d8: mov  rbp [8 + rsp]
 d1dd: mov  rsi [rsp]
 d1e1: sub  rbp rdx
 d1e4: mov  rdi rbp
 d1e7: call 4b90 ; relative offset = -34396
 d1ec: lea  r8 
 d1f1: test  [72 + rsp] 0x04
 d1f6: jnz ced8 ; relative offset = -804
 d1fc: test  [72 + rsp] 0x80
 d201: jz d21f ; relative offset = 28
 d203: cmp  ebx 0xff
 d206: jz d390 ; relative offset = 388
 d20c: mov  eax [72 + rsp]
 d210: and  eax 0x00000100
 d215: mov  esi eax
 d217: or  esi ebx
 d219: jnz d4e0 ; relative offset = 705
 d21f: mov  rax [8 + rsp]
 d224: mov  [rax] 0x00
 d227: mov  rax [0x00000088 + rsp]
 d22f: UNKNOWN-INSTRUCTION
 d230: sub  rax 0x00000028
 d238: jnz d8be ; relative offset = 1664
 d23e: add  esp 0x00000098
 d245: mov  rax rbp
 d248: pop  ebx
 d249: pop  ebp
 d24a: pop  esp
 d24c: pop  ebp
 d24e: pop  esi
 d250: pop  edi
 d252: ret 
 d253: nop  [0 + rax + rax * 1]
 d258: mov  r13 rbx
 d25b: mov  rsi [16 + rsp]
 d260: xor  ebx ebx
 d262: jmp cf8a ; relative offset = -733
 d267: UNKNOWN-INSTRUCTION
 d268: nop  [0x00000000 + rax + rax * 1]
 d270: mov  ebx [32 + rsp]
 d274: jmp d1fc ; relative offset = -122
 d276: UNKNOWN-INSTRUCTION
 d278: nop  [0x00000000 + rax + rax * 1]
 d280: UNKNOWN-INSTRUCTION
 d281: inc  [rax + 15]
 d284: UNKNOWN-INSTRUCTION
 d285: mov  [rax + 15] 0xc383ffb6
 d28c: add  [rbp + 57] ecx
 d28f: ror  [rdi] 
 d291: UNKNOWN-INSTRUCTION
 d292: push  edx
 d293: add  unknown 0x00
 d295: UNKNOWN-INSTRUCTION
 d296: cmp  ebx 0x08
 d299: jz ce52 ; relative offset = -1101
 d29f: mov  rax rcx
 d2a2: xor  edx edx
 d2a4: mov  ecx edi
 d2a6: div  r8
 d2a9: sar  ecx 
 d2ab: mov  r10 rax
 d2ae: lea  eax 
 d2b1: xor  edx edx
 d2b3: lea  eax 
 d2b7: div  esi
 d2b9: lea  edx 
 d2bc: mov  r9d eax
 d2bf: mov  rcx r10
 d2c2: add  edi edx
 d2c4: UNKNOWN-INSTRUCTION
 d2c6: jnbe  0xb8
 d2c8: UNKNOWN-INSTRUCTION
 d2c9: inc  [rax + 15]
 d2cc: UNKNOWN-INSTRUCTION
 d2cd: mov  [rax + 15] 0xc783ffb6
 d2d4: add  bpl bpl
 d2d6: mov  bpl 0x66
 d2d8: nop  [0x00000000 + rax + rax * 1]
 d2e0: UNKNOWN-INSTRUCTION
 d2e1: shr  bpl 0x0c
 d2e4: nop  [rax + 0]
 d2e8: UNKNOWN-INSTRUCTION
 d2e9: leave 
 d2ea: jmp d2f0 ; relative offset = 4
 d2ec: UNKNOWN-INSTRUCTION
 d2ed: leave 
 d2ee: UNKNOWN-INSTRUCTION
 d2ef: nop 
 d2f0: UNKNOWN-INSTRUCTION
 d2f1: jnge d317 ; relative offset = 36
 d2f3: UNKNOWN-INSTRUCTION
 d2f4: sub  rsp 0x10
 d2f8: mov  esi 0x00000001
 d2fd: xor  eax eax
 d2ff: mov  r12 [16 + rsp]
 d304: mov  rdx 0xffffffff
 d30b: lea  rcx 
 d312: mov  rdi r12
 d315: UNKNOWN-INSTRUCTION
 d316: cmp  unknown 0x24
 d318: call 4ce0 ; relative offset = -34365
 d31d: mov  rdi r12
 d320: call 4880 ; relative offset = -35493
 d325: pop  esi
 d326: pop  edi
 d327: UNKNOWN-INSTRUCTION
 d328: insb 
 d329: and  unknown 0x20
 d32b: UNKNOWN-INSTRUCTION
 d32d: call fc35c7a ; relative offset = 264407368
 d332: UNKNOWN-INSTRUCTION
 d333: mov  ecx 0xf6000001
 d338: and  unknown 0x48
 d33b: UNKNOWN-INSTRUCTION
 d33c: jz d358 ; relative offset = 26
 d33e: mov  rax [rsp]
 d342: UNKNOWN-INSTRUCTION
 d343: jnge d355 ; relative offset = 16
 d345: push  [rax]
 d347: jz d610 ; relative offset = 707
 d34d: UNKNOWN-INSTRUCTION
 d34f: jmp d35a ; relative offset = 9
 d351: nop  [rax + 0x00000000]
 d358: UNKNOWN-INSTRUCTION
 d35a: mov  r12 rdx
 d35d: sub  r12 r15
 d360: jmp d1d8 ; relative offset = -397
 d365: nop  [rax]
 d368: mov  r11d [72 + rsp]
 d36d: xor  edi edi
 d36f: xor  r9d r9d
 d372: and  r11d 0x10
 d376: jnz ce3f ; relative offset = -1341
 d37c: mov  ebx 0xffffffff
 d381: jmp ce52 ; relative offset = -1332
 d386: UNKNOWN-INSTRUCTION
 d388: nop  [0x00000000 + rax + rax * 1]
 d390: mov  rcx [24 + rsp]
 d395: cmp  rcx 0x01
 d399: jna d79a ; relative offset = 1019
 d39f: mov  edx [52 + rsp]
 d3a3: mov  ebx 0x00000001
 d3a8: mov  eax 0x00000001
 d3ad: nop  [rax]
 d3b0: imul  rax rdx
 d3b4: UNKNOWN-INSTRUCTION
 d3b7: jna d3c1 ; relative offset = 8
 d3b9: add  ebx 0x01
 d3bc: cmp  ebx 0x08
 d3bf: jnz d3b0 ; relative offset = -17
 d3c1: mov  esi [72 + rsp]
 d3c5: mov  eax esi
 d3c7: and  eax 0x00000100
 d3cc: and  esi 0x40
 d3cf: jz d3f0 ; relative offset = 31
 d3d1: mov  rsi [rsp]
 d3d5: lea  rcx 
 d3dc: mov  [rsi + 0x00000287] 0x20
 d3e3: mov  [8 + rsp] rcx
 d3e8: UNKNOWN-INSTRUCTION
 d3ea: jz d8d8 ; relative offset = 1256
 d3f0: mov  rsi [8 + rsp]
 d3f5: mov  r9d [48 + rsp]
 d3fa: lea  rdx 
 d3fe: UNKNOWN-INSTRUCTION
 d400: leave 
 d401: jnz d40c ; relative offset = 9
 d403: cmp  ebx 0x01
 d406: jz d6d0 ; relative offset = 708
 d40c: movsxd  rbx ebx
 d40f: lea  rcx 
 d416: movzx  ecx [rcx + rbx * 1]
 d41a: mov  [rsi] cl
 d41c: UNKNOWN-INSTRUCTION
 d41d: ror  [rdi] 0x84
 d420: mov  dil 0x02
 d422: UNKNOWN-INSTRUCTION
 d424: mov  r8d [48 + rsp]
 d429: UNKNOWN-INSTRUCTION
 d42b: ror  [rdi] 0x85
 d42e: UNKNOWN-INSTRUCTION
 d42f: add  [rax] eax
 d431: UNKNOWN-INSTRUCTION
 d432: lea  rax 
 d436: mov  [rdx] 0x42
 d439: mov  [8 + rsp] rax
 d43e: jmp d21f ; relative offset = -548
 d443: nop  [0 + rax + rax * 1]
 d448: sub  rsp 0x10
 d44c: lea  rcx 
 d453: mov  rdx 0xffffffff
 d45a: xor  eax eax
 d45c: UNKNOWN-INSTRUCTION
 d45d: rcr  bpl 0x3c
 d460: and  unknown 0x4c
 d462: mov  esp [16 + rsp]
 d466: mov  esi 0x00000001
 d46b: mov  rdi r12
 d46e: UNKNOWN-INSTRUCTION
 d46f: jnge d495 ; relative offset = 36
 d471: UNKNOWN-INSTRUCTION
 d472: call 4ce0 ; relative offset = -34711
 d477: mov  rdi r12
 d47a: call 4880 ; relative offset = -35839
 d47f: mov  rdx rax
 d482: pop  eax
 d483: pop  ecx
 d484: UNKNOWN-INSTRUCTION
 d485: insb 
 d486: and  unknown 0x20
 d488: UNKNOWN-INSTRUCTION
 d48b: jna d337 ; relative offset = -346
 d491: UNKNOWN-INSTRUCTION
 d492: add  eax 0x0000f059
 d497: UNKNOWN-INSTRUCTION
 d498: leave 
 d499: UNKNOWN-INSTRUCTION
 d49a: stc 
 d49b: sub  rsp 0x10
 d49f: mov  rdx 0xffffffff
 d4a6: xor  eax eax
 d4a8: mov  r15 [16 + rsp]
 d4ad: lea  rcx 
 d4b4: mov  esi 0x00000001
 d4b9: mov  rdi r15
 d4bc: UNKNOWN-INSTRUCTION
 d4bd: cmp  unknown 0x24
 d4bf: call 4ce0 ; relative offset = -34788
 d4c4: mov  rdi r15
 d4c7: call 4880 ; relative offset = -35916
 d4cc: pop  ebp
 d4ce: pop  edi
 d4d0: mov  rdx rax
 d4d3: mov  r12 rax
 d4d6: jmp d1d8 ; relative offset = -771
 d4db: nop  [0 + rax + rax * 1]
 d4e0: test  [72 + rsp] 0x40
 d4e5: jz d3e8 ; relative offset = -259
 d4eb: jmp d3d1 ; relative offset = -287
 d4f0: UNKNOWN-INSTRUCTION
 d4f1: add  eax 0x0000effa
 d4f6: UNKNOWN-INSTRUCTION
 d4f7: leave 
 d4f8: UNKNOWN-INSTRUCTION
 d4f9: sub  eax 0x0000f002
 d4fe: UNKNOWN-INSTRUCTION
 d4ff: jna d499 ; relative offset = -105
 d502: UNKNOWN-INSTRUCTION
 d503: add  eax 0x0000efe4
 d508: UNKNOWN-INSTRUCTION
 d509: ret  0xf2db
 d50c: jnb d660 ; relative offset = 334
 d512: UNKNOWN-INSTRUCTION
 d515: leave 
 d516: UNKNOWN-INSTRUCTION
 d517: jnge d53d ; relative offset = 36
 d519: movzx  r8 [78 + rsp + r12 * 1]
 d51f: UNKNOWN-INSTRUCTION
 d521: or  unknown 0x66
 d523: mov  [76 + rsp] eax
 d527: UNKNOWN-INSTRUCTION
 d528: rcr  cl 0x6c
 d52b: and  unknown 0x4c
 d52d: UNKNOWN-INSTRUCTION
 d52e: jnge d554 ; relative offset = 36
 d530: UNKNOWN-INSTRUCTION
 d532: insb 
 d533: and  unknown 0x4e
 d535: mov  rax [32 + rsp]
 d53a: mov  [32 + rsp] rax
 d53f: UNKNOWN-INSTRUCTION
 d540: insb 
 d541: and  unknown 0x20
 d543: UNKNOWN-INSTRUCTION
 d545: sar  [rcx + 6] 0xd8
 d549: add  eax 0x0000ef9a
 d54e: mov  edx [16 + rsp]
 d552: UNKNOWN-INSTRUCTION
 d554: jnz d580 ; relative offset = 42
 d556: UNKNOWN-INSTRUCTION
 d557: jmp 67baf39 ; relative offset = 108714461
 d55c: jz d582 ; relative offset = 36
 d55e: UNKNOWN-INSTRUCTION
 d560: jmp d564 ; relative offset = 2
 d562: UNKNOWN-INSTRUCTION
 d564: add  rax 0x01
 d568: mov  [16 + rsp] rax
 d56d: UNKNOWN-INSTRUCTION
 d56e: insb 
 d56f: and  unknown 0x10
 d571: js d6c2 ; relative offset = 331
 d577: jmp d582 ; relative offset = 9
 d579: nop  [rax + 0x00000000]
 d580: UNKNOWN-INSTRUCTION
 d583: leave 
 d584: jmp d499 ; relative offset = -240
 d589: nop  [rax + 0x00000000]
 d590: mov  rax rcx
 d593: movsxd  rdi edi
 d596: and  eax 0x01
 d599: add  rax rdi
 d59c: UNKNOWN-INSTRUCTION
 d59e: ror  [rdi] 0xb6
 d5a1: rol  [200 + rcx + rax * 1] 0x83
 d5a6: clc 
 d5a7: add  eax 0xf8c58f0f
 d5ac: UNKNOWN-INSTRUCTION
 d5ad: jmp  rcx
 d5af: UNKNOWN-INSTRUCTION
 d5b0: clc 
 d5b1: UNKNOWN-INSTRUCTION
 d5b2: dec  [rdi]
 d5b4: UNKNOWN-INSTRUCTION
 d5b8: mov  edi 0x00000002
 d5bd: mov  eax 0x00000003
 d5c2: UNKNOWN-INSTRUCTION
 d5c3: clc 
 d5c5: jmp ce30 ; relative offset = -1946
 d5ca: UNKNOWN-INSTRUCTION
 d5cb: nop  [0 + rax + rax * 1]
 d5d0: UNKNOWN-INSTRUCTION
 d5d1: jnge d5f7 ; relative offset = 36
 d5d3: UNKNOWN-INSTRUCTION
 d5d5: loope d5b0 ; relative offset = -39
 d5d7: leave 
 d5d8: movzx  eax [78 + rsp]
 d5dd: UNKNOWN-INSTRUCTION
 d5df: or  unknown 0x66
 d5e1: mov  [76 + rsp] eax
 d5e5: UNKNOWN-INSTRUCTION
 d5e6: insb 
 d5e7: and  unknown 0x4c
 d5e9: UNKNOWN-INSTRUCTION
 d5ea: jnge d610 ; relative offset = 36
 d5ec: UNKNOWN-INSTRUCTION
 d5ee: insb 
 d5ef: and  unknown 0x4e
 d5f1: mov  rax [32 + rsp]
 d5f6: UNKNOWN-INSTRUCTION
 d5f8: mov  edx 0x7ae93ff8
 d5fd: UNKNOWN-INSTRUCTION
 d5ff: inc  esi
 d601: add  [rcx + 72] r13d
 d605: lea  edx 
 d608: jmp d432 ; relative offset = -475
 d60d: nop  [rax]
 d610: UNKNOWN-INSTRUCTION
 d611: add  eax 0x0000eeda
 d616: cmp  [16 + rsp] 0x01
 d61b: UNKNOWN-INSTRUCTION
 d61c: leave 
 d61d: jnz d4f8 ; relative offset = -299
 d623: jmp d499 ; relative offset = -399
 d628: nop  [0x00000000 + rax + rax * 1]
 d630: UNKNOWN-INSTRUCTION
 d631: jnge d657 ; relative offset = 36
 d633: UNKNOWN-INSTRUCTION
 d635: loope d610 ; relative offset = -39
 d637: leave 
 d638: movzx  eax [78 + rsp]
 d63d: UNKNOWN-INSTRUCTION
 d63f: or  unknown 0x66
 d641: mov  [76 + rsp] eax
 d645: UNKNOWN-INSTRUCTION
 d646: insb 
 d647: and  unknown 0x4c
 d649: UNKNOWN-INSTRUCTION
 d64a: jnge d670 ; relative offset = 36
 d64c: UNKNOWN-INSTRUCTION
 d64e: insb 
 d64f: and  unknown 0x4e
 d651: mov  rax [32 + rsp]
 d656: UNKNOWN-INSTRUCTION
 d658: mov  edx 0xf3e93ff8
 d65d: UNKNOWN-INSTRUCTION
 d661: jnge d687 ; relative offset = 36
 d663: UNKNOWN-INSTRUCTION
 d665: loop d640 ; relative offset = -39
 d667: ret  0xb70f
 d66a: and  unknown 0x4e
 d66d: UNKNOWN-INSTRUCTION
 d66f: or  unknown 0x66
 d671: mov  [76 + rsp] eax
 d675: UNKNOWN-INSTRUCTION
 d676: insb 
 d677: and  unknown 0x4c
 d679: UNKNOWN-INSTRUCTION
 d67a: jnge d6a0 ; relative offset = 36
 d67c: UNKNOWN-INSTRUCTION
 d67e: insb 
 d67f: and  unknown 0x4e
 d681: UNKNOWN-INSTRUCTION
 d682: leave 
 d683: mov  rax [32 + rsp]
 d688: UNKNOWN-INSTRUCTION
 d68a: mov  edx 0xa8e93ff8
 d68f: UNKNOWN-INSTRUCTION
 d691: inc  [rbx + 0x840f08fb]
 d697: UNKNOWN-INSTRUCTION
 d698: idiv  edi
 d69a: inc  [rbx + 0x44f601c3]
 d6a0: and  unknown 0x48
 d6a2: UNKNOWN-INSTRUCTION
 d6a3: jz d809 ; relative offset = 352
 d6a9: mov  [r8 + 255] 0x31
 d6ae: lea  rbp 
 d6b2: jmp d1f1 ; relative offset = -1222
 d6b7: UNKNOWN-INSTRUCTION
 d6b8: add  eax 0x0000ee2b
 d6bd: jmp d19a ; relative offset = -1320
 d6c2: UNKNOWN-INSTRUCTION
 d6c3: add  eax 0x0000ee20
 d6c8: UNKNOWN-INSTRUCTION
 d6c9: leave 
 d6ca: jmp d499 ; relative offset = -566
 d6cf: nop 
 d6d0: mov  [rsi] 0x6b
 d6d3: UNKNOWN-INSTRUCTION
 d6d4: ror  [rdi] 0x85
 d6d7: push  edi
 d6d8: UNKNOWN-INSTRUCTION
 d6da: dec  [rax + 137]
 d6dd: push  esp
 d6de: and  unknown 0x08
 d6e0: jmp d21f ; relative offset = -1222
 d6e5: nop  [rax]
 d6e8: cmp  r10 0x09
 d6ec: UNKNOWN-INSTRUCTION
 d6ef: idiv  edi
 d6f1: inc  [rbx + 0x0110247c]
 d6f7: jz d770 ; relative offset = 119
 d6f9: mov  r12d [16 + rsp]
 d6fe: UNKNOWN-INSTRUCTION
 d700: in  unknown 0x75
 d702: jns d689 ; relative offset = -123
 d704: push  [RBP + 141 + rsi * 2]
 d708: push  eax
 d709: add  [rbx + 0x840f09f8] eax
 d70f: loope d711 ; relative offset = 0
 d711: UNKNOWN-INSTRUCTION
 d713: lea  eax 
 d716: mov  rsi [rsp]
 d71a: lea  r8 
 d721: mov  [rsi + 0x00000286] al
 d727: mov  eax ebp
 d729: sub  r8 rbp
 d72c: cmp  ebp 0x08
 d72f: jnb d7a1 ; relative offset = 112
 d731: test  bpl 0x04
 d735: jnz d8a9 ; relative offset = 366
 d73b: UNKNOWN-INSTRUCTION
 d73d: jz d74a ; relative offset = 11
 d73f: movzx  rdx [r15]
 d743: mov  [r8] dl
 d746: test  unknown 0x02
 d748: jnz d75f ; relative offset = 21
 d74a: xor  edi edi
 d74c: xor  r9d r9d
 d74f: cmp  [16 + rsp] 0x01
 d754: jnz ce62 ; relative offset = -2296
 d75a: jmp ce90 ; relative offset = -2255
 d75f: movzx  edx [254 + r15 + rax * 1]
 d765: mov  [254 + r8 + rax * 1] edx
 d76b: jmp d74a ; relative offset = -35
 d76d: nop  [rax]
 d770: mov  edx eax
 d772: and  edx 0x01
 d775: add  edx edi
 d777: cmp  edx 0x02
 d77a: jnle d707 ; relative offset = -117
 d77c: UNKNOWN-INSTRUCTION
 d77d: ror  [rdi] 0x85
 d780: UNKNOWN-INSTRUCTION
 d781: add  [rax] eax
 d783: UNKNOWN-INSTRUCTION
 d784: mov  r8 [8 + rsp]
 d789: test  [72 + rsp] 0x08
 d78e: jnz d74c ; relative offset = -68
 d790: mov  eax 0x00000030
 d795: jmp d716 ; relative offset = -132
 d79a: xor  ebx ebx
 d79c: jmp d20c ; relative offset = -1429
 d7a1: mov  rax [r15]
 d7a4: lea  rdi 
 d7a8: mov  r9 r15
 d7ab: and  rdi 0xf8
 d7af: mov  [r8] rax
 d7b2: mov  eax ebp
 d7b4: mov  rdx [248 + r15 + rax * 1]
 d7b9: mov  [248 + r8 + rax * 1] rdx
 d7be: mov  rax r8
 d7c1: sub  rax rdi
 d7c4: sub  r9 rax
 d7c7: add  eax ebp
 d7c9: and  eax 0xf8
 d7cc: cmp  eax 0x08
 d7cf: jnae d74a ; relative offset = -139
 d7d5: and  eax 0xf8
 d7d8: mov  r10d eax
 d7db: xor  eax eax
 d7dd: mov  edx eax
 d7df: add  eax 0x08
 d7e2: mov  rsi [r9 + rdx * 1]
 d7e6: mov  [rdi + rdx * 1] rsi
 d7ea: UNKNOWN-INSTRUCTION
 d7ed: jnae d7dd ; relative offset = -18
 d7ef: jmp d74a ; relative offset = -170
 d7f4: lea  rcx 
 d7f8: cmp  r10 0x09
 d7fc: jz d89f ; relative offset = 157
 d802: xor  edi edi
 d804: jmp d784 ; relative offset = -133
 d809: mov  rax rbp
 d80c: mov  [r8 + 255] 0x30
 d811: not  rdx
 d814: add  r8 rax
 d817: mov  eax ebp
 d819: cmp  ebp 0x08
 d81c: jnb d850 ; relative offset = 50
 d81e: and  ebp 0x04
 d821: jnz d8c3 ; relative offset = 156
 d827: UNKNOWN-INSTRUCTION
 d828: ror  [rdi] 0x84
 d82b: jp d82b ; relative offset = -2
 d82d: UNKNOWN-INSTRUCTION
 d82e: inc  [rcx + 15]
 d831: mov  sil 0x17
 d833: mov  [r8] dl
 d836: test  unknown 0x02
 d838: jz d6a9 ; relative offset = -405
 d83e: movzx  edx [254 + r15 + rax * 1]
 d844: mov  [254 + r8 + rax * 1] edx
 d84a: jmp d6a9 ; relative offset = -422
 d84f: nop 
 d850: mov  rax [r15]
 d853: lea  rcx 
 d857: mov  rsi r15
 d85a: and  rcx 0xf8
 d85e: mov  [r8] rax
 d861: mov  eax ebp
 d863: mov  rdx [248 + r15 + rax * 1]
 d868: mov  [248 + r8 + rax * 1] rdx
 d86d: mov  rax r8
 d870: sub  rax rcx
 d873: sub  rsi rax
 d876: add  eax ebp
 d878: and  eax 0xf8
 d87b: cmp  eax 0x08
 d87e: jnae d6a9 ; relative offset = -475
 d884: and  eax 0xf8
 d887: xor  edx edx
 d889: mov  edi edx
 d88b: add  edx 0x08
 d88e: mov  r9 [rsi + rdi * 1]
 d892: mov  [rcx + rdi * 1] r9
 d896: UNKNOWN-INSTRUCTION
 d897: ret  0xef72
 d89a: jmp d6a9 ; relative offset = -502
 d89f: mov  r8 [8 + rsp]
 d8a4: jmp d74a ; relative offset = -351
 d8a9: mov  edx [r15]
 d8ac: mov  [r8] edx
 d8af: mov  edx [252 + r15 + rax * 1]
 d8b4: mov  [252 + r8 + rax * 1] edx
 d8b9: jmp d74a ; relative offset = -372
 d8be: call 4890 ; relative offset = -36915
 d8c3: mov  edx [r15]
 d8c6: mov  [r8] edx
 d8c9: mov  edx [252 + r15 + rax * 1]
 d8ce: mov  [252 + r8 + rax * 1] edx
 d8d3: jmp d6a9 ; relative offset = -559
 d8d8: mov  rdx [8 + rsp]
 d8dd: UNKNOWN-INSTRUCTION
 d8de: ror  [rdi] 0x85
 d8e1: UNKNOWN-INSTRUCTION
 d8e4: jmp  rcx
 d8e6: xor  eax 0x83fffff9
 d8eb: UNKNOWN-INSTRUCTION
 d8ed: jmp d716 ; relative offset = -476
 d8f2: UNKNOWN-INSTRUCTION
 d8f5: nop  [0x00000000 + rax + rax * 1]
 d8fd: nop  [rax]
 d900: push  esp
 d902: push  ebp
 d903: mov  rbp rdi
 d906: push  ebx
 d907: sub  esp 0x000002a0
 d90e: movzx  r12 [RIP + 0x000149fa]
 d916: UNKNOWN-INSTRUCTION
 d917: mov  rax 0x00000028
 d91f: mov  [0x00000298 + rsp] rax
 d927: xor  eax eax
 d929: UNKNOWN-INSTRUCTION
 d92b: loope d976 ; relative offset = 73
 d92d: add  [rax] eax
 d92f: UNKNOWN-INSTRUCTION
 d930: jz d9e0 ; relative offset = 170
 d936: cmp  [RIP + 0x000149cf] 0x04
 d93d: jz da70 ; relative offset = 301
 d943: movsxd  rbx [RIP + 0x0001495e]
 d94a: add  rbx 0x01
 d94e: UNKNOWN-INSTRUCTION
 d950: in  unknown 0x0f
 d952: UNKNOWN-INSTRUCTION
 d953: or  [rcx] eax
 d955: UNKNOWN-INSTRUCTION
 d957: movsxd  rax [RIP + 0x00014946]
 d95e: add  rax 0x01
 d962: add  rbx rax
 d965: UNKNOWN-INSTRUCTION
 d968: add  [r8] rax
 d96b: UNKNOWN-INSTRUCTION
 d96c: jnz da40 ; relative offset = 206
 d972: mov  edx [rbp + 0x000000c4]
 d978: mov  rsi [RIP + 0x00014c41]
 d97f: mov  rdi [rbp + 0]
 d983: call b580 ; relative offset = -9224
 d988: lea  r8 
 d98c: mov  eax [RIP + 0x00014972]
 d992: UNKNOWN-INSTRUCTION
 d994: jz d9b1 ; relative offset = 27
 d996: mov  edx [rbp + 0x000000a8]
 d99c: mov  esi [rbp + 48]
 d99f: movzx  edi [rbp + 0x000000b8]
 d9a6: call c190 ; relative offset = -6171
 d9ab: cmp  unknown 0x01
 d9ad: sbb  r8 0xff
 d9b1: mov  rax [0x00000298 + rsp]
 d9b9: UNKNOWN-INSTRUCTION
 d9ba: sub  rax 0x00000028
 d9c2: jnz daf5 ; relative offset = 301
 d9c8: add  esp 0x000002a0
 d9cf: mov  rax r8
 d9d2: pop  ebx
 d9d3: pop  ebp
 d9d4: pop  esp
 d9d6: ret 
 d9d7: UNKNOWN-INSTRUCTION
 d9d8: nop  [0x00000000 + rax + rax * 1]
 d9e0: xor  ebx ebx
 d9e2: UNKNOWN-INSTRUCTION
 d9e4: in  unknown 0x0f
 d9e6: UNKNOWN-INSTRUCTION
 d9e7: jp d9e8 ; relative offset = -1
 d9e9: UNKNOWN-INSTRUCTION
 d9ea: inc  [rbx + 0x01491a3d]
 d9f0: UNKNOWN-INSTRUCTION
 d9f1: add  unknown 0x0f
 d9f3: UNKNOWN-INSTRUCTION
 d9f4: pop  edi
 d9f5: UNKNOWN-INSTRUCTION
 d9f7: inc  [rax + 0x0000b8bd]
 d9fd: UNKNOWN-INSTRUCTION
 d9ff: mov  eax 0x00000002
 da04: jz d962 ; relative offset = -168
 da0a: mov  rdi [rbp + 88]
 da0e: mov  r8 [RIP + 0x0001489b]
 da15: mov  rsi rsp
 da18: mov  ecx 0x00000200
 da1d: mov  edx [RIP + 0x00014895]
 da23: call cd20 ; relative offset = -3336
 da28: mov  rdi rax
 da2b: call 4880 ; relative offset = -37296
 da30: add  rax 0x01
 da34: jmp d962 ; relative offset = -215
 da39: nop  [rax + 0x00000000]
 da40: cmp  [RIP + 0x000148c5] 0x04
 da47: jz dae0 ; relative offset = 147
 da4d: movsxd  rax [RIP + 0x0001484c]
 da54: add  rax 0x01
 da58: add  rbx rax
 da5b: jmp d972 ; relative offset = -238
 da60: UNKNOWN-INSTRUCTION
 da63: add  [rax] rax
 da66: UNKNOWN-INSTRUCTION
 da67: jnz da4d ; relative offset = -28
 da69: jmp d972 ; relative offset = -252
 da6e: UNKNOWN-INSTRUCTION
 da6f: nop 
 da70: mov  [20 + rsp] 0x00
 da75: mov  rcx [rdi + 32]
 da79: mov  rax 0xcccccccccccccccd
 da83: lea  rdi 
 da88: nop  [0x00000000 + rax + rax * 1]
 da90: mov  rax rcx
 da93: sub  rdi 0x01
 da97: mul  rsp
 da9a: mov  rax rcx
 da9d: shr  rdx 0x03
 daa1: lea  rsi 
 daa5: add  rsi rsi
 daa8: sub  rax rsi
 daab: add  eax 0x30
 daae: mov  [rdi] al
 dab0: mov  rax rcx
 dab3: mov  rcx rdx
 dab6: cmp  rax 0x09
 daba: jnbe  0xd4
 dabc: call 4880 ; relative offset = -37441
 dac1: lea  rbx 
 dac5: UNKNOWN-INSTRUCTION
 dac7: in  unknown 0x0f
 dac9: UNKNOWN-INSTRUCTION
 daca: sub  dil dil
 dacc: UNKNOWN-INSTRUCTION
 dacd: inc  [rax + 0x01482b3d]
 dad3: UNKNOWN-INSTRUCTION
 dad5: jz d972 ; relative offset = -361
 dadb: nop  [0 + rax + rax * 1]
 dae0: mov  rdi [rbp + 0x000000b0]
 dae7: call 4880 ; relative offset = -37484
 daec: add  rax 0x01
 daf0: jmp da58 ; relative offset = -157
 daf5: call 4890 ; relative offset = -37482
 dafa: UNKNOWN-INSTRUCTION
 dafb: nop  [0 + rax + rax * 1]
 db00: push  edi
 db02: push  esi
 db04: push  ebp
 db06: push  esp
 db08: push  ebp
 db09: push  ebx
 db0a: sub  rsp 0x18
 db0e: cmp  [RIP + 0x00014ab2] 0x00
 db16: jz dc70 ; relative offset = 340
 db1c: movsx  rax dil
 db20: mov  r13 [RIP + 0x00014481]
 db27: mov  r14d edi
 db2a: xor  ebx ebx
 db2c: mov  [4 + rsp] eax
 db30: xor  r12d r12d
 db33: jmp db60 ; relative offset = 43
 db35: nop  [rax]
 db38: mov  rbp r12
 db3b: UNKNOWN-INSTRUCTION
 db3e: jnz dc00 ; relative offset = 188
 db44: mov  rsi rbp
 db47: mov  rdi r15
 db4a: add  rbx 0x01
 db4e: call 16ea0 ; relative offset = 37709
 db53: UNKNOWN-INSTRUCTION
 db55: sbb  eax 0x00014a6e
 db5a: jna dc80 ; relative offset = 288
 db60: mov  rax [RIP + 0x000148e9]
 db67: cmp  [RIP + 0x00014911] 0x00
 db6f: mov  r15 [rax + rbx * 8]
 db73: jz db38 ; relative offset = -61
 db75: mov  rdi r15
 db78: call d900 ; relative offset = -637
 db7d: UNKNOWN-INSTRUCTION
 db80: jz dcb0 ; relative offset = 298
 db86: mov  rdx [RIP + 0x000148f3]
 db8d: lea  rbp 
 db92: lea  rcx 
 db96: UNKNOWN-INSTRUCTION
 db99: jz dbaf ; relative offset = 20
 db9b: UNKNOWN-INSTRUCTION
 db9d: ret  0x7076
 dba0: mov  rdx 0xfffffffd
 dba7: sub  rdx rax
 dbaa: UNKNOWN-INSTRUCTION
 dbac: loop dc20 ; relative offset = 114
 dbae: UNKNOWN-INSTRUCTION
 dbaf: mov  r12 rcx
 dbb2: UNKNOWN-INSTRUCTION
 dbb3: nop  [0 + rax + rax * 1]
 dbb8: mov  rdi [r13 + 0]
 dbbc: mov  ecx 0x00000020
 dbc2: mov  edx 0x00000020
 dbc7: mov  rax [rdi + 40]
 dbcb: UNKNOWN-INSTRUCTION
 dbcf: jnb dc2e ; relative offset = 93
 dbd1: lea  rcx 
 dbd5: mov  [rdi + 40] rcx
 dbd9: mov  [rax] r14b
 dbdc: mov  rdi [r13 + 0]
 dbe0: mov  rax [rdi + 40]
 dbe4: UNKNOWN-INSTRUCTION
 dbe8: jnb dc60 ; relative offset = 118
 dbea: lea  rcx 
 dbee: mov  [rdi + 40] rcx
 dbf2: mov  [rax] dl
 dbf4: jmp db44 ; relative offset = -181
 dbf9: nop  [rax + 0x00000000]
 dc00: lea  rbp 
 dc05: mov  r12 rbp
 dc08: jmp dbb8 ; relative offset = -82
 dc0a: UNKNOWN-INSTRUCTION
 dc0b: nop  [0 + rax + rax * 1]
 dc10: mov  rdi [r13 + 0]
 dc14: mov  r12 rax
 dc17: mov  ecx 0x0000000a
 dc1d: xor  ebp ebp
 dc1f: mov  edx 0x0000000a
 dc24: mov  rax [rdi + 40]
 dc28: UNKNOWN-INSTRUCTION
 dc2c: jnae dbd1 ; relative offset = -93
 dc2e: mov  esi [4 + rsp]
 dc32: mov  [12 + rsp] r9d
 dc37: mov  [11 + rsp] dl
 dc3b: call 4900 ; relative offset = -37696
 dc40: mov  rdi [r13 + 0]
 dc44: movzx  edx [11 + rsp]
 dc49: mov  r9d [12 + rsp]
 dc4e: mov  rax [rdi + 40]
 dc52: UNKNOWN-INSTRUCTION
 dc56: jnae dbea ; relative offset = -110
 dc58: nop  [0x00000000 + rax + rax * 1]
 dc60: mov  esi r9d
 dc63: call 4900 ; relative offset = -37736
 dc68: jmp db44 ; relative offset = -297
 dc6d: nop  [rax]
 dc70: mov  r13 [RIP + 0x00014331]
 dc77: UNKNOWN-INSTRUCTION
 dc78: nop  [0x00000000 + rax + rax * 1]
 dc80: mov  rdi [r13 + 0]
 dc84: mov  rax [rdi + 40]
 dc88: UNKNOWN-INSTRUCTION
 dc8c: jnb dcc0 ; relative offset = 50
 dc8e: lea  rdx 
 dc92: mov  [rdi + 40] rdx
 dc96: mov  [rax] 0x0a
 dc99: add  rsp 0x18
 dc9d: pop  ebx
 dc9e: pop  ebp
 dc9f: pop  esp
 dca1: pop  ebp
 dca3: pop  esi
 dca5: pop  edi
 dca7: ret 
 dca8: nop  [0x00000000 + rax + rax * 1]
 dcb0: mov  rbp r12
 dcb3: add  r12 rax
 dcb6: jmp db44 ; relative offset = -375
 dcbb: nop  [0 + rax + rax * 1]
 dcc0: add  rsp 0x18
 dcc4: mov  esi 0x0000000a
 dcc9: pop  ebx
 dcca: pop  ebp
 dccb: pop  esp
 dccd: pop  ebp
 dccf: pop  esi
 dcd1: pop  edi
 dcd3: jmp 4900 ; relative offset = -37848
 dcd8: nop  [0x00000000 + rax + rax * 1]
 dce0: UNKNOWN-INSTRUCTION
 dce4: push  ebp
 dce5: mov  ebp esi
 dce7: push  ebx
 dce8: mov  rbx rdi
 dceb: mov  edi 0x0000000e
 dcf0: sub  rsp 0x08
 dcf4: call 4ac0 ; relative offset = -37433
 dcf9: UNKNOWN-INSTRUCTION
 dcfc: jz dd62 ; relative offset = 100
 dcfe: mov  rdi rax
 dd01: movzx  eax [rax]
 dd04: UNKNOWN-INSTRUCTION
 dd06: jz dd62 ; relative offset = 90
 dd08: and  eax 0xdf
 dd0b: cmp  unknown 0x55
 dd0d: jnz dd53 ; relative offset = 68
 dd0f: movzx  eax [rdi + 1]
 dd13: and  eax 0xdf
 dd16: cmp  unknown 0x54
 dd18: jnz dd62 ; relative offset = 72
 dd1a: movzx  eax [rdi + 2]
 dd1e: and  eax 0xdf
 dd21: cmp  unknown 0x46
 dd23: jnz dd62 ; relative offset = 61
 dd25: UNKNOWN-INSTRUCTION
 dd26: jnle dd2b ; relative offset = 3
 dd28: sub  eax 0x7f803775
 dd2d: add  unknown 0x38
 dd2f: jnz dd62 ; relative offset = 49
 dd31: UNKNOWN-INSTRUCTION
 dd32: jnle dd39 ; relative offset = 5
 dd34: UNKNOWN-INSTRUCTION
 dd35: jnz dd62 ; relative offset = 43
 dd37: UNKNOWN-INSTRUCTION
 dd3a: lea  rax 
 dd41: lea  rdx 
 dd48: UNKNOWN-INSTRUCTION
 dd4a: ret  0x8348
 dd4e: UNKNOWN-INSTRUCTION
 dd50: pop  ebx
 dd51: pop  ebp
 dd52: ret 
 dd53: cmp  unknown 0x47
 dd55: jnz dd62 ; relative offset = 11
 dd57: movzx  eax [rdi + 1]
 dd5b: and  eax 0xdf
 dd5e: cmp  unknown 0x42
 dd60: jz dd80 ; relative offset = 30
 dd62: cmp  ebp 0x09
 dd65: lea  rax 
 dd6c: lea  rdx 
 dd73: UNKNOWN-INSTRUCTION
 dd75: ret  0x8348
 dd79: UNKNOWN-INSTRUCTION
 dd7b: pop  ebx
 dd7c: pop  ebp
 dd7d: ret 
 dd7e: UNKNOWN-INSTRUCTION
 dd7f: nop 
 dd80: UNKNOWN-INSTRUCTION
 dd81: jnle dd85 ; relative offset = 2
 dd83: xor  [rbp + 220] esi
 dd86: UNKNOWN-INSTRUCTION
 dd87: jnle dd8c ; relative offset = 3
 dd89: UNKNOWN-INSTRUCTION
 dd8a: jnz dd62 ; relative offset = -42
 dd8c: UNKNOWN-INSTRUCTION
 dd8d: jnle dd93 ; relative offset = 4
 dd8f: UNKNOWN-INSTRUCTION
 dd90: jnz dd62 ; relative offset = -48
 dd92: UNKNOWN-INSTRUCTION
 dd93: jnle dd9a ; relative offset = 5
 dd95: xor  esi [rbp + 202]
 dd98: UNKNOWN-INSTRUCTION
 dd99: jnle dda1 ; relative offset = 6
 dd9b: UNKNOWN-INSTRUCTION
 dd9c: jnz dd62 ; relative offset = -60
 dd9e: xor  ecx ecx
 dda0: xor  edx edx
 dda2: lea  rsi 
 dda9: call 7040 ; relative offset = -28014
 ddae: UNKNOWN-INSTRUCTION
 ddb0: jz dd62 ; relative offset = -80
 ddb2: UNKNOWN-INSTRUCTION
 ddb5: lea  rax 
 ddbc: lea  rdx 
 ddc3: UNKNOWN-INSTRUCTION
 ddc5: ret  0x8348
 ddc9: UNKNOWN-INSTRUCTION
 ddcb: pop  ebx
 ddcc: pop  ebp
 ddcd: ret 
 ddce: UNKNOWN-INSTRUCTION
 ddcf: nop 
 ddd0: UNKNOWN-INSTRUCTION
 ddd4: push  eax
 ddd5: pop  eax
 ddd6: mov  edx 0x00000005
 dddb: lea  rsi 
 dde2: xor  edi edi
 dde4: sub  rsp 0x08
 dde8: call 4860 ; relative offset = -38285
 dded: mov  edi [RIP + 0x0001428d]
 ddf3: lea  rdx 
 ddfa: xor  esi esi
 ddfc: mov  rcx rax
 ddff: xor  eax eax
 de01: call 4ba0 ; relative offset = -37478
 de06: call 4700 ; relative offset = -38667
 de0b: nop  [0 + rax + rax * 1]
 de10: push  ebx
 de11: mov  rbx rdi
 de14: call 4690 ; relative offset = -38793
 de19: UNKNOWN-INSTRUCTION
 de1c: jnz de23 ; relative offset = 5
 de1e: UNKNOWN-INSTRUCTION
 de21: jnz de25 ; relative offset = 2
 de23: pop  ebx
 de24: ret 
 de25: call ddd0 ; relative offset = -90
 de2a: UNKNOWN-INSTRUCTION
 de2b: nop  [0 + rax + rax * 1]
 de30: push  ebp
 de31: push  ebx
 de32: sub  rsp 0x08
 de36: call 4710 ; relative offset = -38699
 de3b: mov  edi 0x00000038
 de40: mov  ebp [rax]
 de42: mov  rbx rax
 de45: call de10 ; relative offset = -58
 de4a: UNKNOWN-INSTRUCTION
 de4c: outsw 
 de4d: add  eax 0x0001446e
 de52: UNKNOWN-INSTRUCTION
 de54: outsw 
 de55: or  eax 0x00014476
 de5a: UNKNOWN-INSTRUCTION
 de5c: outsw 
 de5d: adc  eax 0x0001447e
 de62: mov  rdx [RIP + 0x00014487]
 de69: mov  [rbx] ebp
 de6b: UNKNOWN-INSTRUCTION
 de6c: adc  [rax] eax
 de6e: mov  [rax + 48] rdx
 de72: UNKNOWN-INSTRUCTION
 de73: adc  [rax + 16] ecx
 de76: UNKNOWN-INSTRUCTION
 de77: adc  [rax + 32] edx
 de7a: add  rsp 0x08
 de7e: pop  ebx
 de7f: pop  ebp
 de80: ret 
 de81: UNKNOWN-INSTRUCTION
 de84: nop  [0x00000000 + rax + rax * 1]
 de8c: nop  [rax + 0]
 de90: push  ebx
 de91: mov  rbx rdi
 de94: mov  edi 0x00000010
 de99: call 4690 ; relative offset = -38926
 de9e: UNKNOWN-INSTRUCTION
 dea1: jz deba ; relative offset = 23
 dea3: mov  rdx [RIP + 0x000145e6]
 deaa: mov  [rax] rbx
 dead: mov  [RIP + 0x000145dc] rax
 deb4: mov  [rax + 8] rdx
 deb8: pop  ebx
 deb9: ret 
 deba: call ddd0 ; relative offset = -239
 debf: nop 
 dec0: push  esp
 dec2: push  ebp
 dec3: push  ebx
 dec4: mov  rbx [RIP + 0x000146fd]
 decb: mov  rax rbx
 dece: shr  rax 
 ded1: add  rax rbx
 ded4: UNKNOWN-INSTRUCTION
 ded6: add  eax 0x0001454d
 dedb: jna df3c ; relative offset = 95
 dedd: mov  rdi [RIP + 0x0001456c]
 dee4: call 4680 ; relative offset = -39017
 dee9: mov  eax 0x00000018
 deee: mul  rsp
 def1: UNKNOWN-INSTRUCTION
 def2: nop 
 def3: ret  0x8548
 def6: sar  [rax + 0x00000001] 0x0f
 defd: mov  sil 0xd2
 deff: UNKNOWN-INSTRUCTION
 df01: ror  [rax + 133] 
 df05: ror  [rdi] cl
 df07: UNKNOWN-INSTRUCTION
 df08: add  [rcx] 0x8d480000
 df0e: sub  unknown 0x5b
 df10: sal  rbp 0x03
 df14: mov  rdi rbp
 df17: call 4690 ; relative offset = -39052
 df1c: UNKNOWN-INSTRUCTION
 df1f: jnz df2a ; relative offset = 9
 df21: UNKNOWN-INSTRUCTION
 df23: in  eax dx
 df24: jnz e08d ; relative offset = 355
 df2a: mov  [RIP + 0x0001451f] rax
 df31: lea  rax 
 df35: mov  [RIP + 0x000144ec] rax
 df3c: UNKNOWN-INSTRUCTION
 df3f: jz df6b ; relative offset = 42
 df41: mov  rax [RIP + 0x00014508]
 df48: mov  rdx [RIP + 0x00014681]
 df4f: lea  rcx 
 df53: nop  [0 + rax + rax * 1]
 df58: mov  [rax] rdx
 df5b: add  rax 0x08
 df5f: add  edx 0x000000c8
 df66: UNKNOWN-INSTRUCTION
 df69: jnz df58 ; relative offset = -19
 df6b: cmp  [RIP + 0x000154b2] 0xff
 df72: jz dfda ; relative offset = 102
 df74: lea  rdi 
 df7b: call 49c0 ; relative offset = -38336
 df80: UNKNOWN-INSTRUCTION
 df84: mov  edi [RIP + 0x0001549a]
 df8a: UNKNOWN-INSTRUCTION
 df8c: jnz dfe0 ; relative offset = 82
 df8e: mov  rbp [RIP + 0x000144bb]
 df95: mov  rsi [RIP + 0x0001462c]
 df9c: xor  edx edx
 df9e: cmp  edi 0x04
 dfa1: jz e033 ; relative offset = 140
 dfa7: add  edx edi
 dfa9: cdqe 
 dfab: movzx  ecx [RIP + 0x00014798]
 dfb2: mov  edx edx
 dfb4: lea  rdx 
 dfb8: movzx  eax [RIP + 0x000144de]
 dfbf: lea  rax 
 dfc3: lea  rdx 
 dfc7: lea  rax 
 dfce: mov  rcx [rax + rdx * 8]
 dfd2: cmp  rsi 0x02
 dfd6: jnbe  0x68
 dfd8: jz e058 ; relative offset = 126
 dfda: pop  ebx
 dfdb: pop  ebp
 dfdc: pop  esp
 dfde: ret 
 dfdf: nop 
 dfe0: cmp  edi 0x03
 dfe3: jz e092 ; relative offset = 169
 dfe9: mov  rsi [RIP + 0x000145d8]
 dff0: mov  rbp [RIP + 0x00014459]
 dff7: UNKNOWN-INSTRUCTION
 dffa: jz e07d ; relative offset = 125
 e000: mov  rdx [RIP + 0x000145c9]
 e007: mov  rax rbp
 e00a: lea  rcx 
 e00f: nop 
 e010: mov  [rax] rdx
 e013: add  rax 0x08
 e017: add  edx 0x000000c8
 e01e: UNKNOWN-INSTRUCTION
 e021: jnz e010 ; relative offset = -19
 e023: mov  eax 0x00000001
 e028: xor  edx edx
 e02a: cmp  edi 0x04
 e02d: jnz dfa7 ; relative offset = -140
 e033: mov  edx [RIP + 0x000153e7]
 e039: jmp dfa7 ; relative offset = -151
 e03e: UNKNOWN-INSTRUCTION
 e03f: nop 
 e040: lea  rdx 
 e045: mov  rdi rbp
 e048: call b620 ; relative offset = -10797
 e04d: pop  ebx
 e04e: pop  ebp
 e04f: pop  esp
 e051: ret 
 e052: UNKNOWN-INSTRUCTION
 e053: nop  [0 + rax + rax * 1]
 e058: mov  rbx [rbp + 0]
 e05c: mov  r12 [rbp + 8]
 e060: mov  rdi rbx
 e063: mov  rsi r12
 e066: call  rdx
 e067: rol  [rbp + 0x6a8e0fc0] 
 e06d: UNKNOWN-INSTRUCTION
 e06f: dec  [101 + rcx + rcx * 4]
 e073: UNKNOWN-INSTRUCTION
 e074: mov  [rbp + 8] rbx
 e078: pop  ebx
 e079: pop  ebp
 e07a: pop  esp
 e07c: ret 
 e07d: cmp  edi 0x04
 e080: jnz dfda ; relative offset = -172
 e086: mov  eax 0x00000001
 e08b: jmp e033 ; relative offset = -90
 e08d: call ddd0 ; relative offset = -706
 e092: lea  rcx 
 e099: mov  edx 0x00000f9e
 e09e: lea  rsi 
 e0a5: lea  rdi 
 e0ac: call 4940 ; relative offset = -38769
 e0b1: UNKNOWN-INSTRUCTION
 e0b4: nop  [0x00000000 + rax + rax * 1]
 e0bc: nop  [rax + 0]
 e0c0: push  edi
 e0c2: push  esi
 e0c4: push  ebp
 e0c6: push  esp
 e0c8: mov  r12d esi
 e0cb: push  ebp
 e0cc: push  ebx
 e0cd: mov  rbx rdi
 e0d0: sub  rsp 0x08
 e0d4: call 4880 ; relative offset = -39001
 e0d9: add  rax 0x01
 e0dd: imul  rdi rax 0x03
 e0e1: jo e18a ; relative offset = 163
 e0e7: call 4690 ; relative offset = -39516
 e0ec: mov  r14 rax
 e0ef: UNKNOWN-INSTRUCTION
 e0f1: ror  [rdi] 0x84
 e0f4: UNKNOWN-INSTRUCTION
 e0f8: movzx  eax [rbx]
 e0fb: mov  rbp r14
 e0fe: UNKNOWN-INSTRUCTION
 e100: jz e166 ; relative offset = 100
 e102: lea  r13 
 e109: lea  r15 
 e110: jmp e126 ; relative offset = 20
 e112: UNKNOWN-INSTRUCTION
 e113: nop  [0 + rax + rax * 1]
 e118: mov  [rbp + 0] al
 e11b: add  rbp 0x01
 e11f: movzx  eax [rbx]
 e122: UNKNOWN-INSTRUCTION
 e124: jz e166 ; relative offset = 64
 e126: add  rbx 0x01
 e12a: cmp  unknown 0x2f
 e12c: jnz e133 ; relative offset = 5
 e12e: UNKNOWN-INSTRUCTION
 e130: in  unknown 0x75
 e132: movzx  r10 r8b
 e136: movzx  r8 al
 e13a: UNKNOWN-INSTRUCTION
 e13c: jnge e153 ; relative offset = 21
 e13e: UNKNOWN-INSTRUCTION
 e140: jnz e118 ; relative offset = -42
 e142: mov  rdi rbp
 e145: mov  rcx r15
 e148: mov  rdx 0xffffffff
 e14f: xor  eax eax
 e151: mov  esi 0x00000001
 e156: add  rbp 0x03
 e15a: call 4ce0 ; relative offset = -38015
 e15f: movzx  eax [rbx]
 e162: UNKNOWN-INSTRUCTION
 e164: jnz e126 ; relative offset = -64
 e166: mov  [rbp + 0] 0x00
 e16a: add  rsp 0x08
 e16e: mov  rax r14
 e171: pop  ebx
 e172: pop  ebp
 e173: pop  esp
 e175: pop  ebp
 e177: pop  esi
 e179: pop  edi
 e17b: ret 
 e17c: nop  [rax + 0]
 e180: mov  [rbp + 0] 0x2f
 e184: add  rbp 0x01
 e188: jmp e11f ; relative offset = -107
 e18a: call ddd0 ; relative offset = -959
 e18f: nop 
 e190: push  edi
 e192: push  esi
 e194: push  ebp
 e196: push  esp
 e198: push  ebp
 e199: mov  ebp edi
 e19b: push  ebx
 e19c: sub  rsp 0x18
 e1a0: mov  r13 [RIP + 0x00014421]
 e1a7: mov  r14 [RIP + 0x000142ba]
 e1ae: mov  rcx [RIP + 0x0001418b]
 e1b5: UNKNOWN-INSTRUCTION
 e1b8: mov  r12 r14
 e1bb: UNKNOWN-INSTRUCTION
 e1bd: in  eax 0x49
 e1c0: UNKNOWN-INSTRUCTION
 e1c2: jna e2e4 ; relative offset = 284
 e1c8: mov  rax r14
 e1cb: mov  rdi [RIP + 0x00014176]
 e1d2: shr  rax 
 e1d5: UNKNOWN-INSTRUCTION
 e1d8: jnb e43d ; relative offset = 607
 e1de: mov  eax 0x00000030
 e1e3: mul  rsp
 e1e6: UNKNOWN-INSTRUCTION
 e1e7: nop 
 e1e8: ret  0xb60f
 e1eb: ror  [rax + 133] cl
 e1ee: ror  [rdi] 0x88
 e1f1: UNKNOWN-INSTRUCTION
 e1f2: add  al [rax]
 e1f4: UNKNOWN-INSTRUCTION
 e1f7: ror  [rdi] cl
 e1f9: UNKNOWN-INSTRUCTION
 e1fa: mov   [rdx]
 e1fc: UNKNOWN-INSTRUCTION
 e1fe: lea  rax 
 e202: mov  [rsp] rcx
 e206: sal  rax 0x04
 e20a: mov  rbx rax
 e20d: jnz e218 ; relative offset = 9
 e20f: UNKNOWN-INSTRUCTION
 e211: dec  [rdi]
 e213: UNKNOWN-INSTRUCTION
 e215: add  al [rax]
 e217: UNKNOWN-INSTRUCTION
 e218: mov  rsi rbx
 e21b: call 4b10 ; relative offset = -38672
 e220: mov  rcx [rsp]
 e224: UNKNOWN-INSTRUCTION
 e226: ror  [rcx + 137] 0xc7
 e22a: jnz e235 ; relative offset = 9
 e22c: UNKNOWN-INSTRUCTION
 e22f: jnz e48c ; relative offset = 599
 e235: lea  r14 
 e239: lea  rbx 
 e23d: mov  rax r14
 e240: xor  esi esi
 e242: mov  [RIP + 0x000140ff] r15
 e249: mov  rdx rbx
 e24c: sub  rax rcx
 e24f: mov  [rsp] rcx
 e253: add  rdx r14
 e256: UNKNOWN-INSTRUCTION
 e25a: mul  rsp
 e25d: UNKNOWN-INSTRUCTION
 e25e: nop 
 e25f: ret  0xb60f
 e262: ror  [rax + 133] cl
 e265: UNKNOWN-INSTRUCTION
 e266: jnz e48c ; relative offset = 544
 e26c: UNKNOWN-INSTRUCTION
 e26e: ror  [rdi] cl
 e270: UNKNOWN-INSTRUCTION
 e272: add  al [rax]
 e274: UNKNOWN-INSTRUCTION
 e275: shr  rax 
 e278: imul  rdx rax 0x08
 e27c: jo e48c ; relative offset = 522
 e282: lea  rdx 
 e28a: mov  rdi rdx
 e28d: mov  [8 + rsp] rdx
 e292: call 4690 ; relative offset = -39943
 e297: mov  rcx [rsp]
 e29b: UNKNOWN-INSTRUCTION
 e29e: jnz e2ae ; relative offset = 14
 e2a0: mov  rdx [8 + rsp]
 e2a5: UNKNOWN-INSTRUCTION
 e2a7: ror  [rdi] cl
 e2a9: UNKNOWN-INSTRUCTION
 e2ab: add  [rax] eax
 e2ad: UNKNOWN-INSTRUCTION
 e2ae: lea  rdx 
 e2b6: lea  rsi 
 e2be: UNKNOWN-INSTRUCTION
 e2c1: jnb e2dd ; relative offset = 26
 e2c3: nop  [0 + rax + rax * 1]
 e2c8: lea  rcx 
 e2cc: mov  [248 + r15 + rcx * 1] rax
 e2d1: add  rax rdx
 e2d4: add  rdx 0x08
 e2d8: UNKNOWN-INSTRUCTION
 e2da: jnz e2c8 ; relative offset = -21
 e2dd: mov  [RIP + 0x0001405c] r14
 e2e4: UNKNOWN-INSTRUCTION
 e2e6: in  unknown 0x74
 e2e8: push  eax
 e2e9: mov  rdi [RIP + 0x00014058]
 e2f0: lea  r8 
 e2f5: xor  esi esi
 e2f7: mov  ecx 0x00000003
 e2fc: nop  [rax + 0]
 e300: mov  rax [248 + rdi + rcx * 8]
 e305: mov  [232 + rdi + rcx * 8] 0x01
 e30a: add  rsi 0x08
 e30e: mov  [240 + rdi + rcx * 8] rcx
 e313: lea  rdx 
 e317: UNKNOWN-INSTRUCTION
 e318: nop  [0x00000000 + rax + rax * 1]
 e320: mov  [rax] 0x00000003
 e327: add  rax 0x08
 e32b: UNKNOWN-INSTRUCTION
 e32d: ret  0xf075
 e330: add  rcx 0x03
 e334: UNKNOWN-INSTRUCTION
 e337: jnz e300 ; relative offset = -57
 e339: xor  ebx ebx
 e33b: UNKNOWN-INSTRUCTION
 e33d: in  eax dx
 e33e: jz e42b ; relative offset = 231
 e344: nop  [rax + 0]
 e348: mov  rax [RIP + 0x00014101]
 e34f: mov  rdi [rax + rbx * 8]
 e353: call d900 ; relative offset = -2648
 e358: mov  r10 [RIP + 0x00014269]
 e35f: mov  r9 rax
 e362: UNKNOWN-INSTRUCTION
 e364: in  unknown 0x0f
 e366: UNKNOWN-INSTRUCTION
 e36b: mov  r11 [RIP + 0x0001410e]
 e372: mov  rsi [RIP + 0x00013fcf]
 e379: xor  ecx ecx
 e37b: jmp e3d1 ; relative offset = 84
 e37d: nop  [rax]
 e380: lea  rax 
 e385: xor  edx edx
 e387: div  rcx
 e38a: xor  edx edx
 e38c: mov  r8 rax
 e38f: mov  rax rbx
 e392: div  r8
 e395: mov  r8 rax
 e398: mov  rdx [rsi + 16]
 e39c: xor  eax eax
 e39e: UNKNOWN-INSTRUCTION
 e3a0: clc 
 e3a1: UNKNOWN-INSTRUCTION
 e3a3: ror  [rdx + 141] 0x14
 e3a7: ret  0x8d49
 e3aa: add  unknown 0x41
 e3ac: mov  rdi [rdx]
 e3af: UNKNOWN-INSTRUCTION
 e3b2: jnb e3c8 ; relative offset = 20
 e3b4: mov  r8 rax
 e3b7: sub  r8 rdi
 e3ba: add  [rsi + 8] r8
 e3be: mov  [rdx] rax
 e3c1: UNKNOWN-INSTRUCTION
 e3c3: pop  esi
 e3c4: UNKNOWN-INSTRUCTION
 e3c8: add  rsi 0x18
 e3cc: UNKNOWN-INSTRUCTION
 e3cf: jz e3f0 ; relative offset = 31
 e3d1: mov  rdi rcx
 e3d4: add  rcx 0x01
 e3d8: UNKNOWN-INSTRUCTION
 e3db: jz e3c8 ; relative offset = -21
 e3dd: UNKNOWN-INSTRUCTION
 e3df: in  eax dx
 e3e0: jnz e380 ; relative offset = -98
 e3e2: mov  rax rbx
 e3e5: xor  edx edx
 e3e7: div  rcx
 e3ea: mov  r8 rdx
 e3ed: jmp e398 ; relative offset = -87
 e3ef: nop 
 e3f0: add  rbx 0x01
 e3f4: UNKNOWN-INSTRUCTION
 e3f6: ror  [rdi] cl
 e3f8: UNKNOWN-INSTRUCTION
 e3fc: dec  [rcx + 131]
 e3ff: cld 
 e400: add  [rsi + 40] esi
 e403: mov  rdx [RIP + 0x00013f3e]
 e40a: lea  rax 
 e40e: lea  rax 
 e413: jmp e426 ; relative offset = 17
 e415: nop  [rax]
 e418: sub  r12 0x01
 e41c: sub  rax 0x18
 e420: cmp  r12 0x01
 e424: jz e42b ; relative offset = 5
 e426: UNKNOWN-INSTRUCTION
 e429: jz e418 ; relative offset = -19
 e42b: add  rsp 0x18
 e42f: mov  rax r12
 e432: pop  ebx
 e433: pop  ebp
 e434: pop  esp
 e436: pop  ebp
 e438: pop  esi
 e43a: pop  edi
 e43c: ret 
 e43d: mov  eax 0x00000018
 e442: mul  rsp
 e445: UNKNOWN-INSTRUCTION
 e446: nop 
 e447: ret  0xb60f
 e44a: ror  [rax + 133] cl
 e44d: sar  [rax + 60] 0x48
 e451: UNKNOWN-INSTRUCTION
 e453: jnz e48c ; relative offset = 55
 e455: lea  rax 
 e459: mov  [rsp] rcx
 e45d: sal  rax 0x03
 e461: mov  rbx rax
 e464: jnz e46b ; relative offset = 5
 e466: UNKNOWN-INSTRUCTION
 e468: push  [rbp + 45]
 e46b: mov  rsi rbx
 e46e: call 4b10 ; relative offset = -39267
 e473: mov  rcx [rsp]
 e477: UNKNOWN-INSTRUCTION
 e479: ror  [rcx + 137] 0xc7
 e47d: jnz e239 ; relative offset = -586
 e483: UNKNOWN-INSTRUCTION
 e486: jz e239 ; relative offset = -595
 e48c: call ddd0 ; relative offset = -1729
 e491: nop  [rax + 0x00000000]
 e498: call 4680 ; relative offset = -40477
 e49d: xor  r15d r15d
 e4a0: mov  rcx [rsp]
 e4a4: jmp e239 ; relative offset = -624
 e4a9: call 4680 ; relative offset = -40494
 e4ae: xor  r15d r15d
 e4b1: mov  rcx [rsp]
 e4b5: jmp e235 ; relative offset = -645
 e4ba: UNKNOWN-INSTRUCTION
 e4bb: nop  [0 + rax + rax * 1]
 e4c0: push  esp
 e4c2: push  ebp
 e4c3: mov  ebp edi
 e4c5: push  ebx
 e4c6: mov  rbx [RIP + 0x00013e6b]
 e4cd: UNKNOWN-INSTRUCTION
 e4d0: jnz e4e1 ; relative offset = 15
 e4d2: jmp e500 ; relative offset = 44
 e4d4: nop  [rax + 0]
 e4d8: mov  rbx [rbx + 8]
 e4dc: UNKNOWN-INSTRUCTION
 e4df: jz e500 ; relative offset = 31
 e4e1: UNKNOWN-INSTRUCTION
 e4e2: sub  esi [rbp + 243]
 e4e5: xor  eax eax
 e4e7: UNKNOWN-INSTRUCTION
 e4e8: jpo e4fa ; relative offset = 16
 e4ea: UNKNOWN-INSTRUCTION
 e4eb: jz e4f1 ; relative offset = 4
 e4ed: lea  rax 
 e4f1: pop  ebx
 e4f2: pop  ebp
 e4f3: pop  esp
 e4f5: ret 
 e4f6: UNKNOWN-INSTRUCTION
 e4f8: nop  [0x00000000 + rax + rax * 1]
 e500: mov  edi ebp
 e502: lea  r12 
 e509: call 4840 ; relative offset = -40142
 e50e: mov  edi 0x00000018
 e513: UNKNOWN-INSTRUCTION
 e516: jz e52b ; relative offset = 19
 e518: mov  r12 [rax]
 e51b: mov  rdi r12
 e51e: call 4880 ; relative offset = -40099
 e523: lea  rdi 
 e527: and  rdi 0xf8
 e52b: call 4690 ; relative offset = -40608
 e530: mov  rbx rax
 e533: UNKNOWN-INSTRUCTION
 e536: jz e55a ; relative offset = 34
 e538: mov  [rax] ebp
 e53a: lea  rdi 
 e53e: mov  rsi r12
 e541: call 4750 ; relative offset = -40438
 e546: mov  rax [RIP + 0x00013deb]
 e54d: mov  [RIP + 0x00013de4] rbx
 e554: mov  [rbx + 8] rax
 e558: jmp e4e5 ; relative offset = -117
 e55a: call ddd0 ; relative offset = -1935
 e55f: nop 
 e560: push  ebp
 e561: push  ebx
 e562: mov  ebx edi
 e564: sub  rsp 0x28
 e568: UNKNOWN-INSTRUCTION
 e569: mov  rax 0x00000028
 e571: mov  [24 + rsp] rax
 e576: xor  eax eax
 e578: UNKNOWN-INSTRUCTION
 e57a: sbb  eax 0x0000013f
 e57f: jz e5c8 ; relative offset = 71
 e581: mov  rbp rsp
 e584: mov  r8d ebx
 e587: lea  rcx 
 e58e: xor  eax eax
 e590: mov  rdi rbp
 e593: mov  edx 0x00000015
 e598: mov  esi 0x00000001
 e59d: call 4ce0 ; relative offset = -39106
 e5a2: mov  rdi rbp
 e5a5: call 4880 ; relative offset = -40234
 e5aa: mov  rdx [24 + rsp]
 e5af: UNKNOWN-INSTRUCTION
 e5b0: sub  rdx 0x00000028
 e5b8: jnz e5f1 ; relative offset = 55
 e5ba: add  rsp 0x28
 e5be: pop  ebx
 e5bf: pop  ebp
 e5c0: ret 
 e5c1: nop  [rax + 0x00000000]
 e5c8: call e4c0 ; relative offset = -269
 e5cd: mov  rbp rax
 e5d0: UNKNOWN-INSTRUCTION
 e5d3: jz e581 ; relative offset = -84
 e5d5: mov  rdi rax
 e5d8: call 4880 ; relative offset = -40285
 e5dd: mov  rdi rbp
 e5e0: mov  rsi rax
 e5e3: call 12c20 ; relative offset = 17976
 e5e8: xor  edx edx
 e5ea: UNKNOWN-INSTRUCTION
 e5eb: ror  [rdi] 0x48
 e5ee: ret  0xb9eb
 e5f1: call 4890 ; relative offset = -40294
 e5f6: UNKNOWN-INSTRUCTION
 e5f8: nop  [0x00000000 + rax + rax * 1]
 e600: push  esp
 e602: push  ebp
 e603: mov  ebp edi
 e605: push  ebx
 e606: mov  rbx [RIP + 0x00013d23]
 e60d: UNKNOWN-INSTRUCTION
 e610: jnz e621 ; relative offset = 15
 e612: jmp e640 ; relative offset = 44
 e614: nop  [rax + 0]
 e618: mov  rbx [rbx + 8]
 e61c: UNKNOWN-INSTRUCTION
 e61f: jz e640 ; relative offset = 31
 e621: UNKNOWN-INSTRUCTION
 e622: sub  esi [rbp + 243]
 e625: xor  eax eax
 e627: UNKNOWN-INSTRUCTION
 e628: jpo e63a ; relative offset = 16
 e62a: UNKNOWN-INSTRUCTION
 e62b: jz e631 ; relative offset = 4
 e62d: lea  rax 
 e631: pop  ebx
 e632: pop  ebp
 e633: pop  esp
 e635: ret 
 e636: UNKNOWN-INSTRUCTION
 e638: nop  [0x00000000 + rax + rax * 1]
 e640: mov  edi ebp
 e642: lea  r12 
 e649: call 48e0 ; relative offset = -40302
 e64e: mov  edi 0x00000018
 e653: UNKNOWN-INSTRUCTION
 e656: jz e66b ; relative offset = 19
 e658: mov  r12 [rax]
 e65b: mov  rdi r12
 e65e: call 4880 ; relative offset = -40419
 e663: lea  rdi 
 e667: and  rdi 0xf8
 e66b: call 4690 ; relative offset = -40928
 e670: mov  rbx rax
 e673: UNKNOWN-INSTRUCTION
 e676: jz e69a ; relative offset = 34
 e678: mov  [rax] ebp
 e67a: lea  rdi 
 e67e: mov  rsi r12
 e681: call 4750 ; relative offset = -40758
 e686: mov  rax [RIP + 0x00013ca3]
 e68d: mov  [RIP + 0x00013c9c] rbx
 e694: mov  [rbx + 8] rax
 e698: jmp e625 ; relative offset = -117
 e69a: call ddd0 ; relative offset = -2255
 e69f: nop 
 e6a0: UNKNOWN-INSTRUCTION
 e6a4: push  esp
 e6a6: push  ebp
 e6a7: mov  rbp rdi
 e6aa: sub  rsp 0x08
 e6ae: call 4880 ; relative offset = -40499
 e6b3: lea  r12 
 e6b7: mov  rdi r12
 e6ba: call 4690 ; relative offset = -41007
 e6bf: UNKNOWN-INSTRUCTION
 e6c2: jz e6d9 ; relative offset = 21
 e6c4: add  rsp 0x08
 e6c8: mov  rdx r12
 e6cb: mov  rsi rbp
 e6ce: mov  rdi rax
 e6d1: pop  ebp
 e6d2: pop  esp
 e6d4: jmp 4a50 ; relative offset = -40073
 e6d9: call ddd0 ; relative offset = -2318
 e6de: UNKNOWN-INSTRUCTION
 e6df: nop 
 e6e0: push  ebp
 e6e2: mov  r13d edx
 e6e5: push  esp
 e6e7: mov  r12 rsi
 e6ea: push  ebp
 e6eb: mov  rbp rdi
 e6ee: mov  edi 0x00000020
 e6f3: push  ebx
 e6f4: sub  rsp 0x08
 e6f8: call 4690 ; relative offset = -41069
 e6fd: UNKNOWN-INSTRUCTION
 e700: jz e74d ; relative offset = 75
 e702: mov  rbx rax
 e705: UNKNOWN-INSTRUCTION
 e707: in  unknown 0x74
 e709: or  ecx [231 + rcx + rcx * 4]
 e70d: call e6a0 ; relative offset = -114
 e712: mov  r12 rax
 e715: mov  [rbx + 8] r12
 e719: UNKNOWN-INSTRUCTION
 e71b: in  eax dx
 e71c: jz e729 ; relative offset = 11
 e71e: mov  rdi rbp
 e721: call e6a0 ; relative offset = -134
 e726: mov  rbp rax
 e729: mov  rax [RIP + 0x00014030]
 e730: mov  [rbx] rbp
 e733: mov  [rbx + 16] r13b
 e737: mov  [rbx + 24] rax
 e73b: mov  [RIP + 0x0001401e] rbx
 e742: add  rsp 0x08
 e746: pop  ebx
 e747: pop  ebp
 e748: pop  esp
 e74a: pop  ebp
 e74c: ret 
 e74d: call ddd0 ; relative offset = -2434
 e752: UNKNOWN-INSTRUCTION
 e755: nop  [0x00000000 + rax + rax * 1]
 e75d: nop  [rax]
 e760: push  edi
 e762: push  esi
 e764: push  ebp
 e766: push  esp
 e768: push  ebp
 e769: movzx  rbp sil
 e76d: push  ebx
 e76e: mov  rbx rdi
 e771: sub  rsp 0x28
 e775: UNKNOWN-INSTRUCTION
 e777: push  [72 + rsi + rdx * 1]
 e77b: cmp  [RIP + 0x00013fb6] 0x00
 e782: jz e790 ; relative offset = 12
 e784: mov  rsi rdi
 e787: xor  edx edx
 e789: xor  edi edi
 e78b: call e6e0 ; relative offset = -176
 e790: mov  rax [RIP + 0x00013e31]
 e797: lea  r13 
 e79b: UNKNOWN-INSTRUCTION
 e79d: ror  [rdi] 0x84
 e7a0: pop  eax
 e7a1: add  eax [rax]
 e7a3: UNKNOWN-INSTRUCTION
 e7a4: nop  [rax + 0]
 e7a8: mov  rax [RIP + 0x00013ca1]
 e7af: mov  r12 [rax + r13 * 8]
 e7b3: mov  eax [0x000000a8 + r12]
 e7bb: cmp  eax 0x03
 e7be: UNKNOWN-INSTRUCTION
 e7c0: ret  0xf883
 e7c3: or  [rdi] ecx
 e7c5: UNKNOWN-INSTRUCTION
 e7c6: ror  [rax] 0xc2
 e7c9: mov  r10d edx
 e7cc: jz e990 ; relative offset = 446
 e7d2: mov  r15 [r12]
 e7d6: UNKNOWN-INSTRUCTION
 e7d9: jz ea00 ; relative offset = 545
 e7df: movzx  r11 [r15]
 e7e3: UNKNOWN-INSTRUCTION
 e7e7: jnz eae0 ; relative offset = 755
 e7ed: mov  rdx r15
 e7f0: movzx  eax [rdx + 1]
 e7f4: add  rdx 0x01
 e7f8: cmp  unknown 0x2f
 e7fa: jz e7f0 ; relative offset = -12
 e7fc: UNKNOWN-INSTRUCTION
 e7fd: ror  [rdi] 0x84
 e800: cld 
 e801: add  [rax] eax
 e803: UNKNOWN-INSTRUCTION
 e804: mov  rsi rdx
 e807: xor  edi edi
 e809: jmp e826 ; relative offset = 27
 e80b: nop  [0 + rax + rax * 1]
 e810: UNKNOWN-INSTRUCTION
 e812: push  [RBP + 72 + rax * 1]
 e816: mov  edx esi
 e818: xor  edi edi
 e81a: movzx  eax [rsi + 1]
 e81e: add  rsi 0x01
 e822: UNKNOWN-INSTRUCTION
 e824: jz e839 ; relative offset = 19
 e826: cmp  unknown 0x2f
 e828: jnz e810 ; relative offset = -26
 e82a: movzx  eax [rsi + 1]
 e82e: add  rsi 0x01
 e832: mov  edi r10d
 e835: UNKNOWN-INSTRUCTION
 e837: jnz e826 ; relative offset = -19
 e839: UNKNOWN-INSTRUCTION
 e83c: jz ea70 ; relative offset = 558
 e842: UNKNOWN-INSTRUCTION
 e846: jz ea00 ; relative offset = 436
 e84c: movzx  eax [rbx]
 e84f: mov  r14 rbx
 e852: cmp  unknown 0x2f
 e854: jnz e86d ; relative offset = 23
 e856: UNKNOWN-INSTRUCTION
 e858: nop  [0x00000000 + rax + rax * 1]
 e860: movzx  rax [r14 + 1]
 e865: add  r14 0x01
 e869: cmp  unknown 0x2f
 e86b: jz e860 ; relative offset = -13
 e86d: UNKNOWN-INSTRUCTION
 e86f: jz e8a9 ; relative offset = 56
 e871: mov  rdx r14
 e874: xor  esi esi
 e876: jmp e896 ; relative offset = 30
 e878: nop  [0x00000000 + rax + rax * 1]
 e880: UNKNOWN-INSTRUCTION
 e882: div  [RBP + 73 + rax * 1]
 e886: mov  esi edx
 e888: xor  esi esi
 e88a: movzx  eax [rdx + 1]
 e88e: add  rdx 0x01
 e892: UNKNOWN-INSTRUCTION
 e894: jz e8a9 ; relative offset = 19
 e896: cmp  unknown 0x2f
 e898: jnz e880 ; relative offset = -26
 e89a: movzx  eax [rdx + 1]
 e89e: add  rdx 0x01
 e8a2: mov  esi r10d
 e8a5: UNKNOWN-INSTRUCTION
 e8a7: jnz e896 ; relative offset = -19
 e8a9: mov  rdi r14
 e8ac: call 4880 ; relative offset = -41009
 e8b1: mov  r10 rax
 e8b4: cmp  r10 0x01
 e8b8: jna eaa0 ; relative offset = 482
 e8be: UNKNOWN-INSTRUCTION
 e8c0: jnge e8d8 ; relative offset = 22
 e8c2: jmp  [rdi]
 e8c4: lea  rax 
 e8c8: jz eaf4 ; relative offset = 550
 e8ce: sub  r14 rbx
 e8d1: mov  rdi r15
 e8d4: lea  rdx 
 e8d8: mov  [8 + rsp] rdx
 e8dd: call 4880 ; relative offset = -41058
 e8e2: mov  rdx [8 + rsp]
 e8e7: mov  [rsp] rax
 e8eb: xor  r10d r10d
 e8ee: mov  eax 0x0000002f
 e8f3: UNKNOWN-INSTRUCTION
 e8f4: jnge e909 ; relative offset = 19
 e8f6: jmp  [rdi]
 e8f8: mov  ecx 0x00000000
 e8fd: UNKNOWN-INSTRUCTION
 e8fe: rol  [rcx + 15] 0x95
 e903: ret  0x4488
 e906: and  unknown 0x1f
 e908: mov  rax [rsp]
 e90c: mov  [16 + rsp] rdx
 e911: mov  [8 + rsp] r10
 e916: lea  rdi 
 e91b: add  rdi r10
 e91e: call 4690 ; relative offset = -41619
 e923: mov  r10 [8 + rsp]
 e928: mov  rdx [16 + rsp]
 e92d: UNKNOWN-INSTRUCTION
 e92f: ror  [rcx + 137] 0xc6
 e933: jz eb03 ; relative offset = 458
 e939: mov  rsi rbx
 e93c: mov  rdi rax
 e93f: mov  [8 + rsp] r10
 e944: call 4b80 ; relative offset = -40393
 e949: movzx  ecx [31 + rsp]
 e94e: mov  r10 [8 + rsp]
 e953: mov  rsi r15
 e956: mov  rdx [rsp]
 e95a: mov  [rax] cl
 e95c: lea  rdi 
 e960: call 4b80 ; relative offset = -40421
 e965: mov  edx ebp
 e967: mov  rdi r14
 e96a: mov  [rax] 0x00
 e96d: mov  rsi [8 + r12]
 e972: call e6e0 ; relative offset = -663
 e977: mov  rdi r14
 e97a: call 4680 ; relative offset = -41727
 e97f: cmp  [0x000000a8 + r12] 0x09
 e988: jz ea1e ; relative offset = 144
 e98e: UNKNOWN-INSTRUCTION
 e98f: nop 
 e990: sub  r13 0x01
 e994: jnb e7a8 ; relative offset = -498
 e99a: mov  rdx [RIP + 0x00013c27]
 e9a1: UNKNOWN-INSTRUCTION
 e9a3: ror  [rdi] cl
 e9a5: UNKNOWN-INSTRUCTION
 e9a6: push  edx
 e9a7: add  [rax] eax
 e9a9: UNKNOWN-INSTRUCTION
 e9aa: mov  rsi [RIP + 0x00013a9f]
 e9b1: lea  rdi 
 e9b5: mov  rax rsi
 e9b8: xor  edx edx
 e9ba: UNKNOWN-INSTRUCTION
 e9bb: nop  [0 + rax + rax * 1]
 e9c0: mov  rcx [rax]
 e9c3: cmp  [rcx + 0x000000a8] 0x09
 e9ca: mov  [rsi + rdx * 8] rcx
 e9ce: UNKNOWN-INSTRUCTION
 e9d0: ror  [rax + 131] 0xc0
 e9d4: UNKNOWN-INSTRUCTION
 e9d5: movzx  ecx cl
 e9d8: add  rdx rcx
 e9db: UNKNOWN-INSTRUCTION
 e9de: jnz e9c0 ; relative offset = -32
 e9e0: mov  [RIP + 0x00013be1] rdx
 e9e7: add  rsp 0x28
 e9eb: pop  ebx
 e9ec: pop  ebp
 e9ed: pop  esp
 e9ef: pop  ebp
 e9f1: pop  esi
 e9f3: pop  edi
 e9f5: ret 
 e9f6: UNKNOWN-INSTRUCTION
 e9f8: nop  [0x00000000 + rax + rax * 1]
 ea00: mov  rsi [8 + r12]
 ea05: mov  edx ebp
 ea07: mov  rdi r15
 ea0a: call e6e0 ; relative offset = -815
 ea0f: cmp  [0x000000a8 + r12] 0x09
 ea18: jnz e990 ; relative offset = -142
 ea1e: mov  rdi [r12]
 ea22: call 4680 ; relative offset = -41895
 ea27: mov  rdi [8 + r12]
 ea2c: call 4680 ; relative offset = -41905
 ea31: mov  rdi [16 + r12]
 ea36: call 4680 ; relative offset = -41915
 ea3b: mov  rdi [0x000000b0 + r12]
 ea43: lea  rax 
 ea4a: UNKNOWN-INSTRUCTION
 ea4d: jz e990 ; relative offset = -195
 ea53: call 48c0 ; relative offset = -41368
 ea58: sub  r13 0x01
 ea5c: jnb e7a8 ; relative offset = -698
 ea62: jmp e99a ; relative offset = -205
 ea67: UNKNOWN-INSTRUCTION
 ea68: nop  [0x00000000 + rax + rax * 1]
 ea70: xor  eax eax
 ea72: UNKNOWN-INSTRUCTION
 ea73: jp ea76 ; relative offset = 1
 ea75: UNKNOWN-INSTRUCTION
 ea78: ror  [rdi] 0xb6
 ea7b: add  r8b [rcx]
 ea7e: UNKNOWN-INSTRUCTION
 ea7f: ror  [rdi] 0x84
 ea82: UNKNOWN-INSTRUCTION
 ea86: cmp  unknown 0x2f
 ea88: jnz e842 ; relative offset = -588
 ea8e: sub  r13 0x01
 ea92: jnb e7a8 ; relative offset = -752
 ea98: jmp e99a ; relative offset = -259
 ea9d: nop  [rax]
 eaa0: sub  r14 rbx
 eaa3: mov  rdi r15
 eaa6: mov  [16 + rsp] r10
 eaab: lea  rdx 
 eaaf: mov  [8 + rsp] rdx
 eab4: call 4880 ; relative offset = -41529
 eab9: mov  r10 [16 + rsp]
 eabe: mov  rdx [8 + rsp]
 eac3: mov  [rsp] rax
 eac7: UNKNOWN-INSTRUCTION
 eac9: ror  [rdi] cl
 eacb: UNKNOWN-INSTRUCTION
 eacc: sbb  edi esi
 eace: UNKNOWN-INSTRUCTION
 eacf: inc  esi
 ead1: and  unknown 0x1f
 ead4: UNKNOWN-INSTRUCTION
 ead5: jmp e908 ; relative offset = -466
 eada: UNKNOWN-INSTRUCTION
 eadb: nop  [0 + rax + rax * 1]
 eae0: mov  eax r11d
 eae3: mov  rdx r15
 eae6: UNKNOWN-INSTRUCTION
 eae9: jnz e804 ; relative offset = -747
 eaef: jmp e84c ; relative offset = -680
 eaf4: mov  r10 rax
 eaf7: jmp e8b4 ; relative offset = -584
 eafc: xor  edx edx
 eafe: jmp e9e0 ; relative offset = -291
 eb03: call ddd0 ; relative offset = -3384
 eb08: nop  [0x00000000 + rax + rax * 1]
 eb10: push  ebp
 eb11: mov  rbp rsp
 eb14: push  edi
 eb16: mov  r15 rcx
 eb19: push  esi
 eb1b: mov  r14d esi
 eb1e: push  ebp
 eb20: push  esp
 eb22: mov  r12 rdi
 eb25: push  ebx
 eb26: sub  esp 0x000002d8
 eb2d: mov  [rbp + 0xfffffd0c] edx
 eb33: mov  r13 [RIP + 0x00013a8e]
 eb3a: mov  rbx [RIP + 0x00013a97]
 eb41: mov  rdi [RIP + 0x00013a88]
 eb48: UNKNOWN-INSTRUCTION
 eb49: mov  rax 0x00000028
 eb51: mov  [rbp + 200] rax
 eb55: xor  eax eax
 eb57: UNKNOWN-INSTRUCTION
 eb5a: jz f500 ; relative offset = 2464
 eb60: lea  rax 
 eb65: lea  rax 
 eb69: lea  rbx 
 eb6d: xor  eax eax
 eb6f: lea  rdi 
 eb73: mov  rcx rbx
 eb76: mov  [rbx + 0x000000c0] 0x00000000
 eb81: and  rdi 0xf8
 eb85: mov  [rbx] 0x00000000
 eb8c: sub  rcx rdi
 eb8f: add  ecx 0x000000c8
 eb95: shr  ecx 0x03
 eb98: REP stosq 
 eb9b: mov  [rbx + 0x000000a8] r14d
 eba2: mov  [rbx + 0x000000c4] 0xffffffff
 ebac: UNKNOWN-INSTRUCTION
 ebae: stc 
 ebaf: UNKNOWN-INSTRUCTION
 ebb0: add  [rax] eax
 ebb2: UNKNOWN-INSTRUCTION
 ebb3: jnz ebc2 ; relative offset = 13
 ebb5: UNKNOWN-INSTRUCTION
 ebb9: add  [rax] eax
 ebbb: UNKNOWN-INSTRUCTION
 ebbc: jnz f580 ; relative offset = 2494
 ebc2: UNKNOWN-INSTRUCTION
 ebc3: mov  ebp 0xfffffd0c
 ebc8: UNKNOWN-INSTRUCTION
 ebc9: movzx  esi [RIP + 0x00013a18]
 ebd0: jz ed30 ; relative offset = 346
 ebd6: movzx  rdx [r12]
 ebdb: mov  r13 r12
 ebde: UNKNOWN-INSTRUCTION
 ebe1: jz ebf0 ; relative offset = 13
 ebe3: movzx  r8 [r15]
 ebe7: UNKNOWN-INSTRUCTION
 ebe9: ror  [rdi] 0x85
 ebec: add  al [r8]
 ebef: UNKNOWN-INSTRUCTION
 ebf3: jnz f3ae ; relative offset = 1973
 ebf9: mov  r10d [RIP + 0x00013b44]
 ec00: lea  r15 
 ec04: mov  [rbp + 0xfffffd00] r10d
 ec0b: call 7390 ; relative offset = -30848
 ec10: mov  r10d [rbp + 0xfffffd00]
 ec17: cmp  r10d 0x04
 ec1b: UNKNOWN-INSTRUCTION
 ec1d: mov  edi 0x41000004
 ec22: cmp  edx 0x02
 ec25: UNKNOWN-INSTRUCTION
 ec2b: call 7390 ; relative offset = -30880
 ec30: mov  rdx r15
 ec33: mov  ecx 0x00000100
 ec38: mov  rsi r13
 ec3b: mov  r8d eax
 ec3e: mov  edi 0xffffff9c
 ec43: xor  r15d r15d
 ec46: call 7700 ; relative offset = -30027
 ec4b: UNKNOWN-INSTRUCTION
 ec4c: ror  [rdi] 0x85
 ec4f: mov  edx 0xc6000004
 ec54: cmp  [rax + 0x01000000] 0x41
 ec5b: cmp  esi 0x05
 ec5e: jz f2d0 ; relative offset = 1644
 ec64: mov  eax [rbx + 48]
 ec67: and  eax 0x0000f000
 ec6c: UNKNOWN-INSTRUCTION
 ec6e: add  [rax] 0x00
 ec71: jz f2d0 ; relative offset = 1625
 ec77: mov  r11d [RIP + 0x0001368e]
 ec7e: UNKNOWN-INSTRUCTION
 ec81: jz f150 ; relative offset = 1225
 ec87: UNKNOWN-INSTRUCTION
 ec89: jnae ecc1 ; relative offset = 54
 ec8b: add  [rax] eax
 ec8d: UNKNOWN-INSTRUCTION
 ec8e: jnz f150 ; relative offset = 1212
 ec94: mov  eax [rbx + 48]
 ec97: and  eax 0x0000f000
 ec9c: UNKNOWN-INSTRUCTION
 ec9e: mov  unknown 
 ec9f: UNKNOWN-INSTRUCTION
 eca1: jz f1db ; relative offset = 1332
 eca7: mov  edx 0x00000005
 ecac: UNKNOWN-INSTRUCTION
 ecb1: jz f718 ; relative offset = 2657
 ecb7: mov  edi [RIP + 0x0001364f]
 ecbd: mov  r13 [rbx + 88]
 ecc1: mov  [rbx + 0x000000a8] edx
 ecc7: UNKNOWN-INSTRUCTION
 ecc8: dec  [rdi]
 ecca: UNKNOWN-INSTRUCTION
 eccc: add  [rax] eax
 ecce: UNKNOWN-INSTRUCTION
 ecd3: add  [rax] eax
 ecd5: UNKNOWN-INSTRUCTION
 ecd6: jnz eea8 ; relative offset = 460
 ecdc: UNKNOWN-INSTRUCTION
 ecde: sbb  eax 0x00000136
 ece3: jnz ef2e ; relative offset = 581
 ece9: movzx  eax [RIP + 0x00013621]
 ecf0: UNKNOWN-INSTRUCTION
 ecf1: ror  [rdi] 0x85
 ecf4: clc 
 ecf5: UNKNOWN-INSTRUCTION
 ecf8: mov  rdi r12
 ecfb: call e6a0 ; relative offset = -1632
 ed00: add  [RIP + 0x000138c0] 0x01
 ed08: mov  [rbx] rax
 ed0b: mov  rax [rbp + 200]
 ed0f: UNKNOWN-INSTRUCTION
 ed10: sub  rax 0x00000028
 ed18: jnz fc6f ; relative offset = 3921
 ed1e: lea  rsp 
 ed22: mov  rax r13
 ed25: pop  ebx
 ed26: pop  esp
 ed28: pop  ebp
 ed2a: pop  esi
 ed2c: pop  edi
 ed2e: pop  ebp
 ed2f: ret 
 ed30: UNKNOWN-INSTRUCTION
 ed33: jnz f390 ; relative offset = 1623
 ed39: UNKNOWN-INSTRUCTION
 ed3b: jp ed76 ; relative offset = 57
 ed3d: add  [rax] eax
 ed3f: UNKNOWN-INSTRUCTION
 ed40: jnz ee10 ; relative offset = 202
 ed46: cmp  r14d 0x03
 ed4a: jz fa20 ; relative offset = 3280
 ed50: movzx  eax [RIP + 0x000135ba]
 ed57: UNKNOWN-INSTRUCTION
 ed58: ror  [rdi] 0x85
 ed5b: loope ed68 ; relative offset = 11
 ed5d: UNKNOWN-INSTRUCTION
 ed61: push  ebx
 ed62: UNKNOWN-INSTRUCTION
 ed63: add  [rax] eax
 ed65: UNKNOWN-INSTRUCTION
 ed66: jz fa10 ; relative offset = 3236
 ed6c: mov  edx 0x00000041
 ed71: UNKNOWN-INSTRUCTION
 ed74: jnb ed9e ; relative offset = 39
 ed77: cmp  [RIP + 0x000139c6] 0x05
 ed7e: jz fb47 ; relative offset = 3523
 ed84: UNKNOWN-INSTRUCTION
 ed86: mov  ebp 0x00000139
 ed8b: jnz ee10 ; relative offset = 127
 ed91: UNKNOWN-INSTRUCTION
 ed93: mov  cl 0x39
 ed95: add  [rax] eax
 ed97: UNKNOWN-INSTRUCTION
 ed98: jnz ee10 ; relative offset = 118
 ed9a: UNKNOWN-INSTRUCTION
 ed9c: jnz ee10 ; relative offset = 114
 ed9e: UNKNOWN-INSTRUCTION
 eda0: adc  unknown 0x39
 eda2: add  [rax] eax
 eda4: UNKNOWN-INSTRUCTION
 eda5: jz fa10 ; relative offset = 3173
 edab: UNKNOWN-INSTRUCTION
 edad: div  [69 + rax]
 edb1: xor  ebp ebp
 edb3: cmp  r14d 0x05
 edb7: jnz ecf8 ; relative offset = -197
 edbd: cmp  [RIP + 0x00013540] 0x03
 edc4: jz ee10 ; relative offset = 74
 edc6: UNKNOWN-INSTRUCTION
 edc9: xor  eax 0x0f000001
 edce: UNKNOWN-INSTRUCTION
 edcf: and  eax 0xbfffffff
 edd4: UNKNOWN-INSTRUCTION
 edd8: call c120 ; relative offset = -11453
 eddd: UNKNOWN-INSTRUCTION
 eddf: jnz ee10 ; relative offset = 47
 ede1: mov  edi 0x00000010
 ede6: call c120 ; relative offset = -11467
 edeb: UNKNOWN-INSTRUCTION
 eded: jnz ee10 ; relative offset = 33
 edef: mov  edi 0x00000011
 edf4: call c120 ; relative offset = -11481
 edf9: UNKNOWN-INSTRUCTION
 edfb: jnz ee10 ; relative offset = 19
 edfd: mov  edi 0x00000015
 ee02: call c120 ; relative offset = -11495
 ee07: UNKNOWN-INSTRUCTION
 ee08: ror  [rdi] 0x84
 ee0b: jmp ffffffff9100ee0e ; relative offset = -1862270978
 ee10: movzx  rdx [r12]
 ee15: mov  r13 r12
 ee18: UNKNOWN-INSTRUCTION
 ee1b: jz ebf9 ; relative offset = -552
 ee21: movzx  r8 [r15]
 ee25: mov  r13 r12
 ee28: UNKNOWN-INSTRUCTION
 ee2a: ror  [rdi] 0x84
 ee2d: UNKNOWN-INSTRUCTION
 ee30: dec  [231 + rcx + rcx * 4]
 ee34: mov  [rbp + 0xfffffd0a] sil
 ee3b: mov  [rbp + 0xfffffd0b] dl
 ee41: mov  [rbp + 0xfffffd00] r8b
 ee48: call 4880 ; relative offset = -42445
 ee4d: mov  rdi r15
 ee50: mov  r13 rax
 ee53: call 4880 ; relative offset = -42456
 ee58: mov  rdi rsp
 ee5b: movzx  esi [rbp + 0xfffffd0a]
 ee62: movzx  edx [rbp + 0xfffffd0b]
 ee69: lea  rax 
 ee6e: movzx  r8 [rbp + 0xfffffd00]
 ee76: mov  rcx rax
 ee79: and  unknown 0xfffff000
 ee7f: and  rcx 0xf0
 ee83: sub  rdi rax
 ee86: UNKNOWN-INSTRUCTION
 ee88: cld 
 ee89: jz f680 ; relative offset = 2033
 ee8f: sub  esp 0x00001000
 ee96: or  [0x00000ff8 + rsp] 0x00
 ee9f: jmp ee86 ; relative offset = -27
 eea1: nop  [rax + 0x00000000]
 eea8: mov  r8 [RIP + 0x00013401]
 eeaf: mov  edx [RIP + 0x00013403]
 eeb5: mov  ecx 0x00000200
 eeba: mov  rdi r13
 eebd: lea  r15 
 eec4: mov  rsi r15
 eec7: call cd20 ; relative offset = -8620
 eecc: mov  rdi rax
 eecf: mov  r14 rax
 eed2: call 4880 ; relative offset = -42583
 eed7: mov  rdi r14
 eeda: mov  rsi rax
 eedd: call 12c20 ; relative offset = 15678
 eee2: UNKNOWN-INSTRUCTION
 eee3: add  eax 0x000133bc
 eee8: jnl eef0 ; relative offset = 6
 eeea: mov  [RIP + 0x000133b4] eax
 eef0: mov  esi [RIP + 0x00013416]
 eef6: UNKNOWN-INSTRUCTION
 eef8: jnz ecdc ; relative offset = -546
 eefe: UNKNOWN-INSTRUCTION
 ef01: xor  [rcx] eax
 ef03: UNKNOWN-INSTRUCTION
 ef05: jnz f890 ; relative offset = 2437
 ef0b: UNKNOWN-INSTRUCTION
 ef0d: jnae ef40 ; relative offset = 49
 ef0f: add  [rax] eax
 ef11: UNKNOWN-INSTRUCTION
 ef12: jnz f840 ; relative offset = 2344
 ef18: UNKNOWN-INSTRUCTION
 ef1a: or  [rbp + 1] eax
 ef1d: UNKNOWN-INSTRUCTION
 ef1f: jnz f818 ; relative offset = 2291
 ef25: UNKNOWN-INSTRUCTION
 ef28: xor  eax [rcx]
 ef2a: UNKNOWN-INSTRUCTION
 ef2c: jz ef46 ; relative offset = 24
 ef2e: mov  rdi [rbx + 0x000000b0]
 ef35: call 4880 ; relative offset = -42682
 ef3a: UNKNOWN-INSTRUCTION
 ef3b: add  eax 0x00013360
 ef40: jnle f5a8 ; relative offset = 1634
 ef46: mov  ecx [RIP + 0x000133c0]
 ef4c: UNKNOWN-INSTRUCTION
 ef4d: leave 
 ef4e: jnz ece9 ; relative offset = -619
 ef54: mov  [rbp + 0xfffffd24] 0x00
 ef5b: mov  rcx [rbx + 40]
 ef5f: lea  rdi 
 ef66: mov  rax 0xcccccccccccccccd
 ef70: mov  rax rcx
 ef73: sub  rdi 0x01
 ef77: mul  rsp
 ef7a: mov  rax rcx
 ef7d: shr  rdx 0x03
 ef81: lea  rsi 
 ef85: add  rsi rsi
 ef88: sub  rax rsi
 ef8b: add  eax 0x30
 ef8e: mov  [rdi] al
 ef90: mov  rax rcx
 ef93: mov  rcx rdx
 ef96: cmp  rax 0x09
 ef9a: jnbe  0xd4
 ef9c: call 4880 ; relative offset = -42785
 efa1: UNKNOWN-INSTRUCTION
 efa2: add  eax 0x000134a1
 efa7: jng efaf ; relative offset = 6
 efa9: mov  [RIP + 0x00013499] eax
 efaf: mov  eax [rbx + 48]
 efb2: and  eax 0x0000b000
 efb7: UNKNOWN-INSTRUCTION
 efbc: jnz f5b8 ; relative offset = 1526
 efc2: mov  r15 [rbx + 64]
 efc6: mov  [rbp + 0xfffffd44] 0x00
 efcd: lea  r14 
 efd4: mov  rcx 0xcccccccccccccccd
 efde: mov  rdi r14
 efe1: mov  rax r15
 efe4: mov  rsi r15
 efe7: shr  rax 0x08
 efeb: shr  rsi 0x20
 efef: and  eax 0x00000fff
 eff4: and  esi 0xfffff000
 effa: or  esi eax
 effc: nop  [rax + 0]
 f000: mov  rax rsi
 f003: sub  rdi 0x01
 f007: mul  rsp
 f00a: mov  rax rsi
 f00d: shr  rdx 0x03
 f011: lea  r8 
 f015: add  r8 r8
 f018: sub  rax r8
 f01b: add  eax 0x30
 f01e: mov  [rdi] al
 f020: mov  rax rsi
 f023: mov  rsi rdx
 f026: cmp  rax 0x09
 f02a: jnbe  0xd4
 f02c: call 4880 ; relative offset = -42929
 f031: mov  r9d [RIP + 0x00013400]
 f038: UNKNOWN-INSTRUCTION
 f03b: jng f046 ; relative offset = 9
 f03d: mov  [RIP + 0x000133f5] eax
 f043: mov  r9d eax
 f046: mov  rcx r15
 f049: mov  [rbp + 0xfffffd44] 0x00
 f050: movzx  rax r15b
 f054: mov  rdi r14
 f057: mov  rax 0xcccccccccccccccd
 f061: shr  rcx 0x0c
 f065: UNKNOWN-INSTRUCTION
 f066: leave 
 f067: or  ecx eax
 f069: nop  [rax + 0x00000000]
 f070: mov  rax rcx
 f073: sub  rdi 0x01
 f077: mul  rsp
 f07a: mov  rax rcx
 f07d: shr  rdx 0x03
 f081: lea  rsi 
 f085: add  rsi rsi
 f088: sub  rax rsi
 f08b: add  eax 0x30
 f08e: mov  [rdi] al
 f090: mov  rax rcx
 f093: mov  rcx rdx
 f096: cmp  rax 0x09
 f09a: jnbe  0xd4
 f09c: mov  [rbp + 0xfffffd0c] r9d
 f0a3: call 4880 ; relative offset = -43048
 f0a8: mov  edx [RIP + 0x00013386]
 f0ae: mov  r9d [rbp + 0xfffffd0c]
 f0b5: UNKNOWN-INSTRUCTION
 f0b6: sar  [rsi + 8] 
 f0b9: mov  [RIP + 0x00013375] eax
 f0bf: mov  edx eax
 f0c1: lea  eax 
 f0c6: UNKNOWN-INSTRUCTION
 f0c7: add  eax 0x00013364
 f0cc: jng ece9 ; relative offset = -1001
 f0d2: jmp f5fc ; relative offset = 1317
 f0d7: UNKNOWN-INSTRUCTION
 f0d8: nop  [0x00000000 + rax + rax * 1]
 f0e0: cmp  r10d 0x05
 f0e4: jnz ec2b ; relative offset = -1215
 f0ea: mov  rdx r15
 f0ed: mov  r8d eax
 f0f0: xor  ecx ecx
 f0f2: mov  rsi r13
 f0f5: mov  edi 0xffffff9c
 f0fa: mov  edi 0x00000001
 f100: call 7700 ; relative offset = -31237
 f105: UNKNOWN-INSTRUCTION
 f106: ror  [rdi] 0x84
 f109: UNKNOWN-INSTRUCTION
 f10d: mov  edx 0x00000005
 f112: lea  rsi 
 f119: xor  edi edi
 f11b: call 4860 ; relative offset = -43200
 f120: mov  r15d [rbp + 0xfffffd0c]
 f127: mov  rdx r13
 f12a: xor  r13d r13d
 f12d: mov  rsi rax
 f130: movzx  rdi r15b
 f134: call a160 ; relative offset = -20441
 f139: UNKNOWN-INSTRUCTION
 f13b: dec  [rdi]
 f13d: UNKNOWN-INSTRUCTION
 f13e: leave 
 f13f: UNKNOWN-INSTRUCTION
 f141: jmp  rcx
 f143: mov  cl 0xfb
 f145: UNKNOWN-INSTRUCTION
 f146: jmp  [rsi + 15]
 f149: UNKNOWN-INSTRUCTION
 f150: mov  rax [RIP + 0x000131c9]
 f157: UNKNOWN-INSTRUCTION
 f15b: jz fc3d ; relative offset = 2780
 f161: lea  r14 
 f168: mov  rdi r13
 f16b: mov  rsi r14
 f16e: UNKNOWN-INSTRUCTION
 f170: dec  [rdi]
 f172: UNKNOWN-INSTRUCTION
 f173: jmp ffffffffe800f17a ; relative offset = -402653182
 f178: in  unknown 0x5a
 f17a: UNKNOWN-INSTRUCTION
 f17b: dec  [246 + rcx + rcx * 4]
 f17f: mov  edi eax
 f181: call a370 ; relative offset = -19990
 f186: UNKNOWN-INSTRUCTION
 f187: ror  [rdi] 0x88
 f18a: jmp 4800f191 ; relative offset = 1207959554
 f18f: mov  esi [rbx + 0x000000b0]
 f195: lea  rdi 
 f19c: call 49f0 ; relative offset = -42929
 f1a1: mov  edx [RIP + 0x00013165]
 f1a7: UNKNOWN-INSTRUCTION
 f1a8: ror  [rdi] cl
 f1aa: UNKNOWN-INSTRUCTION
 f1ab: jno f1b1 ; relative offset = 4
 f1ad: UNKNOWN-INSTRUCTION
 f1b0: ror  [rdi] 0x84
 f1b3: adc  eax 0x8b000003
 f1b8: UNKNOWN-INSTRUCTION
 f1ba: mov  [RIP + 0x0001328b] 0x01
 f1c1: mov  [rbx + 0x000000bc] 0x00000001
 f1cb: and  eax 0x0000f000
 f1d0: UNKNOWN-INSTRUCTION
 f1d2: mov  unknown 
 f1d3: UNKNOWN-INSTRUCTION
 f1d5: jnz eca7 ; relative offset = -1332
 f1db: UNKNOWN-INSTRUCTION
 f1de: xor  eax 0x0f000001
 f1e3: UNKNOWN-INSTRUCTION
 f1e8: mov  rsi [rbx + 72]
 f1ec: mov  rdi r13
 f1ef: call c440 ; relative offset = -11700
 f1f4: mov  [rbx + 8] rax
 f1f8: mov  r15 rax
 f1fb: UNKNOWN-INSTRUCTION
 f1fd: ror  [rdi] 0x84
 f200: or  unknown 0x09
 f202: UNKNOWN-INSTRUCTION
 f208: jz f291 ; relative offset = 131
 f20e: movzx  rax [r13 + 0]
 f213: xor  esi esi
 f215: mov  r14 r13
 f218: cmp  unknown 0x2f
 f21a: UNKNOWN-INSTRUCTION
 f21e: jnz f22d ; relative offset = 13
 f220: movzx  rax [r14 + 1]
 f225: add  r14 0x01
 f229: cmp  unknown 0x2f
 f22b: jz f220 ; relative offset = -13
 f22d: UNKNOWN-INSTRUCTION
 f22f: jz f26a ; relative offset = 57
 f231: mov  rdx r14
 f234: xor  ecx ecx
 f236: jmp f255 ; relative offset = 29
 f238: nop  [0x00000000 + rax + rax * 1]
 f240: UNKNOWN-INSTRUCTION
 f241: leave 
 f242: jz f249 ; relative offset = 5
 f244: mov  r14 rdx
 f247: xor  ecx ecx
 f249: movzx  eax [rdx + 1]
 f24d: add  rdx 0x01
 f251: UNKNOWN-INSTRUCTION
 f253: jz f26a ; relative offset = 21
 f255: cmp  unknown 0x2f
 f257: jnz f240 ; relative offset = -25
 f259: movzx  eax [rdx + 1]
 f25d: add  rdx 0x01
 f261: mov  ecx 0x00000001
 f266: UNKNOWN-INSTRUCTION
 f268: jnz f255 ; relative offset = -21
 f26a: sub  r14 r13
 f26d: jmp f283 ; relative offset = 20
 f26f: nop 
 f270: UNKNOWN-INSTRUCTION
 f272: jnge f2a9 ; relative offset = 53
 f274: jmp  [rdi]
 f276: lea  rax 
 f27a: jnz f746 ; relative offset = 1222
 f280: mov  r14 rax
 f283: UNKNOWN-INSTRUCTION
 f285: div  [rdi + 232]
 f288: UNKNOWN-INSTRUCTION
 f28b: jnz f740 ; relative offset = 1199
 f291: mov  rdi r15
 f294: call e6a0 ; relative offset = -3065
 f299: mov  r10 rax
 f29c: UNKNOWN-INSTRUCTION
 f29e: ror  [rdi] 0x85
 f2a1: cld 
 f2a2: add  unknown 0x00
 f2a4: UNKNOWN-INSTRUCTION
 f2a5: xor  r10d r10d
 f2a8: mov  rdi r10
 f2ab: call 4680 ; relative offset = -44080
 f2b0: mov  eax [rbx + 48]
 f2b3: and  eax 0x0000f000
 f2b8: UNKNOWN-INSTRUCTION
 f2ba: mov  unknown 
 f2bb: UNKNOWN-INSTRUCTION
 f2bd: jnz eca7 ; relative offset = -1564
 f2c3: mov  edx 0x00000006
 f2c8: jmp ecb7 ; relative offset = -1558
 f2cd: nop  [rax]
 f2d0: UNKNOWN-INSTRUCTION
 f2d2: xor  [rax] esi
 f2d4: add  [rax] eax
 f2d6: UNKNOWN-INSTRUCTION
 f2d7: jz ec77 ; relative offset = -1638
 f2dd: mov  edi 0x00000015
 f2e2: call c120 ; relative offset = -12743
 f2e7: UNKNOWN-INSTRUCTION
 f2e8: ror  [rdi] 0x84
 f2eb: mov  cl dil
 f2ed: UNKNOWN-INSTRUCTION
 f2ee: jmp  rax
 f2f0: sbb  unknown 0x54
 f2f2: UNKNOWN-INSTRUCTION
 f2f3: dec  [115 + rbx + rcx * 4]
 f2f7: UNKNOWN-INSTRUCTION
 f2fa: xor  eax 0x00013029
 f2ff: mov  [rax] 0x0000005f
 f305: jz f30e ; relative offset = 7
 f307: mov  [RIP + 0x0001301a] r14
 f30e: mov  [rbx + 0x000000c0] 0x00
 f315: jmp ec77 ; relative offset = -1699
 f31a: UNKNOWN-INSTRUCTION
 f31b: nop  [0 + rax + rax * 1]
 f320: UNKNOWN-INSTRUCTION
 f321: mov  ebp 0xfffffd0c
 f326: UNKNOWN-INSTRUCTION
 f327: jz ec2b ; relative offset = -1794
 f32d: mov  r8d eax
 f330: xor  ecx ecx
 f332: mov  rdx r15
 f335: mov  rsi r13
 f338: mov  edi 0xffffff9c
 f33d: mov  [rbp + 0xfffffd00] r10d
 f344: call 7700 ; relative offset = -31817
 f349: mov  r10d [rbp + 0xfffffd00]
 f350: cmp  r10d 0x03
 f354: jz f373 ; relative offset = 29
 f356: UNKNOWN-INSTRUCTION
 f357: ror  [rdi] 0x88
 f35a: UNKNOWN-INSTRUCTION
 f35e: mov  edx [rbx + 48]
 f361: and  edx 0x0000f000
 f367: cmp  edx 0x00004000
 f36d: jnz ec2b ; relative offset = -1864
 f373: UNKNOWN-INSTRUCTION
 f374: ror  [rdi] 0x85
 f377: and  eax 0x44000006
 f37c: movzx  edi [rbp + 0xfffffd0c]
 f383: jmp ec53 ; relative offset = -1845
 f388: nop  [0x00000000 + rax + rax * 1]
 f390: movzx  rdx [r12]
 f395: UNKNOWN-INSTRUCTION
 f398: jz f610 ; relative offset = 626
 f39e: movzx  r8 [r15]
 f3a2: mov  r13 r12
 f3a5: UNKNOWN-INSTRUCTION
 f3a7: ror  [rdi] 0x85
 f3aa: cmp  edx 0xff
 f3ad: dec  [239 + rcx + rcx * 4]
 f3b1: call 12520 ; relative offset = 12650
 f3b6: mov  [rbx + 16] rax
 f3ba: UNKNOWN-INSTRUCTION
 f3bc: ror  [rdi] 0x85
 f3bf: UNKNOWN-INSTRUCTION
 f3c0: clc 
 f3c1: UNKNOWN-INSTRUCTION
 f3c2: push  [rcx]
 f3c4: UNKNOWN-INSTRUCTION
 f3c5: mov  edx 0x00000005
 f3ca: lea  rsi 
 f3d1: call 4860 ; relative offset = -43894
 f3d6: movzx  edi [rbp + 0xfffffd0c]
 f3dd: mov  rdx r13
 f3e0: mov  rsi rax
 f3e3: call a160 ; relative offset = -21128
 f3e8: jmp ebf9 ; relative offset = -2036
 f3ed: nop  [rax]
 f3f0: mov  rcx [rbx + 32]
 f3f4: mov  [rbp + 0xfffffd44] 0x00
 f3fb: lea  rdi 
 f402: mov  rax 0xcccccccccccccccd
 f40c: nop  [rax + 0]
 f410: mov  rax rcx
 f413: sub  rdi 0x01
 f417: mul  rsp
 f41a: mov  rax rcx
 f41d: shr  rdx 0x03
 f421: lea  rsi 
 f425: add  rsi rsi
 f428: sub  rax rsi
 f42b: add  eax 0x30
 f42e: mov  [rdi] al
 f430: mov  rax rcx
 f433: mov  rcx rdx
 f436: cmp  rax 0x09
 f43a: jnbe  0xd4
 f43c: call 4880 ; relative offset = -43969
 f441: UNKNOWN-INSTRUCTION
 f442: add  eax 0x00012e61
 f447: jng ecf8 ; relative offset = -1877
 f44d: mov  [RIP + 0x00012e55] eax
 f453: jmp ecf8 ; relative offset = -1888
 f458: nop  [0x00000000 + rax + rax * 1]
 f460: call 4c90 ; relative offset = -42965
 f465: mov  rsi r14
 f468: mov  edi eax
 f46a: call a370 ; relative offset = -20735
 f46f: UNKNOWN-INSTRUCTION
 f470: ror  [rdi] 0x89
 f473: UNKNOWN-INSTRUCTION
 f476: jmp  rax
 f478: UNKNOWN-INSTRUCTION
 f479: push  edx
 f47a: UNKNOWN-INSTRUCTION
 f47b: dec  [rcx + 137]
 f47e: UNKNOWN-INSTRUCTION
 f47f: mov  eax [rax]
 f481: cmp  eax 0x5f
 f484: UNKNOWN-INSTRUCTION
 f486: rol  [rbx + 0x940f3df8] 0xc2
 f48d: sub  eax 0x16
 f490: or  edx ecx
 f492: and  eax 0xef
 f495: jz f49b ; relative offset = 4
 f497: UNKNOWN-INSTRUCTION
 f498: leave 
 f499: jz f4a6 ; relative offset = 11
 f49b: mov  rax [rbx + 24]
 f49f: mov  [RIP + 0x00012e7a] rax
 f4a6: lea  rax 
 f4ad: mov  [rbx + 0x000000b0] rax
 f4b4: UNKNOWN-INSTRUCTION
 f4b5: ror  [rdi] cl
 f4b7: UNKNOWN-INSTRUCTION
 f4b9: add  eax [rax]
 f4bb: UNKNOWN-INSTRUCTION
 f4bc: mov  r10d [RIP + 0x00012e49]
 f4c3: UNKNOWN-INSTRUCTION
 f4c5: ror  [rdi] cl
 f4c7: UNKNOWN-INSTRUCTION
 f4c8: movsb 
 f4c9: add  unknown 0x00
 f4cb: UNKNOWN-INSTRUCTION
 f4cc: mov  [rbx + 0x000000bc] 0x00000000
 f4d6: mov  eax [rbx + 48]
 f4d9: and  eax 0x0000f000
 f4de: UNKNOWN-INSTRUCTION
 f4e0: mov  unknown 
 f4e1: UNKNOWN-INSTRUCTION
 f4e3: jnz eca7 ; relative offset = -2114
 f4e9: mov  r9d [RIP + 0x00012e1c]
 f4f0: UNKNOWN-INSTRUCTION
 f4f2: leave 
 f4f3: jz f1e8 ; relative offset = -785
 f4f9: jmp f1db ; relative offset = -803
 f4fe: UNKNOWN-INSTRUCTION
 f4ff: nop 
 f500: mov  eax 0x00000190
 f505: mul  rsp
 f508: UNKNOWN-INSTRUCTION
 f509: nop 
 f50a: ret  0xb60f
 f50d: ror  [rax + 133] cl
 f510: ror  [rdi] 0x88
 f513: push  ecx
 f514: add  unknown 0x00
 f516: UNKNOWN-INSTRUCTION
 f519: ror  [rdi] cl
 f51b: UNKNOWN-INSTRUCTION
 f51d: add  unknown 0x00
 f51f: UNKNOWN-INSTRUCTION
 f520: lea  rax 
 f525: lea  rax 
 f529: sal  rax 0x04
 f52d: mov  rdx rax
 f530: jnz f53b ; relative offset = 9
 f532: UNKNOWN-INSTRUCTION
 f534: dec  [rdi]
 f536: UNKNOWN-INSTRUCTION
 f537: jnl f53e ; relative offset = 5
 f539: UNKNOWN-INSTRUCTION
 f53b: mov  rsi rdx
 f53e: mov  [rbp + 0xfffffd00] rdx
 f545: call 4b10 ; relative offset = -43578
 f54a: mov  rdi rax
 f54d: UNKNOWN-INSTRUCTION
 f550: jnz f562 ; relative offset = 16
 f552: mov  rdx [rbp + 0xfffffd00]
 f559: UNKNOWN-INSTRUCTION
 f55b: ror  [rdi] cl
 f55d: UNKNOWN-INSTRUCTION
 f55f: add  unknown 0x00
 f561: UNKNOWN-INSTRUCTION
 f562: lea  rcx 
 f566: mov  [RIP + 0x00013063] rdi
 f56d: mov  [RIP + 0x00013064] rcx
 f574: jmp eb60 ; relative offset = -2585
 f579: nop  [rax + 0x00000000]
 f580: mov  rdi r12
 f583: call a3f0 ; relative offset = -20888
 f588: movzx  edx al
 f58b: mov  [rbx + 0x000000c4] edx
 f591: UNKNOWN-INSTRUCTION
 f592: ror  [rdi] 0x84
 f595: sub  esi esi
 f597: UNKNOWN-INSTRUCTION
 f598: inc  esi
 f59a: add  eax 0x00012d0c
 f59f: add  ecx ebp
 f5a1: sbb  eax 0x0ffffff6
 f5a6: UNKNOWN-INSTRUCTION
 f5a8: mov  [RIP + 0x00012cf2] eax
 f5ae: jmp ef46 ; relative offset = -1645
 f5b3: nop  [0 + rax + rax * 1]
 f5b8: mov  r8 [RIP + 0x00012ab9]
 f5bf: mov  rdi [rbx + 72]
 f5c3: lea  rsi 
 f5ca: mov  ecx 0x00000001
 f5cf: mov  edx [RIP + 0x00012e9b]
 f5d5: call cd20 ; relative offset = -10426
 f5da: mov  rdi rax
 f5dd: mov  r14 rax
 f5e0: call 4880 ; relative offset = -44389
 f5e5: mov  rdi r14
 f5e8: mov  rsi rax
 f5eb: call 12c20 ; relative offset = 13872
 f5f0: UNKNOWN-INSTRUCTION
 f5f1: add  eax 0x00012e3a
 f5f6: jnl ece9 ; relative offset = -2323
 f5fc: mov  [RIP + 0x00012e2e] eax
 f602: jmp ece9 ; relative offset = -2334
 f607: UNKNOWN-INSTRUCTION
 f608: nop  [0x00000000 + rax + rax * 1]
 f610: mov  r13 r12
 f613: jmp f3ae ; relative offset = -618
 f618: nop  [0x00000000 + rax + rax * 1]
 f620: UNKNOWN-INSTRUCTION
 f621: rol  [rcx + 15] 0x95
 f625: UNKNOWN-INSTRUCTION
 f626: call 4710 ; relative offset = -44827
 f62b: mov  r15 rax
 f62e: mov  rax [RIP + 0x00012ce3]
 f635: UNKNOWN-INSTRUCTION
 f639: jz fb00 ; relative offset = 1217
 f63f: mov  [r15] 0x00000000
 f646: mov  eax [rbx + 48]
 f649: and  eax 0x0000f000
 f64e: UNKNOWN-INSTRUCTION
 f650: mov  unknown 
 f651: UNKNOWN-INSTRUCTION
 f653: jnz f9d0 ; relative offset = 887
 f659: UNKNOWN-INSTRUCTION
 f65c: jz f4cc ; relative offset = -406
 f662: mov  [rbx + 0x000000bc] 0x00000001
 f66c: mov  [RIP + 0x00012dd9] 0x01
 f673: jmp f4d6 ; relative offset = -418
 f678: nop  [0x00000000 + rax + rax * 1]
 f680: and  ecx 0x00000fff
 f686: sub  rsp rcx
 f689: UNKNOWN-INSTRUCTION
 f68b: leave 
 f68c: jnz f980 ; relative offset = 750
 f692: lea  r10 
 f697: movzx  rdi [r15 + 1]
 f69c: and  r10 0xf0
 f6a0: mov  r13 r10
 f6a3: UNKNOWN-INSTRUCTION
 f6a5: clc 
 f6a6: UNKNOWN-INSTRUCTION
 f6a7: jz f708 ; relative offset = 95
 f6a9: mov  rcx r15
 f6ac: jmp f6ba ; relative offset = 12
 f6ae: UNKNOWN-INSTRUCTION
 f6af: nop 
 f6b0: mov  r8d edi
 f6b3: movzx  edi [rcx + 1]
 f6b7: mov  r10 rax
 f6ba: lea  rax 
 f6be: add  rcx 0x01
 f6c2: mov  [rax + 255] r8b
 f6c6: UNKNOWN-INSTRUCTION
 f6c8: push  [rbp + 229]
 f6cb: UNKNOWN-INSTRUCTION
 f6ce: jnb f6dd ; relative offset = 13
 f6d0: UNKNOWN-INSTRUCTION
 f6d1: jns f6d2 ; relative offset = -1
 f6d3: UNKNOWN-INSTRUCTION
 f6d4: jz f6dd ; relative offset = 7
 f6d6: mov  [rax] 0x2f
 f6d9: lea  rax 
 f6dd: mov  rcx r12
 f6e0: UNKNOWN-INSTRUCTION
 f6e2: jz f6f9 ; relative offset = 21
 f6e4: nop  [rax + 0]
 f6e8: add  rcx 0x01
 f6ec: mov  [rax] dl
 f6ee: add  rax 0x01
 f6f2: movzx  edx [rcx]
 f6f5: UNKNOWN-INSTRUCTION
 f6f7: jnz f6e8 ; relative offset = -17
 f6f9: mov  [rax] 0x00
 f6fc: jmp ebf0 ; relative offset = -2833
 f701: nop  [rax + 0x00000000]
 f708: mov  rax r10
 f70b: UNKNOWN-INSTRUCTION
 f70d: push  [RBP + 235 + rcx * 8]
 f711: UNKNOWN-INSTRUCTION
 f713: nop  [0 + rax + rax * 1]
 f718: UNKNOWN-INSTRUCTION
 f719: mov  ebp 0xfffffd0c
 f71e: UNKNOWN-INSTRUCTION
 f71f: mov  edx 0x00000003
 f724: jz ecb7 ; relative offset = -2675
 f72a: UNKNOWN-INSTRUCTION
 f72e: add  [rax] eax
 f730: add  [rcx] ebx
 f732: rol  [rbx + 0xc28306e2] cl
 f738: add  ebp ecx
 f73a: jns f731 ; relative offset = -11
 f73c: UNKNOWN-INSTRUCTION
 f73d: jmp  [rsi + 144]
 f740: mov  esi 0x00000001
 f746: mov  rdi r15
 f749: call 4880 ; relative offset = -44750
 f74e: lea  rdx 
 f753: mov  rdi rdx
 f756: mov  [rbp + 0xfffffd00] rdx
 f75d: call 4690 ; relative offset = -45266
 f762: mov  r10 rax
 f765: UNKNOWN-INSTRUCTION
 f767: ror  [rdi] 0x84
 f76a: UNKNOWN-INSTRUCTION
 f76b: add  [rax] eax
 f76d: UNKNOWN-INSTRUCTION
 f770: jnge f7a7 ; relative offset = 53
 f772: jmp  [rdi]
 f774: jz f77a ; relative offset = 4
 f776: add  r14 0x01
 f77a: mov  rdi r10
 f77d: mov  rdx r14
 f780: mov  rsi r13
 f783: mov  [rbp + 0xfffffd00] r10
 f78a: call 4b20 ; relative offset = -44143
 f78f: mov  rsi r15
 f792: mov  rdi rax
 f795: call 4750 ; relative offset = -45130
 f79a: mov  r10 [rbp + 0xfffffd00]
 f7a1: mov  r8d [rbx + 0x000000c4]
 f7a8: UNKNOWN-INSTRUCTION
 f7aa: ror  [rdi] 0x84
 f7ad: UNKNOWN-INSTRUCTION
 f7ae: add  eax [rax]
 f7b0: UNKNOWN-INSTRUCTION
 f7b1: cmp  [RIP + 0x00012b4c] 0x01
 f7b8: jnbe  0x0d
 f7ba: UNKNOWN-INSTRUCTION
 f7bc: mov  [rdi] bpl
 f7be: add  [rax] eax
 f7c0: UNKNOWN-INSTRUCTION
 f7c1: jz f2a8 ; relative offset = -1311
 f7c7: xor  ecx ecx
 f7c9: mov  rsi r10
 f7cc: mov  eax 0x00000002
 f7d2: mov  edi 0xffffff9c
 f7d7: lea  rdx 
 f7de: mov  [rbp + 0xfffffd00] r10
 f7e5: call 7700 ; relative offset = -33002
 f7ea: mov  r10 [rbp + 0xfffffd00]
 f7f1: UNKNOWN-INSTRUCTION
 f7f2: ror  [rdi] 0x85
 f7f5: scasw 
 f7f6: UNKNOWN-INSTRUCTION
 f7f8: dec  [rbx + 0xfffd4885]
 f7fe: inc  esi
 f800: cmp  [rcx + 0x01000000] 0x89
 f807: sub  [0x97e90000 + rax + rax * 1] 0xfa
 f80f: UNKNOWN-INSTRUCTION
 f810: dec  [rdi]
 f812: UNKNOWN-INSTRUCTION
 f813: add  [rax] 0x00
 f816: UNKNOWN-INSTRUCTION
 f818: mov  edi [rbx + 52]
 f81b: call e560 ; relative offset = -4800
 f820: UNKNOWN-INSTRUCTION
 f821: add  eax 0x00012c16
 f826: jng ef25 ; relative offset = -2311
 f82c: mov  [RIP + 0x00012c0a] eax
 f832: jmp ef25 ; relative offset = -2322
 f837: UNKNOWN-INSTRUCTION
 f838: nop  [0x00000000 + rax + rax * 1]
 f840: UNKNOWN-INSTRUCTION
 f842: push  ebp
 f843: sub  unknown 0x01
 f845: UNKNOWN-INSTRUCTION
 f847: mov  r8d [rbx + 56]
 f84b: jz fa70 ; relative offset = 543
 f851: mov  rdi r15
 f854: mov  edx 0x00000015
 f859: mov  esi 0x00000001
 f85e: xor  eax eax
 f860: lea  rcx 
 f867: call 4ce0 ; relative offset = -43916
 f86c: mov  rdi r15
 f86f: call 4880 ; relative offset = -45044
 f874: UNKNOWN-INSTRUCTION
 f875: add  eax 0x00012bc6
 f87a: jnl ef18 ; relative offset = -2408
 f880: mov  [RIP + 0x00012bba] eax
 f886: jmp ef18 ; relative offset = -2419
 f88b: nop  [0 + rax + rax * 1]
 f890: mov  edi [rbx + 52]
 f893: call e560 ; relative offset = -4920
 f898: UNKNOWN-INSTRUCTION
 f899: add  eax 0x00012ba6
 f89e: jng ef0b ; relative offset = -2457
 f8a4: mov  [RIP + 0x00012b9a] eax
 f8aa: jmp ef0b ; relative offset = -2468
 f8af: nop 
 f8b0: mov  [rbx + 0x000000bc] 0x00000000
 f8ba: lea  rdx 
 f8c1: mov  rsi r13
 f8c4: xor  edi edi
 f8c6: mov  rax 0x0400000000000000
 f8d0: mov  [rbp + 0xfffffd30] 0x00000003
 f8db: mov  [rbp + 0xfffffd38] rax
 f8e2: mov  [rbp + 0xfffffd40] 0x00000000
 f8ed: mov  [rbp + 0xfffffd48] 0x00000000
 f8f8: mov  [rbp + 0xfffffd50] 0x00000000
 f903: mov  [rbp + 0xfffffd58] 0x00000000
 f90e: mov  [rbp + 0xfffffd60] 0x00000000
 f919: call 14900 ; relative offset = 20450
 f91e: mov  esi [r15]
 f921: lea  rdx 
 f928: xor  edi edi
 f92a: mov  rcx rax
 f92d: xor  eax eax
 f92f: call 4ba0 ; relative offset = -44436
 f934: jmp f4d6 ; relative offset = -1123
 f939: nop  [rax + 0x00000000]
 f940: mov  edx 0x00000041
 f945: UNKNOWN-INSTRUCTION
 f948: jnb ee10 ; relative offset = -2879
 f94f: jmp ed77 ; relative offset = -3037
 f954: nop  [rax + 0]
 f958: mov  rdx [rbp + 0xfffffd00]
 f95f: UNKNOWN-INSTRUCTION
 f961: ror  [rdi] cl
 f963: UNKNOWN-INSTRUCTION
 f967: jmp  rax
 f969: UNKNOWN-INSTRUCTION
 f96a: in  unknown 0xff
 f96c: dec  [rdi]
 f96e: UNKNOWN-INSTRUCTION
 f970: xor  r14d r14d
 f973: jmp f62e ; relative offset = -842
 f978: nop  [0x00000000 + rax + rax * 1]
 f980: or  [248 + rsp + rcx * 1] 0x00
 f986: jmp f692 ; relative offset = -761
 f98b: nop  [0 + rax + rax * 1]
 f990: call 4710 ; relative offset = -45701
 f995: cmp  [rax] 0x02
 f998: jz ec2b ; relative offset = -3443
 f99e: UNKNOWN-INSTRUCTION
 f99f: nop 
 f9a0: mov  edx 0x00000005
 f9a5: lea  rsi 
 f9ac: xor  edi edi
 f9ae: call 4860 ; relative offset = -45395
 f9b3: mov  rdx r13
 f9b6: mov  edi 0x00000001
 f9bb: xor  r13d r13d
 f9be: mov  rsi rax
 f9c1: call a160 ; relative offset = -22630
 f9c6: jmp ed0b ; relative offset = -3264
 f9cb: nop  [0 + rax + rax * 1]
 f9d0: xor  ecx ecx
 f9d2: xor  edx edx
 f9d4: lea  rsi 
 f9db: mov  rdi r13
 f9de: call 4c00 ; relative offset = -44515
 f9e3: UNKNOWN-INSTRUCTION
 f9e5: ror  [rdi] 0x88
 f9e8: jp f9eb ; relative offset = 1
 f9ea: UNKNOWN-INSTRUCTION
 f9ec: jz fbf1 ; relative offset = 511
 f9f2: mov  [rbx + 0x000000bc] 0x00000002
 f9fc: mov  [RIP + 0x00012a49] 0x01
 fa03: jmp f4d6 ; relative offset = -1330
 fa08: nop  [0x00000000 + rax + rax * 1]
 fa10: xor  r13d r13d
 fa13: jmp ecf8 ; relative offset = -3360
 fa18: nop  [0x00000000 + rax + rax * 1]
 fa20: UNKNOWN-INSTRUCTION
 fa22: loope fa4c ; relative offset = 40
 fa24: add  [rax] eax
 fa26: UNKNOWN-INSTRUCTION
 fa27: jz ed50 ; relative offset = -3293
 fa2d: mov  edi 0x00000013
 fa32: call c120 ; relative offset = -14615
 fa37: UNKNOWN-INSTRUCTION
 fa38: ror  [rdi] 0x85
 fa3b: UNKNOWN-INSTRUCTION
 fa3f: mov  edi 0x00000012
 fa44: call c120 ; relative offset = -14633
 fa49: UNKNOWN-INSTRUCTION
 fa4a: ror  [rdi] 0x85
 fa4d: mov  edi 0xbffffff3
 fa52: adc  unknown 0x00
 fa54: UNKNOWN-INSTRUCTION
 fa56: call c120 ; relative offset = -14651
 fa5b: UNKNOWN-INSTRUCTION
 fa5c: ror  [rdi] 0x85
 fa5f: lodsw 
 fa60: UNKNOWN-INSTRUCTION
 fa62: jmp  rcx
 fa64: call 1000fa5b ; relative offset = 268435442
 fa69: UNKNOWN-INSTRUCTION
 fa70: mov  edi r8d
 fa73: mov  [rbp + 0xfffffd0c] r8d
 fa7a: call e600 ; relative offset = -5247
 fa7f: mov  r8d [rbp + 0xfffffd0c]
 fa86: UNKNOWN-INSTRUCTION
 fa88: ror  [rcx + 137] 0xc6
 fa8c: jz f851 ; relative offset = -577
 fa92: mov  rdi rax
 fa95: call 4880 ; relative offset = -45594
 fa9a: mov  rdi r14
 fa9d: mov  rsi rax
 faa0: call 12c20 ; relative offset = 12667
 faa5: xor  edx edx
 faa7: UNKNOWN-INSTRUCTION
 faa8: ror  [rdi] 0x48
 faab: ret  0xc3e9
 faae: UNKNOWN-INSTRUCTION
 fab0: dec  [rdi]
 fab2: UNKNOWN-INSTRUCTION
 fab3: add  [rax] 0x00
 fab6: UNKNOWN-INSTRUCTION
 fab8: call 4680 ; relative offset = -46141
 fabd: xor  edi edi
 fabf: jmp f562 ; relative offset = -1378
 fac4: nop  [rax + 0]
 fac8: mov  rdi [rbx + 8]
 facc: mov  [rbp + 0xfffffd00] r10
 fad3: call a3f0 ; relative offset = -22248
 fad8: mov  r10 [rbp + 0xfffffd00]
 fadf: UNKNOWN-INSTRUCTION
 fae0: ror  [rdi] 0x84
 fae3: ret  0xfffc
 fae6: inc  edi
 fae8: add  esp 0x00
 faeb: UNKNOWN-INSTRUCTION
 faf0: jmp  rcx
 faf2: mov  ebx 0x66fffffc
 faf7: UNKNOWN-INSTRUCTION
 faf8: nop  [0x00000000 + rax + rax * 1]
 fb00: mov  [r15] 0x0000005f
 fb07: jmp f659 ; relative offset = -1203
 fb0c: nop  [rax + 0]
 fb10: mov  edx 0x00000005
 fb15: lea  rsi 
 fb1c: xor  edi edi
 fb1e: call 4860 ; relative offset = -45763
 fb23: movzx  edi [rbp + 0xfffffd0c]
 fb2a: mov  rdx r13
 fb2d: mov  rsi rax
 fb30: call a160 ; relative offset = -22997
 fb35: mov  r15 [rbx + 8]
 fb39: UNKNOWN-INSTRUCTION
 fb3b: dec  [rdi]
 fb3d: UNKNOWN-INSTRUCTION
 fb3e: ret  0xfff6
 fb41: jmp  rcx
 fb43: pop  esi
 fb44: idiv  edi
 fb46: inc  [rcx + 15]
 fb49: mov  sil 0x14
 fb4b: and  unknown 0x80
 fb4d: UNKNOWN-INSTRUCTION
 fb4f: jnz ee21 ; relative offset = -3380
 fb55: call 7390 ; relative offset = -34762
 fb5a: lea  r15 
 fb5e: mov  r13 r12
 fb61: jmp f0ea ; relative offset = -2684
 fb66: mov  eax [r15]
 fb69: cmp  eax 0x3d
 fb6c: jz fc0a ; relative offset = 152
 fb72: cmp  eax 0x26
 fb75: jz fbd6 ; relative offset = 95
 fb77: jnle fbd1 ; relative offset = 88
 fb79: cmp  eax 0x10
 fb7c: jz fbda ; relative offset = 92
 fb7e: cmp  eax 0x16
 fb81: jz fbd6 ; relative offset = 83
 fb83: mov  ecx 0x00000001
 fb88: lea  edx 
 fb8b: and  edx 0xef
 fb8e: jz fb95 ; relative offset = 5
 fb90: cmp  eax 0x5f
 fb93: jnz fba0 ; relative offset = 11
 fb95: mov  rax [rbx + 24]
 fb99: mov  [RIP + 0x00012778] rax
 fba0: movzx  eax [RIP + 0x000128a5]
 fba7: xor  edx edx
 fba9: UNKNOWN-INSTRUCTION
 fbab: div  [rbp + 55]
 fbae: UNKNOWN-INSTRUCTION
 fbaf: nop 
 fbb0: mov  [rbx + 0x000000bc] edx
 fbb6: mov  [RIP + 0x00012890] al
 fbbc: UNKNOWN-INSTRUCTION
 fbbd: leave 
 fbbe: jz f4d6 ; relative offset = -1774
 fbc4: call 4710 ; relative offset = -46265
 fbc9: mov  r15 rax
 fbcc: jmp f8ba ; relative offset = -791
 fbd1: cmp  eax 0x5f
 fbd4: jnz fb83 ; relative offset = -83
 fbd6: xor  ecx ecx
 fbd8: jmp fb95 ; relative offset = -69
 fbda: UNKNOWN-INSTRUCTION
 fbdd: jz f4cc ; relative offset = -1815
 fbe3: xor  ecx ecx
 fbe5: mov  eax 0x00000001
 fbea: mov  edx 0x00000001
 fbef: jmp fbb0 ; relative offset = -65
 fbf1: mov  eax [rbx + 48]
 fbf4: and  eax 0x0000f000
 fbf9: UNKNOWN-INSTRUCTION
 fbfe: jz fc1d ; relative offset = 29
 fc00: mov  eax [r15]
 fc03: xor  ecx ecx
 fc05: jmp fb88 ; relative offset = -130
 fc0a: mov  eax [rbx + 48]
 fc0d: and  eax 0x0000f000
 fc12: UNKNOWN-INSTRUCTION
 fc17: jnz f659 ; relative offset = -1476
 fc1d: xor  ecx ecx
 fc1f: xor  edx edx
 fc21: lea  rsi 
 fc28: mov  rdi r13
 fc2b: call 4c00 ; relative offset = -45104
 fc30: UNKNOWN-INSTRUCTION
 fc32: sar  [rax + 41] 0x0f
 fc36: UNKNOWN-INSTRUCTION
 fc37: mov  dil 0xfd
 fc39: UNKNOWN-INSTRUCTION
 fc3a: jmp  rbx
 fc3c: ret 
 fc3d: call 4710 ; relative offset = -46386
 fc42: mov  [rax] 0x0000005f
 fc48: mov  r15 rax
 fc4b: lea  rax 
 fc52: mov  [rbx + 0x000000b0] rax
 fc59: jmp f4bc ; relative offset = -1954
 fc5e: mov  eax [r15]
 fc61: cmp  eax 0x3d
 fc64: jnz fb72 ; relative offset = -248
 fc6a: jmp f659 ; relative offset = -1558
 fc6f: call 4890 ; relative offset = -46052
 fc74: UNKNOWN-INSTRUCTION
 fc77: nop  [0x00000000 + rax + rax * 1]
 fc7f: nop 
 fc80: UNKNOWN-INSTRUCTION
 fc86: push  eax
 fc87: dec  [rax + 137]
 fc8a: UNKNOWN-INSTRUCTION
 fc8c: mov  [rdi + 64] r8
 fc90: jmp 7130 ; relative offset = -35685
 fc95: UNKNOWN-INSTRUCTION
 fc98: nop  [0x00000000 + rax + rax * 1]
 fca0: UNKNOWN-INSTRUCTION
 fca6: push  eax
 fca7: add  [rax + 137] ecx
 fcaa: UNKNOWN-INSTRUCTION
 fcac: mov  [rdi + 64] r8
 fcb0: mov  [rdi + 72] r9
 fcb4: jmp 7130 ; relative offset = -35721
 fcb9: nop  [rax + 0x00000000]
 fcc0: UNKNOWN-INSTRUCTION
 fcc4: push  esi
 fcc6: xor  ecx ecx
 fcc8: push  ebp
 fcca: push  esp
 fccc: push  ebp
 fccd: push  ebx
 fcce: mov  rbx rdi
 fcd1: mov  r13 [rdi + 24]
 fcd5: sub  r13 [rdi + 16]
 fcd9: mov  rdx [rbx]
 fcdc: add  rsi r13
 fcdf: mov  rax r13
 fce2: mov  rbp [rdi + 8]
 fce6: UNKNOWN-INSTRUCTION
 fce8: ror  [rax + 3] 0x77
 fcec: UNKNOWN-INSTRUCTION
 fcf1: shr  rax 0x03
 fcf5: UNKNOWN-INSTRUCTION
 fcf8: lea  rax 
 fcfd: UNKNOWN-INSTRUCTION
 fd0a: leave 
 fd0b: jnz fddf ; relative offset = 206
 fd11: movzx  rdi dil
 fd15: UNKNOWN-INSTRUCTION
 fd17: dec  [rdi]
 fd19: UNKNOWN-INSTRUCTION
 fd1a: rol  [rax] 0x00
 fd1d: UNKNOWN-INSTRUCTION
 fd1e: mov  rax [rbx + 56]
 fd22: mov  r14 rsi
 fd25: test  [rbx + 80] 0x01
 fd29: jnz fda8 ; relative offset = 125
 fd2b: mov  rdi rsi
 fd2e: call  rdx
 fd2f: ror  [rcx + 137] 
 fd32: UNKNOWN-INSTRUCTION
 fd35: in  unknown 0x0f
 fd37: UNKNOWN-INSTRUCTION
 fd3c: lea  rax 
 fd40: mov  [rbx + 8] r12
 fd44: mov  rsi [rbx + 16]
 fd48: mov  rdx r13
 fd4b: mov  [8 + r12] rbp
 fd50: mov  [rbx + 32] rax
 fd54: mov  [r12] rax
 fd58: mov  rax [rbx + 48]
 fd5c: lea  r14 
 fd61: not  rdx
 fd64: and  r14 rax
 fd67: mov  rdi r14
 fd6a: call 4a50 ; relative offset = -45855
 fd6f: movzx  edx [rbx + 80]
 fd73: test  dl 0x02
 fd76: jnz fd8d ; relative offset = 21
 fd78: mov  rax [rbx + 48]
 fd7c: lea  rcx 
 fd81: not  rdx
 fd84: and  rax rcx
 fd87: UNKNOWN-INSTRUCTION
 fd8b: jz fdb8 ; relative offset = 43
 fd8d: mov  [rbx + 16] r14
 fd91: add  r14 r13
 fd94: mov  [rbx + 24] r14
 fd98: UNKNOWN-INSTRUCTION
 fd9a: push  eax
 fd9b: UNKNOWN-INSTRUCTION
 fd9c: pop  ebx
 fd9d: pop  ebp
 fd9e: pop  esp
 fda0: pop  ebp
 fda2: pop  esi
 fda4: ret 
 fda5: nop  [rax]
 fda8: mov  rdi [rbx + 72]
 fdac: call  rdx
 fdad: ror  [rcx + 137] 
 fdb0: UNKNOWN-INSTRUCTION
 fdb1: jmp fd33 ; relative offset = -128
 fdb3: nop  [0 + rax + rax * 1]
 fdb8: mov  rax [rbp + 8]
 fdbc: and  edx 0x01
 fdbf: mov  [8 + r12] rax
 fdc4: mov  rax [rbx + 64]
 fdc8: jz fdd8 ; relative offset = 14
 fdca: mov  rdi [rbx + 72]
 fdce: mov  rsi rbp
 fdd1: call  rdx
 fdd2: shr  bpl 
 fdd4: mov  eax 0x48001f0f
 fdd9: mov  edi ebp
 fddb: call  rdx
 fddc: shr  bpl 
 fdde: scasb 
 fddf: lea  rax 
 fde6: call  rdx
 fde7: UNKNOWN-INSTRUCTION
 fde8: nop  [0x00000000 + rax + rax * 1]
 fdf0: push  edi
 fdf2: push  esi
 fdf4: push  ebp
 fdf6: push  esp
 fdf8: push  ebp
 fdf9: push  ebx
 fdfa: sub  esp 0x00001000
 fe01: or  [rsp] 0x00
 fe06: sub  esp 0x00001000
 fe0d: or  [rsp] 0x00
 fe12: sub  rsp 0x58
 fe16: mov  r14 [0x00002090 + rsp]
 fe1e: mov  r12 rdi
 fe21: mov  r13 rcx
 fe24: mov  r15d r8d
 fe27: mov  ecx edx
 fe29: UNKNOWN-INSTRUCTION
 fe2a: mov  rax 0x00000028
 fe32: mov  [0x00002048 + rsp] rax
 fe3a: xor  eax eax
 fe3c: xor  r8d r8d
 fe3f: lea  rax 
 fe44: mov  rdx rsi
 fe47: mov  rbx r9
 fe4a: lea  rdi 
 fe4f: lea  r9 
 fe54: mov  rsi r12
 fe57: mov  [16 + rsp] rax
 fe5c: mov  [56 + rsp] rax
 fe61: call 143d0 ; relative offset = 17770
 fe66: UNKNOWN-INSTRUCTION
 fe67: jnge fe8d ; relative offset = 36
 fe69: UNKNOWN-INSTRUCTION
 fe6b: mov  rbp rax
 fe6e: mov  rax [RIP + 0x00012133]
 fe75: mov  [8 + rsp] rax
 fe7a: jz fe85 ; relative offset = 9
 fe7c: UNKNOWN-INSTRUCTION
 fe7e: dec  [rdi]
 fe80: UNKNOWN-INSTRUCTION
 fe81: add  al [r8]
 fe84: UNKNOWN-INSTRUCTION
 fe87: in  eax dx
 fe88: jz febf ; relative offset = 53
 fe8a: mov  edi 0x00000004
 fe8f: call c120 ; relative offset = -15732
 fe94: lea  r8 
 fe9b: lea  r15 
 fe9f: UNKNOWN-INSTRUCTION
 fea0: ror  [rdi] 0x85
 fea3: UNKNOWN-INSTRUCTION
 fea4: add  al [rax]
 fea6: UNKNOWN-INSTRUCTION
 fea7: mov  rdi r8
 feaa: call c2a0 ; relative offset = -15375
 feaf: mov  rdi r13
 feb2: call c2a0 ; relative offset = -15383
 feb7: mov  rdi r15
 feba: call c2a0 ; relative offset = -15391
 febf: UNKNOWN-INSTRUCTION
 fec2: jz 10100 ; relative offset = 568
 fec8: movzx  r13 [RIP + 0x000123dd]
 fed0: UNKNOWN-INSTRUCTION
 fed2: in  eax dx
 fed3: jnz 10078 ; relative offset = 415
 fed9: mov  r10 rbp
 fedc: xor  r9d r9d
 fedf: mov  rdi [RIP + 0x000126fa]
 fee6: xor  esi esi
 fee8: mov  [40 + rsp] r10
 feed: mov  [32 + rsp] r9
 fef2: call e0c0 ; relative offset = -7735
 fef7: mov  esi 0x00000001
 fefc: mov  rdi r14
 feff: mov  r15 rax
 ff02: call e0c0 ; relative offset = -7751
 ff07: lea  rcx 
 ff0e: mov  rdx r15
 ff11: lea  rsi 
 ff18: UNKNOWN-INSTRUCTION
 ff1b: mov  r8 rax
 ff1e: lea  rax 
 ff25: mov  edi 0x00000001
 ff2a: UNKNOWN-INSTRUCTION
 ff2e: xor  eax eax
 ff30: mov  [24 + rsp] r8
 ff35: call 4b40 ; relative offset = -46074
 ff3a: mov  rdi r15
 ff3d: call 4680 ; relative offset = -47298
 ff42: mov  rdi [24 + rsp]
 ff47: call 4680 ; relative offset = -47308
 ff4c: mov  r9 [32 + rsp]
 ff51: mov  r10 [40 + rsp]
 ff56: UNKNOWN-INSTRUCTION
 ff59: jz 10112 ; relative offset = 435
 ff5f: UNKNOWN-INSTRUCTION
 ff61: push  edx
 ff62: UNKNOWN-INSTRUCTION
 ff63: add  [rax] eax
 ff65: UNKNOWN-INSTRUCTION
 ff66: jz ff8c ; relative offset = 36
 ff68: mov  rdx [rbx + 24]
 ff6c: mov  rax [rbx + 32]
 ff70: sub  rax rdx
 ff73: cmp  rax 0x07
 ff77: jna 10160 ; relative offset = 483
 ff7d: mov  rax [RIP + 0x00012374]
 ff84: mov  [rdx] rax
 ff87: add  [rbx + 24] 0x08
 ff8c: mov  rax [8 + rsp]
 ff91: mov  rdi [56 + rsp]
 ff96: mov  rdx r10
 ff99: mov  esi 0x00000001
 ff9e: mov  rcx [rax]
 ffa1: add  rdi r9
 ffa4: call 4b00 ; relative offset = -46249
 ffa9: mov  rax [RIP + 0x00012348]
 ffb0: add  rax rbp
 ffb3: UNKNOWN-INSTRUCTION
 ffb7: add  [rax] eax
 ffb9: UNKNOWN-INSTRUCTION
 ffba: mov  [RIP + 0x00012337] rax
 ffc1: jz ffe0 ; relative offset = 29
 ffc3: mov  rcx [rbx + 24]
 ffc7: mov  rdx [rbx + 32]
 ffcb: sub  rdx rcx
 ffce: cmp  rdx 0x07
 ffd2: jna 10190 ; relative offset = 440
 ffd8: mov  [rcx] rax
 ffdb: add  [rbx + 24] 0x08
 ffe0: UNKNOWN-INSTRUCTION
 ffe2: div  [72 + rax + rcx * 2]
 ffe6: mov  ebx [8 + rsp]
 ffea: mov  edx 0x00000006
 ffef: mov  esi 0x00000001
 fff4: lea  rdi 
 fffb: mov  rcx [rbx]
 fffe: call 4b00 ; relative offset = -46339
 10003: UNKNOWN-INSTRUCTION
 10005: in  eax dx
 10006: jz 1002d ; relative offset = 37
 10008: mov  rax [56 + rsp]
 1000d: mov  rdi [rbx]
 10010: movzx  edx [255 + rax + rbp * 1]
 10015: mov  rax [rdi + 40]
 10019: UNKNOWN-INSTRUCTION
 1001d: jnb 101c0 ; relative offset = 413
 10023: lea  rcx 
 10027: mov  [rdi + 40] rcx
 1002b: mov  [rax] dl
 1002d: mov  rdi [56 + rsp]
 10032: UNKNOWN-INSTRUCTION
 10034: out  0x74 eax
 10036: or  unknown 0x48
 10038: UNKNOWN-INSTRUCTION
 10039: jnge 1005f ; relative offset = 36
 1003b: UNKNOWN-INSTRUCTION
 1003c: jz 10043 ; relative offset = 5
 1003e: call 4680 ; relative offset = -47555
 10043: movzx  eax [55 + rsp]
 10048: add  rax rbp
 1004b: mov  rdx [0x00002048 + rsp]
 10053: UNKNOWN-INSTRUCTION
 10054: sub  rdx 0x00000028
 1005c: jnz 101fc ; relative offset = 410
 10062: add  esp 0x00002058
 10069: pop  ebx
 1006a: pop  ebp
 1006b: pop  esp
 1006d: pop  ebp
 1006f: pop  esi
 10071: pop  edi
 10073: ret 
 10074: nop  [rax + 0]
 10078: movzx  r13 [RIP + 0x0001222c]
 10080: UNKNOWN-INSTRUCTION
 10082: in  eax dx
 10083: jz fed9 ; relative offset = -432
 10089: UNKNOWN-INSTRUCTION
 1008a: jnge 100b0 ; relative offset = 36
 1008c: UNKNOWN-INSTRUCTION
 1008e: jnz 101b0 ; relative offset = 284
 10094: mov  rax [56 + rsp]
 10099: lea  r10 
 1009d: movzx  edx [rax]
 100a0: mov  rax [8 + rsp]
 100a5: mov  rdi [rax]
 100a8: mov  rax [rdi + 40]
 100ac: UNKNOWN-INSTRUCTION
 100b0: jnb 101df ; relative offset = 297
 100b6: lea  rcx 
 100ba: mov  ecx 0x00000001
 100c0: mov  [rdi + 40] rcx
 100c4: mov  [rax] dl
 100c6: jmp fedf ; relative offset = -492
 100cb: nop  [0 + rax + rax * 1]
 100d0: mov  rdi [rax]
 100d3: mov  rax [rdi + 40]
 100d7: UNKNOWN-INSTRUCTION
 100db: jnb 101d0 ; relative offset = 239
 100e1: lea  rdx 
 100e5: mov  [rdi + 40] rdx
 100e9: mov  [rax] 0x20
 100ec: add  [RIP + 0x00012204] 0x01
 100f4: jmp fe85 ; relative offset = -628
 100f9: nop  [rax + 0x00000000]
 10100: mov  r10 rbp
 10103: xor  r9d r9d
 10106: xor  r13d r13d
 10109: UNKNOWN-INSTRUCTION
 1010c: jnz ff5f ; relative offset = -435
 10112: mov  rax [8 + rsp]
 10117: mov  rdi [56 + rsp]
 1011c: mov  rdx r10
 1011f: mov  esi 0x00000001
 10124: mov  rcx [rax]
 10127: add  rdi r9
 1012a: call 4b00 ; relative offset = -46639
 1012f: add  [RIP + 0x000121c2] rbp
 10136: jmp ffe0 ; relative offset = -347
 1013b: nop  [0 + rax + rax * 1]
 10140: mov  rdi r8
 10143: call c2a0 ; relative offset = -16040
 10148: mov  rdi r15
 1014b: call c2a0 ; relative offset = -16048
 10150: lea  r8 
 10154: jmp fea7 ; relative offset = -690
 10159: nop  [rax + 0x00000000]
 10160: mov  esi 0x00000008
 10165: mov  rdi rbx
 10168: mov  [32 + rsp] r10
 1016d: mov  [24 + rsp] r9
 10172: call fcc0 ; relative offset = -1207
 10177: mov  rdx [rbx + 24]
 1017b: mov  r10 [32 + rsp]
 10180: mov  r9 [24 + rsp]
 10185: jmp ff7d ; relative offset = -525
 1018a: UNKNOWN-INSTRUCTION
 1018b: nop  [0 + rax + rax * 1]
 10190: mov  esi 0x00000008
 10195: mov  rdi rbx
 10198: call fcc0 ; relative offset = -1245
 1019d: mov  rcx [rbx + 24]
 101a1: mov  rax [RIP + 0x00012150]
 101a8: jmp ffd8 ; relative offset = -469
 101ad: nop  [rax]
 101b0: mov  r10 rbp
 101b3: xor  r9d r9d
 101b6: xor  r13d r13d
 101b9: jmp fedf ; relative offset = -735
 101be: UNKNOWN-INSTRUCTION
 101bf: nop 
 101c0: movzx  esi dl
 101c3: call 4900 ; relative offset = -47304
 101c8: jmp 1002d ; relative offset = -416
 101cd: nop  [rax]
 101d0: mov  esi 0x00000020
 101d5: call 4900 ; relative offset = -47322
 101da: jmp 100ec ; relative offset = -243
 101df: movzx  esi dl
 101e2: mov  [24 + rsp] r10
 101e7: call 4900 ; relative offset = -47340
 101ec: mov  r10 [24 + rsp]
 101f1: mov  ecx 0x00000001
 101f7: jmp fedf ; relative offset = -797
 101fc: call 4890 ; relative offset = -47473
 10201: UNKNOWN-INSTRUCTION
 10204: nop  [0x00000000 + rax + rax * 1]
 1020c: nop  [rax + 0]
 10210: UNKNOWN-INSTRUCTION
 10214: push  edi
 10216: push  esi
 10218: push  ebp
 1021a: mov  r13 rdx
 1021d: push  esp
 1021f: mov  r12d esi
 10222: push  ebp
 10223: push  ebx
 10224: mov  rbx rdi
 10227: sub  rsp 0x18
 1022b: movzx  eax [RIP + 0x000120d6]
 10232: mov  [8 + rsp] rcx
 10237: UNKNOWN-INSTRUCTION
 10239: div  [72 + rsp + rdx * 2]
 1023d: mov  ebp [rdi + 8]
 10240: UNKNOWN-INSTRUCTION
 10241: ror  [rdi] 0x85
 10244: mov  [rcx] al
 10246: UNKNOWN-INSTRUCTION
 10248: sub  rsp 0x08
 1024c: push  [rbx + 16]
 1024f: mov  rsi [RIP + 0x0001236a]
 10256: xor  ecx ecx
 10258: mov  edx [rbx + 0x000000c4]
 1025e: xor  r12d 0x01
 10262: mov  r9 r13
 10265: mov  rdi rbp
 10268: movzx  r8 r12b
 1026c: call fdf0 ; relative offset = -1153
 10271: mov  r12 rax
 10274: call c340 ; relative offset = -16185
 10279: pop  ecx
 1027a: pop  esi
 1027b: add  rsp 0x18
 1027f: mov  rax r12
 10282: pop  ebx
 10283: pop  ebp
 10284: pop  esp
 10286: pop  ebp
 10288: pop  esi
 1028a: pop  edi
 1028c: ret 
 1028d: nop  [rax]
 10290: mov  rbp [rdi]
 10293: UNKNOWN-INSTRUCTION
 10295: jz 10248 ; relative offset = -79
 10297: UNKNOWN-INSTRUCTION
 10299: stosb 
 1029a: and  unknown 0x01
 1029c: UNKNOWN-INSTRUCTION
 1029e: movzx  eax [rdi + 0x000000b9]
 102a5: jnz 10400 ; relative offset = 341
 102ab: mov  esi [rbx + 48]
 102ae: movzx  edx al
 102b1: movzx  ecx [rbx + 0x000000b8]
 102b8: UNKNOWN-INSTRUCTION
 102b9: leave 
 102ba: jnz 10429 ; relative offset = 361
 102c0: mov  ecx [rbx + 0x000000a8]
 102c6: lea  rax 
 102cd: mov  eax [rax + rcx * 4]
 102d0: cmp  eax 0x07
 102d3: UNKNOWN-INSTRUCTION
 102d5: rol  [rbx + 0x840f05f8] 0xf1
 102dc: add  [rax] eax
 102de: UNKNOWN-INSTRUCTION
 102e0: ror  [rdi] cl
 102e2: UNKNOWN-INSTRUCTION
 102e3: jmp ffffffff840102eb ; relative offset = -2080374781
 102e8: leave 
 102e9: jz 106d0 ; relative offset = 993
 102ef: UNKNOWN-INSTRUCTION
 102f1: push  edx
 102f2: and  unknown 0x01
 102f4: UNKNOWN-INSTRUCTION
 102f6: mov  ecx 0x000000d0
 102fb: jnz 10317 ; relative offset = 26
 102fd: mov  edi 0x0000000d
 10302: call c120 ; relative offset = -16871
 10307: cmp  unknown 0x01
 10309: sbb  rcx rcx
 1030c: and  rcx 0xa0
 10310: add  ecx 0x000000d0
 10317: lea  rax 
 1031e: add  rcx rax
 10321: cmp  [rcx + 8] 0x00
 10326: jnz 1033c ; relative offset = 20
 10328: mov  edi 0x00000004
 1032d: call c120 ; relative offset = -16914
 10332: UNKNOWN-INSTRUCTION
 10333: ror  [rdi] 0x84
 10336: UNKNOWN-INSTRUCTION
 10339: push  [rcx]
 1033b: leave 
 1033c: sub  rsp 0x08
 10340: push  [rbx + 16]
 10343: mov  edx [rbx + 0x000000c4]
 10349: mov  r9 r13
 1034c: xor  r12d 0x01
 10350: mov  rsi [RIP + 0x00012269]
 10357: mov  rdi rbp
 1035a: movzx  r8 r12b
 1035e: call fdf0 ; relative offset = -1395
 10363: mov  r12 rax
 10366: call c340 ; relative offset = -16427
 1036b: cmp  [RIP + 0x00011d75] 0x00
 10373: pop  eax
 10374: pop  edx
 10375: jz 104a0 ; relative offset = 293
 1037b: lea  rdi 
 10382: call c2a0 ; relative offset = -16615
 10387: mov  rcx [RIP + 0x000120f2]
 1038e: UNKNOWN-INSTRUCTION
 10390: leave 
 10391: jz 1027b ; relative offset = -284
 10397: mov  rax [8 + rsp]
 1039c: xor  edx edx
 1039e: div  rcx
 103a1: xor  edx edx
 103a3: mov  rsi rax
 103a6: mov  rax [8 + rsp]
 103ab: lea  rax 
 103b0: div  rcx
 103b3: UNKNOWN-INSTRUCTION
 103b6: jz 1027b ; relative offset = -321
 103bc: lea  rdi 
 103c3: call c2a0 ; relative offset = -16680
 103c8: jmp 1027b ; relative offset = -338
 103cd: nop  [rax]
 103d0: UNKNOWN-INSTRUCTION
 103d1: mov  edi 0x000000b9
 103d6: UNKNOWN-INSTRUCTION
 103d7: mov  esi [rdi + 0x000000ac]
 103dd: jnz 10418 ; relative offset = 57
 103df: mov  edi 0x0000000c
 103e4: call c120 ; relative offset = -17097
 103e9: mov  edx 0xffffffff
 103ee: UNKNOWN-INSTRUCTION
 103ef: ror  [rdi] 0x84
 103f2: mov  ebx 0xb9fffffe
 103f7: rol  [rax] 0x00
 103fa: UNKNOWN-INSTRUCTION
 103fb: jmp 10317 ; relative offset = -233
 10400: UNKNOWN-INSTRUCTION
 10401: ror  [rdi] 0x84
 10404: UNKNOWN-INSTRUCTION
 10407: dec  [rbx + 0x0000acb3]
 1040d: UNKNOWN-INSTRUCTION
 1040e: jmp 102ae ; relative offset = -357
 10413: nop  [0 + rax + rax * 1]
 10418: movzx  ecx [rbx + 0x000000b8]
 1041f: xor  edx edx
 10421: UNKNOWN-INSTRUCTION
 10422: leave 
 10423: jz 102c0 ; relative offset = -361
 10429: mov  eax esi
 1042b: and  eax 0x0000f000
 10430: UNKNOWN-INSTRUCTION
 10432: add  [rax] 0x00
 10435: jz 10590 ; relative offset = 341
 1043b: UNKNOWN-INSTRUCTION
 10440: jz 10600 ; relative offset = 442
 10446: UNKNOWN-INSTRUCTION
 10448: mov  unknown 
 10449: UNKNOWN-INSTRUCTION
 1044b: jz 10660 ; relative offset = 527
 10451: mov  ecx 0x00000080
 10456: UNKNOWN-INSTRUCTION
 1045b: jz 10317 ; relative offset = -330
 10461: mov  ecx 0x00000090
 10466: UNKNOWN-INSTRUCTION
 10468: rol  [rax] 0x00
 1046b: jz 10317 ; relative offset = -346
 10471: mov  ecx 0x000000a0
 10476: UNKNOWN-INSTRUCTION
 1047b: jz 10317 ; relative offset = -362
 10481: UNKNOWN-INSTRUCTION
 10486: mov  ecx 0x000000b0
 1048b: mov  eax 0x000000d0
 10490: UNKNOWN-INSTRUCTION
 10494: jmp 10317 ; relative offset = -386
 10499: nop  [rax + 0x00000000]
 104a0: lea  rdi 
 104a7: call c2a0 ; relative offset = -16908
 104ac: lea  rdi 
 104b3: call c2a0 ; relative offset = -16920
 104b8: lea  rdi 
 104bf: call c2a0 ; relative offset = -16932
 104c4: jmp 10387 ; relative offset = -322
 104c9: nop  [rax + 0x00000000]
 104d0: mov  rdi rbp
 104d3: call 4880 ; relative offset = -48216
 104d8: mov  rcx [RIP + 0x00011fc1]
 104df: mov  r15 rax
 104e2: UNKNOWN-INSTRUCTION
 104e4: leave 
 104e5: jz 1056f ; relative offset = 132
 104eb: nop  [0 + rax + rax * 1]
 104f0: mov  rdx [rcx]
 104f3: UNKNOWN-INSTRUCTION
 104f6: jnae 10566 ; relative offset = 110
 104f8: mov  r10 r15
 104fb: mov  r11 [rcx + 8]
 104ff: sub  r10 rdx
 10502: add  r10 rbp
 10505: UNKNOWN-INSTRUCTION
 10508: jz 10580 ; relative offset = 118
 1050a: UNKNOWN-INSTRUCTION
 1050d: jz 10580 ; relative offset = 113
 1050f: xor  eax eax
 10511: lea  r14 
 10515: jmp 1052d ; relative offset = 22
 10517: UNKNOWN-INSTRUCTION
 10518: nop  [0x00000000 + rax + rax * 1]
 10520: UNKNOWN-INSTRUCTION
 10522: jz 10561 ; relative offset = 61
 10524: add  rax 0x01
 10528: UNKNOWN-INSTRUCTION
 1052b: jnz 10561 ; relative offset = 52
 1052d: movzx  r8 [r10 + rax * 1]
 10532: lea  esi 
 10536: mov  edx r8d
 10539: cmp  esi 0x19
 1053c: jnbe  0x07
 1053e: add  r8d 0x20
 10542: add  edx 0x20
 10545: movzx  rdi [r11 + rax * 1]
 1054a: lea  r9d 
 1054e: mov  esi edi
 10550: cmp  r9d 0x19
 10554: jnbe  0x06
 10556: add  edi 0x20
 10559: add  esi 0x20
 1055c: UNKNOWN-INSTRUCTION
 1055f: jnz 10520 ; relative offset = -65
 10561: UNKNOWN-INSTRUCTION
 10563: clc 
 10564: jz 10580 ; relative offset = 26
 10566: mov  rcx [rcx + 32]
 1056a: UNKNOWN-INSTRUCTION
 1056c: leave 
 1056d: jnz 104f0 ; relative offset = -127
 1056f: mov  ecx 0x00000050
 10574: jmp 10317 ; relative offset = -610
 10579: nop  [rax + 0x00000000]
 10580: add  rcx 0x10
 10584: jmp 10321 ; relative offset = -616
 10589: nop  [rax + 0x00000000]
 10590: test  esi 0x00000800
 10596: jz 105b0 ; relative offset = 24
 10598: mov  edi 0x00000010
 1059d: call c120 ; relative offset = -17538
 105a2: UNKNOWN-INSTRUCTION
 105a4: jz 105b0 ; relative offset = 10
 105a6: mov  ecx 0x00000100
 105ab: jmp 10317 ; relative offset = -665
 105b0: test  esi 0x00000400
 105b6: jnz 105e8 ; relative offset = 48
 105b8: mov  edi 0x00000015
 105bd: call c120 ; relative offset = -17570
 105c2: UNKNOWN-INSTRUCTION
 105c3: ror  [rdi] 0x84
 105c6: cmpsb 
 105c7: UNKNOWN-INSTRUCTION
 105cb: mov  ebx 0x000000c0
 105d0: UNKNOWN-INSTRUCTION
 105d1: jz 10670 ; relative offset = 153
 105d7: mov  ecx 0x00000150
 105dc: jmp 10317 ; relative offset = -714
 105e1: nop  [rax + 0x00000000]
 105e8: mov  edi 0x00000011
 105ed: call c120 ; relative offset = -17618
 105f2: UNKNOWN-INSTRUCTION
 105f4: jz 105b8 ; relative offset = -62
 105f6: mov  ecx 0x00000110
 105fb: jmp 10317 ; relative offset = -745
 10600: mov  eax esi
 10602: and  eax 0x00000202
 10607: UNKNOWN-INSTRUCTION
 10608: add  al [rdx]
 1060a: UNKNOWN-INSTRUCTION
 1060c: jz 106b4 ; relative offset = 162
 10612: test  sil 0x02
 10616: jz 1062f ; relative offset = 23
 10618: mov  edi 0x00000013
 1061d: call c120 ; relative offset = -17666
 10622: mov  ecx 0x00000130
 10627: UNKNOWN-INSTRUCTION
 10628: ror  [rdi] 0x85
 1062b: call ffffffff8201062c ; relative offset = -2113929220
 10630: out  0x00 unknown
 10632: add  al [rax]
 10634: UNKNOWN-INSTRUCTION
 10635: mov  ecx 0x00000060
 1063a: jz 10317 ; relative offset = -809
 10640: mov  edi 0x00000012
 10645: call c120 ; relative offset = -17706
 1064a: cmp  unknown 0x01
 1064c: sbb  rcx rcx
 1064f: UNKNOWN-INSTRUCTION
 10650: loope 10692 ; relative offset = 64
 10652: add  ecx 0x00000120
 10659: jmp 10317 ; relative offset = -839
 1065e: UNKNOWN-INSTRUCTION
 1065f: nop 
 10660: mov  eax 0x00000007
 10665: jmp 102df ; relative offset = -907
 1066a: UNKNOWN-INSTRUCTION
 1066b: nop  [0 + rax + rax * 1]
 10670: and  esi 0x49
 10673: jz 1068d ; relative offset = 24
 10675: mov  edi 0x0000000e
 1067a: call c120 ; relative offset = -17759
 1067f: UNKNOWN-INSTRUCTION
 10681: jz 1068d ; relative offset = 10
 10683: mov  ecx 0x000000e0
 10688: jmp 10317 ; relative offset = -886
 1068d: cmp  [rbx + 40] 0x01
 10692: jna 104d0 ; relative offset = -456
 10698: mov  edi 0x00000016
 1069d: call c120 ; relative offset = -17794
 106a2: UNKNOWN-INSTRUCTION
 106a3: ror  [rdi] 0x84
 106a6: UNKNOWN-INSTRUCTION
 106aa: mov  ecx 0x00000160
 106af: jmp 10317 ; relative offset = -925
 106b4: mov  edi 0x00000014
 106b9: call c120 ; relative offset = -17822
 106be: mov  ecx 0x00000140
 106c3: UNKNOWN-INSTRUCTION
 106c4: ror  [rdi] 0x85
 106c7: UNKNOWN-INSTRUCTION
 106c8: cld 
 106c9: UNKNOWN-INSTRUCTION
 106ca: jmp  rcx
 106cc: UNKNOWN-INSTRUCTION
 106cf: dec  [rax + 193]
 106d2: loopne 106d8 ; relative offset = 4
 106d4: mov  rcx rax
 106d7: jmp 10317 ; relative offset = -965
 106dc: nop  [rax + 0]
 106e0: UNKNOWN-INSTRUCTION
 106e4: mov  rax [rdi + 8]
 106e8: UNKNOWN-INSTRUCTION
 106eb: jz 10716 ; relative offset = 41
 106ed: nop  [rax]
 106f0: UNKNOWN-INSTRUCTION
 106f3: jna 106fa ; relative offset = 5
 106f5: UNKNOWN-INSTRUCTION
 106f8: jnb 10710 ; relative offset = 22
 106fa: mov  rax [rax + 8]
 106fe: UNKNOWN-INSTRUCTION
 10701: jnz 106f0 ; relative offset = -19
 10703: xor  eax eax
 10705: ret 
 10706: UNKNOWN-INSTRUCTION
 10708: nop  [0x00000000 + rax + rax * 1]
 10710: mov  eax 0x00000001
 10715: ret 
 10716: ret 
 10717: UNKNOWN-INSTRUCTION
 10718: nop  [0x00000000 + rax + rax * 1]
 10720: UNKNOWN-INSTRUCTION
 10724: push  esp
 10726: mov  r12 rsi
 10729: push  ebp
 1072a: push  ebx
 1072b: mov  rsi [rdi + 8]
 1072f: mov  rbx rdi
 10732: UNKNOWN-INSTRUCTION
 10734: div  [rbp + 27]
 10737: jmp 1077b ; relative offset = 66
 10739: nop  [rax + 0x00000000]
 10740: mov  rdi [rbx + 72]
 10744: call  rdx
 10745: rol  [rax + 0x4802504b] 
 1074b: UNKNOWN-INSTRUCTION
 1074c: in  eax dx
 1074d: jz 1077b ; relative offset = 44
 1074f: mov  rsi rbp
 10752: UNKNOWN-INSTRUCTION
 10754: out  0x73 unknown
 10756: UNKNOWN-INSTRUCTION
 10757: mov  rax [rsi]
 1075a: UNKNOWN-INSTRUCTION
 1075c: loopne 107d1 ; relative offset = 115
 1075e: xor  [rax + 139] ecx
 10761: outsb 
 10762: UNKNOWN-INSTRUCTION
 10763: mov  rax [rbx + 64]
 10767: test  [rbx + 80] 0x01
 1076b: jnz 10740 ; relative offset = -45
 1076d: mov  rdi rsi
 10770: call  rdx
 10771: rol  [rax + 0x4802504b] 
 10777: UNKNOWN-INSTRUCTION
 10778: in  eax dx
 10779: jnz 1074f ; relative offset = -44
 1077b: UNKNOWN-INSTRUCTION
 1077d: in  unknown 0x0f
 1077f: UNKNOWN-INSTRUCTION
 10784: pop  ebx
 10785: pop  ebp
 10786: pop  esp
 10788: ret 
 10789: nop  [rax + 0x00000000]
 10790: mov  [rbx + 24] r12
 10794: mov  [rbx + 16] r12
 10798: mov  [rbx + 32] rax
 1079c: mov  [rbx + 8] rsi
 107a0: pop  ebx
 107a1: pop  ebp
 107a2: pop  esp
 107a4: ret 
 107a5: UNKNOWN-INSTRUCTION
 107a8: nop  [0x00000000 + rax + rax * 1]
 107b0: UNKNOWN-INSTRUCTION
 107b4: mov  rax [rdi + 8]
 107b8: xor  r8d r8d
 107bb: UNKNOWN-INSTRUCTION
 107be: jz 107d2 ; relative offset = 18
 107c0: mov  rdx [rax]
 107c3: sub  rdx rax
 107c6: mov  rax [rax + 8]
 107ca: add  r8 rdx
 107cd: UNKNOWN-INSTRUCTION
 107d0: jnz 107c0 ; relative offset = -18
 107d2: mov  rax r8
 107d5: ret 
 107d6: UNKNOWN-INSTRUCTION
 107d8: nop  [0x00000000 + rax + rax * 1]
 107e0: UNKNOWN-INSTRUCTION
 107e4: push  edi
 107e6: push  esi
 107e8: push  ebp
 107ea: push  esp
 107ec: push  ebp
 107ed: push  ebx
 107ee: sub  rsp 0x08
 107f2: mov  r12 [rsi + 48]
 107f6: UNKNOWN-INSTRUCTION
 107f8: in  unknown 0x0f
 107fa: UNKNOWN-INSTRUCTION
 107fb: mov  cl 0x00
 107fd: UNKNOWN-INSTRUCTION
 107ff: mov  rbp rdi
 10802: mov  r13 rsi
 10805: UNKNOWN-INSTRUCTION
 10807: out  0x77 unknown
 10809: UNKNOWN-INSTRUCTION
 1080a: lea  rdx 
 1080e: mov  eax 0x00000001
 10813: UNKNOWN-INSTRUCTION
 10816: jnae 10889 ; relative offset = 113
 10818: UNKNOWN-INSTRUCTION
 1081a: cmp  unknown 0x24
 1081c: UNKNOWN-INSTRUCTION
 1081d: lea  rbx 
 10821: jz 108a0 ; relative offset = 125
 10823: nop  [0 + rax + rax * 1]
 10828: mov  rsi r12
 1082b: mov  rdi rbx
 1082e: call 49f0 ; relative offset = -48707
 10833: UNKNOWN-INSTRUCTION
 10835: jz 10880 ; relative offset = 73
 10837: UNKNOWN-INSTRUCTION
 1083a: jnz 1084f ; relative offset = 19
 1083c: lea  r14 
 10840: UNKNOWN-INSTRUCTION
 10843: jnz 108c8 ; relative offset = 127
 10849: UNKNOWN-INSTRUCTION
 1084a: jnl 10854 ; relative offset = 8
 1084c: UNKNOWN-INSTRUCTION
 1084d: jz 108c8 ; relative offset = 121
 1084f: mov  rdi rbx
 10852: call 4880 ; relative offset = -49111
 10857: lea  rbx 
 1085c: UNKNOWN-INSTRUCTION
 1085f: jnz 10828 ; relative offset = -57
 10861: mov  rax [rbp + 0]
 10865: UNKNOWN-INSTRUCTION
 10868: jz 10828 ; relative offset = -66
 1086a: lea  rbx 
 1086e: mov  rsi r12
 10871: mov  rbp rax
 10874: mov  rdi rbx
 10877: call 49f0 ; relative offset = -48780
 1087c: UNKNOWN-INSTRUCTION
 1087e: jnz 10837 ; relative offset = -73
 10880: mov  [r13 + 48] rbx
 10884: mov  eax 0x00000001
 10889: add  rsp 0x08
 1088d: pop  ebx
 1088e: pop  ebp
 1088f: pop  esp
 10891: pop  ebp
 10893: pop  esi
 10895: pop  edi
 10897: ret 
 10898: nop  [0x00000000 + rax + rax * 1]
 108a0: lea  rbx 
 108a7: jmp 10880 ; relative offset = -41
 108a9: nop  [rax + 0x00000000]
 108b0: add  rsp 0x08
 108b4: mov  eax 0x00000001
 108b9: pop  ebx
 108ba: pop  ebp
 108bb: pop  esp
 108bd: pop  ebp
 108bf: pop  esi
 108c1: pop  edi
 108c3: ret 
 108c4: nop  [rax + 0]
 108c8: mov  rdi r12
 108cb: call 4880 ; relative offset = -49232
 108d0: mov  r15 rax
 108d3: lea  rdx 
 108d7: mov  rax rbx
 108da: sub  rax r14
 108dd: add  rax rdx
 108e0: jnae 10925 ; relative offset = 67
 108e2: cmp  rax 0x76
 108e6: jnbe  0x18
 108e8: mov  rsi r12
 108eb: mov  rdi rbx
 108ee: call 4a50 ; relative offset = -48803
 108f3: mov  [1 + rbx + r15 * 1] 0x00
 108f9: jmp 10880 ; relative offset = -123
 108fb: nop  [0 + rax + rax * 1]
 10900: mov  rdi r12
 10903: call b8e0 ; relative offset = -20520
 10908: mov  [rbp + 0] rax
 1090c: UNKNOWN-INSTRUCTION
 1090f: jz 1091e ; relative offset = 13
 10911: mov  [rax + 8] 0x00
 10915: lea  rbx 
 10919: jmp 10880 ; relative offset = -158
 1091e: xor  eax eax
 10920: jmp 10889 ; relative offset = -156
 10925: call 4710 ; relative offset = -49690
 1092a: mov  [rax] 0x0000000c
 10930: xor  eax eax
 10932: jmp 10889 ; relative offset = -174
 10937: UNKNOWN-INSTRUCTION
 10938: nop  [0x00000000 + rax + rax * 1]
 10940: UNKNOWN-INSTRUCTION
 10944: push  ebp
 10946: lea  r13 
 1094d: push  esp
 1094f: push  ebp
 10950: push  ebx
 10951: mov  rbx rdi
 10954: mov  rdi r13
 10957: sub  rsp 0x08
 1095b: call 46c0 ; relative offset = -49824
 10960: mov  rbp rax
 10963: UNKNOWN-INSTRUCTION
 10966: jz 109d0 ; relative offset = 104
 10968: UNKNOWN-INSTRUCTION
 10969: jpo 10973 ; relative offset = 8
 1096b: UNKNOWN-INSTRUCTION
 1096c: jnz 109a8 ; relative offset = 58
 1096e: mov  rdi rbp
 10971: call b8e0 ; relative offset = -20630
 10976: mov  r12 rax
 10979: UNKNOWN-INSTRUCTION
 1097c: jz 10995 ; relative offset = 23
 1097e: UNKNOWN-INSTRUCTION
 1097f: jpo 10989 ; relative offset = 8
 10981: UNKNOWN-INSTRUCTION
 10982: jnz 109f0 ; relative offset = 108
 10984: mov  rdi r13
 10987: call 4bd0 ; relative offset = -48572
 1098c: UNKNOWN-INSTRUCTION
 1098e: jnz 10a05 ; relative offset = 117
 10990: call 4a60 ; relative offset = -48949
 10995: add  rsp 0x08
 10999: mov  rax r12
 1099c: pop  ebx
 1099d: pop  ebp
 1099e: pop  esp
 109a0: pop  ebp
 109a2: ret 
 109a3: nop  [0 + rax + rax * 1]
 109a8: lea  rdi 
 109ac: mov  rsi rax
 109af: mov  esp 0x00000001
 109b5: call 49f0 ; relative offset = -49098
 109ba: UNKNOWN-INSTRUCTION
 109bc: jnz 1096e ; relative offset = -80
 109be: add  rsp 0x08
 109c2: mov  rax r12
 109c5: pop  ebx
 109c6: pop  ebp
 109c7: pop  esp
 109c9: pop  ebp
 109cb: ret 
 109cc: nop  [rax + 0]
 109d0: UNKNOWN-INSTRUCTION
 109d1: jpo 109db ; relative offset = 8
 109d3: UNKNOWN-INSTRUCTION
 109d4: mov  esp 0x00000001
 109da: jnz 1096e ; relative offset = -110
 109dc: add  rsp 0x08
 109e0: mov  rax r12
 109e3: pop  ebx
 109e4: pop  ebp
 109e5: pop  esp
 109e7: pop  ebp
 109e9: ret 
 109ea: UNKNOWN-INSTRUCTION
 109eb: nop  [0 + rax + rax * 1]
 109f0: lea  rsi 
 109f4: mov  edx 0x00000001
 109f9: mov  rdi r13
 109fc: call 4800 ; relative offset = -49665
 10a01: UNKNOWN-INSTRUCTION
 10a03: jz 10990 ; relative offset = -117
 10a05: call 4710 ; relative offset = -49914
 10a0a: mov  ebx [rax]
 10a0c: mov  rbp rax
 10a0f: cmp  r12 0x01
 10a13: jz 10a26 ; relative offset = 17
 10a15: mov  rdi r12
 10a18: mov  r12 [r12]
 10a1c: call 4680 ; relative offset = -50081
 10a21: UNKNOWN-INSTRUCTION
 10a23: in  unknown 0x75
 10a25: out  dx eax
 10a26: mov  [rbp + 0] ebx
 10a29: xor  r12d r12d
 10a2c: add  rsp 0x08
 10a30: pop  ebx
 10a31: mov  rax r12
 10a34: pop  ebp
 10a35: pop  esp
 10a37: pop  ebp
 10a39: ret 
 10a3a: UNKNOWN-INSTRUCTION
 10a3b: nop  [0 + rax + rax * 1]
 10a40: UNKNOWN-INSTRUCTION
 10a44: push  ebp
 10a46: push  esp
 10a48: push  ebp
 10a49: push  ebx
 10a4a: mov  rbx rdi
 10a4d: sub  rsp 0x08
 10a51: call 4710 ; relative offset = -49990
 10a56: UNKNOWN-INSTRUCTION
 10a57: jpo 10a61 ; relative offset = 8
 10a59: UNKNOWN-INSTRUCTION
 10a5a: mov  r12d [rax]
 10a5d: mov  rbp rax
 10a60: jnz 10aa8 ; relative offset = 70
 10a62: lea  rdi 
 10a69: call 4bd0 ; relative offset = -48798
 10a6e: UNKNOWN-INSTRUCTION
 10a70: jz 10ac1 ; relative offset = 79
 10a72: mov  r12d [rbp + 0]
 10a76: xor  r13d r13d
 10a79: nop  [rax + 0x00000000]
 10a80: mov  rdi rbx
 10a83: mov  rbx [rbx]
 10a86: call 4680 ; relative offset = -50187
 10a8b: UNKNOWN-INSTRUCTION
 10a8e: jnz 10a80 ; relative offset = -16
 10a90: mov  [rbp + 0] r12d
 10a94: add  rsp 0x08
 10a98: mov  eax r13d
 10a9b: pop  ebx
 10a9c: pop  ebp
 10a9d: pop  esp
 10a9f: pop  ebp
 10aa1: ret 
 10aa2: UNKNOWN-INSTRUCTION
 10aa3: nop  [0 + rax + rax * 1]
 10aa8: lea  rsi 
 10aac: mov  edx 0x00000001
 10ab1: lea  rdi 
 10ab8: call 4800 ; relative offset = -49853
 10abd: UNKNOWN-INSTRUCTION
 10abf: jnz 10a72 ; relative offset = -79
 10ac1: call 4a60 ; relative offset = -49254
 10ac6: mov  ebp 0x00000001
 10acc: jmp 10a80 ; relative offset = -78
 10ace: UNKNOWN-INSTRUCTION
 10acf: nop 
 10ad0: push  esi
 10ad2: mov  r14 rsi
 10ad5: push  ebp
 10ad7: push  esp
 10ad9: push  ebp
 10ada: mov  rbp rdx
 10add: sub  rsp 0x08
 10ae1: UNKNOWN-INSTRUCTION
 10ae3: push  [73 + rdx + rdi * 2]
 10ae7: mov  esp edi
 10ae9: call 10940 ; relative offset = -430
 10aee: mov  r13 rax
 10af1: UNKNOWN-INSTRUCTION
 10af4: jz 10b3e ; relative offset = 72
 10af6: mov  rsi rbp
 10af9: mov  rdi r14
 10afc: call 4730 ; relative offset = -50129
 10b01: UNKNOWN-INSTRUCTION
 10b04: jz 10b30 ; relative offset = 42
 10b06: mov  rsi rbp
 10b09: mov  rdi r12
 10b0c: call 107e0 ; relative offset = -817
 10b11: UNKNOWN-INSTRUCTION
 10b13: jz 10b30 ; relative offset = 27
 10b15: cmp  r13 0x01
 10b19: jnz 10b50 ; relative offset = 53
 10b1b: add  rsp 0x08
 10b1f: mov  rax rbp
 10b22: pop  ebp
 10b23: pop  esp
 10b25: pop  ebp
 10b27: pop  esi
 10b29: ret 
 10b2a: UNKNOWN-INSTRUCTION
 10b2b: nop  [0 + rax + rax * 1]
 10b30: cmp  r13 0x01
 10b34: jz 10b3e ; relative offset = 8
 10b36: mov  rdi r13
 10b39: call 10a40 ; relative offset = -254
 10b3e: add  rsp 0x08
 10b42: xor  eax eax
 10b44: pop  ebp
 10b45: pop  esp
 10b47: pop  ebp
 10b49: pop  esi
 10b4b: ret 
 10b4c: nop  [rax + 0]
 10b50: mov  rdi r13
 10b53: call 10a40 ; relative offset = -280
 10b58: UNKNOWN-INSTRUCTION
 10b5a: jnz 10b1b ; relative offset = -65
 10b5c: jmp 10b3e ; relative offset = -32
 10b5e: UNKNOWN-INSTRUCTION
 10b5f: nop 
 10b60: add  rsp 0x08
 10b64: mov  rdi r14
 10b67: mov  rsi rdx
 10b6a: pop  ebp
 10b6b: pop  esp
 10b6d: pop  ebp
 10b6f: pop  esi
 10b71: jmp 4920 ; relative offset = -49750
 10b76: UNKNOWN-INSTRUCTION
 10b78: nop  [0x00000000 + rax + rax * 1]
 10b80: push  edi
 10b82: push  esi
 10b84: push  ebp
 10b86: push  esp
 10b88: push  ebp
 10b89: push  ebx
 10b8a: sub  esp 0x00001000
 10b91: or  [rsp] 0x00
 10b96: sub  esp 0x00000338
 10b9d: movzx  edx [rdi + 0x000000b8]
 10ba4: UNKNOWN-INSTRUCTION
 10ba5: mov  rax 0x00000028
 10bad: mov  [0x00001328 + rsp] rax
 10bb5: xor  eax eax
 10bb7: mov  rbp rdi
 10bba: UNKNOWN-INSTRUCTION
 10bbb: ror  [rdi] cl
 10bbd: UNKNOWN-INSTRUCTION
 10bbe: outsb 
 10bbf: add  eax [rax]
 10bc1: UNKNOWN-INSTRUCTION
 10bc2: mov  eax [rdi + 48]
 10bc5: mov  ecx 0x0000002d
 10bca: mov  esi eax
 10bcc: and  esi 0x0000f000
 10bd2: cmp  esi 0x00008000
 10bd8: jz 10c2e ; relative offset = 84
 10bda: mov  ecx 0x00000064
 10bdf: cmp  esi 0x00004000
 10be5: jz 10c2e ; relative offset = 71
 10be7: mov  ecx 0x00000062
 10bec: cmp  esi 0x00006000
 10bf2: jz 10c2e ; relative offset = 58
 10bf4: mov  ecx 0x00000063
 10bf9: cmp  esi 0x00002000
 10bff: jz 10c2e ; relative offset = 45
 10c01: mov  ecx 0x0000006c
 10c06: cmp  esi 0x0000a000
 10c0c: jz 10c2e ; relative offset = 32
 10c0e: mov  ecx 0x00000070
 10c13: cmp  esi 0x00001000
 10c19: jz 10c2e ; relative offset = 19
 10c1b: cmp  esi 0x0000c000
 10c21: mov  ecx 0x00000073
 10c26: mov  esi 0x0000003f
 10c2b: UNKNOWN-INSTRUCTION
 10c2e: mov  [0x000000c4 + rsp] cl
 10c35: mov  ecx eax
 10c37: and  ecx 0x00000100
 10c3d: cmp  ecx 0x01
 10c40: sbb  ecx ecx
 10c42: and  ecx 0xbb
 10c45: add  ecx 0x72
 10c48: mov  [0x000000c5 + rsp] cl
 10c4f: mov  ecx eax
 10c51: and  ecx 0x00000080
 10c57: cmp  ecx 0x01
 10c5a: sbb  ecx ecx
 10c5c: and  ecx 0xb6
 10c5f: add  ecx 0x77
 10c62: mov  [0x000000c6 + rsp] cl
 10c69: mov  ecx eax
 10c6b: and  ecx 0x40
 10c6e: cmp  ecx 0x01
 10c71: sbb  ecx ecx
 10c73: test  spl 0x08
 10c76: jnz 11140 ; relative offset = 1220
 10c7c: and  ecx 0xb5
 10c7f: add  ecx 0x78
 10c82: mov  [0x000000c7 + rsp] cl
 10c89: mov  ecx eax
 10c8b: and  ecx 0x20
 10c8e: cmp  ecx 0x01
 10c91: sbb  ecx ecx
 10c93: and  ecx 0xbb
 10c96: add  ecx 0x72
 10c99: mov  [0x000000c8 + rsp] cl
 10ca0: mov  ecx eax
 10ca2: and  ecx 0x10
 10ca5: cmp  ecx 0x01
 10ca8: sbb  ecx ecx
 10caa: and  ecx 0xb6
 10cad: add  ecx 0x77
 10cb0: mov  [0x000000c9 + rsp] cl
 10cb7: mov  ecx eax
 10cb9: and  ecx 0x08
 10cbc: cmp  ecx 0x01
 10cbf: sbb  ecx ecx
 10cc1: test  spl 0x04
 10cc4: jz 113a0 ; relative offset = 1750
 10cca: and  ecx 0xe0
 10ccd: add  ecx 0x73
 10cd0: mov  [0x000000ca + rsp] cl
 10cd7: mov  ecx eax
 10cd9: and  ecx 0x04
 10cdc: cmp  ecx 0x01
 10cdf: sbb  ecx ecx
 10ce1: and  ecx 0xbb
 10ce4: add  ecx 0x72
 10ce7: mov  [0x000000cb + rsp] cl
 10cee: mov  ecx eax
 10cf0: and  ecx 0x02
 10cf3: cmp  ecx 0x01
 10cf6: sbb  ecx ecx
 10cf8: and  ecx 0xb6
 10cfb: add  ecx 0x77
 10cfe: mov  [0x000000cc + rsp] cl
 10d05: mov  ecx eax
 10d07: and  ecx 0x01
 10d0a: test  spl 0x02
 10d0d: jz 11390 ; relative offset = 1661
 10d13: cmp  ecx 0x01
 10d16: sbb  eax eax
 10d18: and  eax 0xe0
 10d1b: add  eax 0x74
 10d1e: mov  ebx 0x00000020
 10d24: UNKNOWN-INSTRUCTION
 10d26: and  [rdi] edx
 10d28: add  [rax] eax
 10d2a: UNKNOWN-INSTRUCTION
 10d2b: mov  [0x000000cd + rsp] al
 10d32: mov  [0x000000ce + rsp] r11d
 10d3b: jz 10f7e ; relative offset = 573
 10d41: mov  eax [rbp + 0x000000bc]
 10d47: cmp  eax 0x01
 10d4a: jz 113e8 ; relative offset = 1688
 10d50: cmp  eax 0x02
 10d53: jnz 10f86 ; relative offset = 557
 10d59: mov  eax [RIP + 0x000126c1]
 10d5f: mov  [0x000000ce + rsp] 0x2b
 10d67: cmp  eax 0x02
 10d6a: jnz 10f95 ; relative offset = 549
 10d70: mov  rax [rbp + 104]
 10d74: mov  rcx [rbp + 96]
 10d78: mov  [8 + rsp] 0x01
 10d7d: mov  [48 + rsp] rcx
 10d82: mov  [56 + rsp] rax
 10d87: lea  r12 
 10d8f: UNKNOWN-INSTRUCTION
 10d91: jpo 10da8 ; relative offset = 21
 10d93: add  [rax] eax
 10d95: UNKNOWN-INSTRUCTION
 10d96: mov  r14 r12
 10d99: jnz 11238 ; relative offset = 1177
 10d9f: UNKNOWN-INSTRUCTION
 10da2: adc  eax 0x74000001
 10da7: UNKNOWN-INSTRUCTION
 10da8: mov  esi 0x00000001
 10dad: lea  rbx 
 10db4: UNKNOWN-INSTRUCTION
 10db5: ror  [rdi] cl
 10db7: UNKNOWN-INSTRUCTION
 10db8: or  unknown 0x08
 10dba: UNKNOWN-INSTRUCTION
 10dbc: mov  r15d [RIP + 0x000114e1]
 10dc3: mov  rdi rbx
 10dc6: call 12c20 ; relative offset = 7765
 10dcb: mov  r8d eax
 10dce: mov  eax r15d
 10dd1: sub  eax r8d
 10dd4: UNKNOWN-INSTRUCTION
 10dd5: sar  [rsi + 22] 0x4c
 10dd9: UNKNOWN-INSTRUCTION
 10dda: clc 
 10ddb: mov  rdi r14
 10dde: mov  esi 0x00000020
 10de3: mov  rdx r15
 10de6: add  r14 r15
 10de9: call 4960 ; relative offset = -50318
 10dee: movzx  eax [rbx]
 10df1: add  rbx 0x01
 10df5: add  r14 0x01
 10df9: mov  [r14 + 255] al
 10dfd: UNKNOWN-INSTRUCTION
 10dff: jnz 10dee ; relative offset = -19
 10e01: mov  [r14 + 255] 0x20
 10e06: movzx  edx [rbp + 0x000000b8]
 10e0d: lea  rdi 
 10e14: UNKNOWN-INSTRUCTION
 10e15: ror  [rdi] cl
 10e17: UNKNOWN-INSTRUCTION
 10e19: add  eax [rax]
 10e1b: UNKNOWN-INSTRUCTION
 10e1c: sub  rsp 0x08
 10e20: mov  r9d [RIP + 0x00011621]
 10e27: xor  eax eax
 10e29: lea  rcx 
 10e30: push  edi
 10e31: mov  rdx 0xffffffff
 10e38: mov  rdi r14
 10e3b: mov  esi 0x00000001
 10e40: lea  r8 
 10e48: call 4ce0 ; relative offset = -49517
 10e4d: mov  rdi r14
 10e50: call 4880 ; relative offset = -50645
 10e55: UNKNOWN-INSTRUCTION
 10e57: pop  esp
 10e58: UNKNOWN-INSTRUCTION
 10e59: add  [rax] eax
 10e5b: UNKNOWN-INSTRUCTION
 10e5c: pop  eax
 10e5e: lea  rbx 
 10e62: pop  ecx
 10e64: mov  r14 [RIP + 0x0001113d]
 10e6b: jnz 111b8 ; relative offset = 839
 10e71: UNKNOWN-INSTRUCTION
 10e73: or  eax 0x00000112
 10e78: jnz 10e87 ; relative offset = 13
 10e7a: UNKNOWN-INSTRUCTION
 10e7c: add  edx [rdx]
 10e7e: add  [rax] eax
 10e80: UNKNOWN-INSTRUCTION
 10e81: jz 11120 ; relative offset = 665
 10e87: mov  rsi [r14]
 10e8a: mov  rdi r12
 10e8d: sub  rbx r12
 10e90: call 49d0 ; relative offset = -50373
 10e95: add  [RIP + 0x0001145c] rbx
 10e9c: UNKNOWN-INSTRUCTION
 10e9e: loop 10eb1 ; relative offset = 17
 10ea0: add  [rax] eax
 10ea2: UNKNOWN-INSTRUCTION
 10ea3: jnz 11360 ; relative offset = 1207
 10ea9: UNKNOWN-INSTRUCTION
 10eac: adc  [rcx] eax
 10eae: UNKNOWN-INSTRUCTION
 10eb0: jnz 11338 ; relative offset = 1154
 10eb6: UNKNOWN-INSTRUCTION
 10eb8: imul  esp [RIP + 0x0f000001] 0x85
 10ebf: and  eax 0x80000004
 10ec4: UNKNOWN-INSTRUCTION
 10ec6: adc  unknown 0x01
 10ec8: UNKNOWN-INSTRUCTION
 10eca: mov  rbx r12
 10ecd: jnz 1131a ; relative offset = 1095
 10ed3: UNKNOWN-INSTRUCTION
 10ed4: mov  ebp 0x000000b8
 10ed9: UNKNOWN-INSTRUCTION
 10eda: jz 10ff8 ; relative offset = 280
 10ee0: mov  eax [rbp + 48]
 10ee3: and  eax 0x0000b000
 10ee8: UNKNOWN-INSTRUCTION
 10eed: jz 113f8 ; relative offset = 1285
 10ef3: mov  rdi [rbp + 72]
 10ef7: mov  r8 [RIP + 0x0001117a]
 10efe: lea  rsi 
 10f06: mov  ecx 0x00000001
 10f0b: mov  edx [RIP + 0x0001155f]
 10f11: call cd20 ; relative offset = -16886
 10f16: mov  rdi rax
 10f19: mov  r13 rax
 10f1c: call 4880 ; relative offset = -50849
 10f21: mov  rsi rax
 10f24: jmp 11004 ; relative offset = 219
 10f29: nop  [rax + 0x00000000]
 10f30: mov  eax [rdi + 0x000000a8]
 10f36: lea  rcx 
 10f3d: mov  edx 0x00003f3f
 10f43: UNKNOWN-INSTRUCTION
 10f45: add  dl [RIP + 0x66000001]
 10f4b: mov  [0x000000cd + rsp] r10d
 10f53: movzx  eax [rcx + rax * 1]
 10f57: mov  [0x000000cf + rsp] 0x00
 10f5f: mov  [0x000000c4 + rsp] al
 10f66: mov  rax 0x3f3f3f3f3f3f3f3f
 10f70: mov  [0x000000c5 + rsp] rax
 10f78: jnz 10d41 ; relative offset = -573
 10f7e: mov  [0x000000ce + rsp] 0x00
 10f86: mov  eax [RIP + 0x00012494]
 10f8c: cmp  eax 0x02
 10f8f: jz 10d70 ; relative offset = -549
 10f95: jnbe  0x31
 10f97: UNKNOWN-INSTRUCTION
 10f98: ror  [rdi] 0x84
 10f9b: adc  [rax + rax * 1] eax
 10f9e: UNKNOWN-INSTRUCTION
 10f9f: mov  rax [rbp + 0x00000088]
 10fa6: mov  rcx [rbp + 0x00000080]
 10fad: mov  [8 + rsp] 0x01
 10fb2: mov  [48 + rsp] rcx
 10fb7: mov  [56 + rsp] rax
 10fbc: jmp 10d87 ; relative offset = -570
 10fc1: nop  [rax + 0x00000000]
 10fc8: cmp  eax 0x03
 10fcb: jnz 1189a ; relative offset = 2249
 10fd1: mov  rax [rbp + 112]
 10fd5: mov  rcx [rbp + 120]
 10fd9: mov  [48 + rsp] rax
 10fde: and  rax rcx
 10fe1: cmp  rax 0xff
 10fe5: mov  [56 + rsp] rcx
 10fea: UNKNOWN-INSTRUCTION
 10fec: and  unknown 0x08
 10fef: jmp 10d87 ; relative offset = -621
 10ff4: nop  [rax + 0]
 10ff8: mov  esi 0x00000001
 10ffd: lea  r13 
 11004: mov  r15d [RIP + 0x00011425]
 1100b: mov  rdi r13
 1100e: call 12c20 ; relative offset = 7181
 11013: mov  r8d eax
 11016: mov  eax r15d
 11019: sub  eax r8d
 1101c: UNKNOWN-INSTRUCTION
 1101d: sar  [rsi + 22] 0x4c
 11021: UNKNOWN-INSTRUCTION
 11022: clc 
 11023: mov  rdi rbx
 11026: mov  esi 0x00000020
 1102b: mov  rdx r15
 1102e: add  rbx r15
 11031: call 4960 ; relative offset = -50902
 11036: movzx  rax [r13 + 0]
 1103b: add  r13 0x01
 1103f: add  rbx 0x01
 11043: mov  [rbx + 255] al
 11046: UNKNOWN-INSTRUCTION
 11048: jnz 11036 ; relative offset = -20
 1104a: mov  [rbx + 255] 0x20
 1104e: mov  [rbx] 0x01
 11051: UNKNOWN-INSTRUCTION
 11052: mov  ebp 0x000000b8
 11057: UNKNOWN-INSTRUCTION
 11058: jz 11065 ; relative offset = 11
 1105a: UNKNOWN-INSTRUCTION
 1105b: jnge 11081 ; relative offset = 36
 1105d: UNKNOWN-INSTRUCTION
 1105f: jnz 11520 ; relative offset = 1211
 11065: lea  r13 
 1106c: mov  r8d [RIP + 0x00010fad]
 11073: UNKNOWN-INSTRUCTION
 11075: ror  [rdi] 0x88
 11078: adc  unknown 0x06
 1107a: UNKNOWN-INSTRUCTION
 1107c: mov  r9 r13
 1107f: lea  rcx 
 11086: mov  rdi rbx
 11089: xor  eax eax
 1108b: mov  rdx 0xffffffff
 11092: mov  esi 0x00000001
 11097: call 4ce0 ; relative offset = -50108
 1109c: mov  rdi rbx
 1109f: call 4880 ; relative offset = -51236
 110a4: lea  r13 
 110a8: mov  rsi [r14]
 110ab: mov  rdi r12
 110ae: sub  r13 r12
 110b1: call 49d0 ; relative offset = -50918
 110b6: mov  rcx r13
 110b9: xor  esi esi
 110bb: mov  rdi rbp
 110be: lea  rdx 
 110c5: add  [RIP + 0x0001122c] r13
 110cc: call 10210 ; relative offset = -3777
 110d1: mov  edx [rbp + 0x000000a8]
 110d7: mov  r12 rax
 110da: cmp  edx 0x06
 110dd: jz 11150 ; relative offset = 113
 110df: mov  eax [RIP + 0x0001121f]
 110e5: UNKNOWN-INSTRUCTION
 110e6: ror  [rdi] 0x85
 110e9: jecxz  0x02
 110eb: UNKNOWN-INSTRUCTION
 110ed: mov  rax [0x00001328 + rsp]
 110f5: UNKNOWN-INSTRUCTION
 110f6: sub  rax 0x00000028
 110fe: jnz 11895 ; relative offset = 1937
 11104: add  esp 0x00001338
 1110b: pop  ebx
 1110c: pop  ebp
 1110d: pop  esp
 1110f: pop  ebp
 11111: pop  esi
 11113: pop  edi
 11115: ret 
 11116: UNKNOWN-INSTRUCTION
 11118: nop  [0x00000000 + rax + rax * 1]
 11120: UNKNOWN-INSTRUCTION
 11122: add  [rbx] esp
 11124: add  [rax] eax
 11126: UNKNOWN-INSTRUCTION
 11127: jnz 10e87 ; relative offset = -678
 1112d: UNKNOWN-INSTRUCTION
 11130: adc  [rcx] eax
 11132: UNKNOWN-INSTRUCTION
 11134: jz 10ed3 ; relative offset = -615
 1113a: jmp 10e87 ; relative offset = -696
 1113f: nop 
 11140: and  ecx 0xe0
 11143: add  ecx 0x73
 11146: jmp 10c82 ; relative offset = -1225
 1114b: nop  [0 + rax + rax * 1]
 11150: cmp  [rbp + 8] 0x00
 11155: jz 110ed ; relative offset = -106
 11157: mov  rcx [r14]
 1115a: mov  edx 0x00000004
 1115f: mov  esi 0x00000001
 11164: lea  rdi 
 1116b: call 4b00 ; relative offset = -50800
 11170: xor  edx edx
 11172: lea  rcx 
 11177: mov  rdi rbp
 1117a: mov  esi 0x00000001
 1117f: add  [RIP + 0x00011171] 0x04
 11187: call 10210 ; relative offset = -3964
 1118c: mov  edx [RIP + 0x00011172]
 11192: UNKNOWN-INSTRUCTION
 11193: ror  [rdi] cl
 11195: UNKNOWN-INSTRUCTION
 11196: push  ebx
 11197: UNKNOWN-INSTRUCTION
 11199: dec  [rbx + 0x0000acb5]
 1119f: UNKNOWN-INSTRUCTION
 111a0: xor  edx edx
 111a2: mov  edi 0x00000001
 111a7: call 16e50 ; relative offset = 23716
 111ac: jmp 110ed ; relative offset = -196
 111b1: nop  [rax + 0x00000000]
 111b8: mov  rcx [r14]
 111bb: mov  edx 0x00000002
 111c0: mov  esi 0x00000001
 111c5: lea  rdi 
 111cc: call 4b00 ; relative offset = -50897
 111d1: add  [RIP + 0x0001111f] 0x02
 111d9: jmp 10e71 ; relative offset = -877
 111de: UNKNOWN-INSTRUCTION
 111df: nop 
 111e0: mov  [0x00000104 + rsp] 0x00
 111e8: mov  rcx [rbp + 40]
 111ec: lea  rdi 
 111f4: mov  rax 0xcccccccccccccccd
 111fe: UNKNOWN-INSTRUCTION
 111ff: nop 
 11200: mov  rax rcx
 11203: sub  rdi 0x01
 11207: mul  rsp
 1120a: mov  rax rcx
 1120d: shr  rdx 0x03
 11211: lea  rsi 
 11215: add  rsi rsi
 11218: sub  rax rsi
 1121b: add  eax 0x30
 1121e: mov  [rdi] al
 11220: mov  rax rcx
 11223: mov  rcx rdx
 11226: cmp  rax 0x09
 1122a: jnbe  0xd4
 1122c: jmp 10e1c ; relative offset = -1045
 11231: nop  [rax + 0x00000000]
 11238: lea  r9 
 1123f: UNKNOWN-INSTRUCTION
 11241: jz 112a0 ; relative offset = 93
 11243: mov  rcx [rbp + 32]
 11247: UNKNOWN-INSTRUCTION
 11249: leave 
 1124a: jz 112a0 ; relative offset = 84
 1124c: mov  [0x00000104 + rsp] 0x00
 11254: lea  r9 
 1125c: mov  rdi 0xcccccccccccccccd
 11266: UNKNOWN-INSTRUCTION
 11268: nop  [0x00000000 + rax + rax * 1]
 11270: mov  rax rcx
 11273: sub  r9 0x01
 11277: mul  rsp
 1127a: mov  rax rcx
 1127d: shr  rdx 0x03
 11281: lea  rsi 
 11285: add  rsi rsi
 11288: sub  rax rsi
 1128b: add  eax 0x30
 1128e: mov  [r9] al
 11291: mov  rax rcx
 11294: mov  rcx rdx
 11297: cmp  rax 0x09
 1129b: jnbe  0xd3
 1129d: nop  [rax]
 112a0: lea  r12 
 112a8: mov  r8d [RIP + 0x00010ff9]
 112af: xor  eax eax
 112b1: mov  edx 0x00000e3b
 112b6: lea  rcx 
 112bd: mov  esi 0x00000001
 112c2: mov  rdi r12
 112c5: call 4ce0 ; relative offset = -50666
 112ca: mov  rdi r12
 112cd: call 4880 ; relative offset = -51794
 112d2: movzx  edx [rbp + 0x000000b8]
 112d9: lea  r14 
 112dd: jmp 10d9f ; relative offset = -1347
 112e2: UNKNOWN-INSTRUCTION
 112e3: nop  [0 + rax + rax * 1]
 112e8: mov  edx [RIP + 0x0001114e]
 112ee: UNKNOWN-INSTRUCTION
 112ef: mov  ebp 0x000000b8
 112f4: UNKNOWN-INSTRUCTION
 112f5: lea  rdi 
 112fc: mov  esi [rbp + 52]
 112ff: jnz 11660 ; relative offset = 859
 11305: call b4c0 ; relative offset = -24138
 1130a: UNKNOWN-INSTRUCTION
 1130c: out  dx eax
 1130d: UNKNOWN-INSTRUCTION
 1130e: add  [rax] eax
 11310: UNKNOWN-INSTRUCTION
 11311: mov  rbx r12
 11314: jz 10ed3 ; relative offset = -1095
 1131a: mov  rdi [rbp + 0x000000b0]
 11321: mov  edx [RIP + 0x00010f79]
 11327: xor  esi esi
 11329: call b4c0 ; relative offset = -24174
 1132e: jmp 10ed3 ; relative offset = -1120
 11333: nop  [0 + rax + rax * 1]
 11338: mov  edx [RIP + 0x00011102]
 1133e: UNKNOWN-INSTRUCTION
 1133f: mov  ebp 0x000000b8
 11344: UNKNOWN-INSTRUCTION
 11345: lea  rdi 
 1134c: mov  esi [rbp + 56]
 1134f: jnz 11630 ; relative offset = 731
 11355: call b4c0 ; relative offset = -24218
 1135a: jmp 10eb6 ; relative offset = -1193
 1135f: nop 
 11360: mov  edx [RIP + 0x000110de]
 11366: UNKNOWN-INSTRUCTION
 11367: mov  ebp 0x000000b8
 1136c: UNKNOWN-INSTRUCTION
 1136d: lea  rdi 
 11374: mov  esi [rbp + 52]
 11377: jnz 11600 ; relative offset = 643
 1137d: call b4c0 ; relative offset = -24258
 11382: jmp 10ea9 ; relative offset = -1246
 11387: UNKNOWN-INSTRUCTION
 11388: nop  [0x00000000 + rax + rax * 1]
 11390: cmp  ecx 0x01
 11393: sbb  eax eax
 11395: and  eax 0xb5
 11398: add  eax 0x78
 1139b: jmp 10d1e ; relative offset = -1666
 113a0: and  ecx 0xb5
 113a3: add  ecx 0x78
 113a6: jmp 10cd0 ; relative offset = -1755
 113ab: nop  [0 + rax + rax * 1]
 113b0: mov  rax [rbp + 120]
 113b4: mov  rcx [rbp + 112]
 113b8: mov  [8 + rsp] 0x01
 113bd: mov  [48 + rsp] rcx
 113c2: mov  [56 + rsp] rax
 113c7: jmp 10d87 ; relative offset = -1605
 113cc: nop  [rax + 0]
 113d0: mov  esi [rbp + 48]
 113d3: movzx  edi [rbp + 0x000000b8]
 113da: call 16e50 ; relative offset = 23153
 113df: jmp 110ed ; relative offset = -759
 113e4: nop  [rax + 0]
 113e8: mov  [0x000000ce + rsp] 0x2e
 113f0: jmp 10f86 ; relative offset = -1135
 113f5: nop  [rax]
 113f8: mov  rcx [rbp + 64]
 113fc: mov  r10d [RIP + 0x00011035]
 11403: mov  [0x000000e4 + rsp] 0x00
 1140b: lea  rdi 
 11413: mov  r11d [RIP + 0x0001101a]
 1141a: mov  r8d [RIP + 0x0001100f]
 11421: mov  rcx 0xcccccccccccccccd
 1142b: mov  rsi rcx
 1142e: lea  eax 
 11433: shr  rsi 0x0c
 11437: sub  r8d eax
 1143a: UNKNOWN-INSTRUCTION
 1143d: movzx  eax cl
 11440: or  esi eax
 11442: UNKNOWN-INSTRUCTION
 11443: nop  [0 + rax + rax * 1]
 11448: mov  rax rsi
 1144b: sub  rdi 0x01
 1144f: mul  rsp
 11452: mov  rax rsi
 11455: shr  rdx 0x03
 11459: lea  r15 
 1145d: add  r15 r15
 11460: sub  rax r15
 11463: add  eax 0x30
 11466: mov  [rdi] al
 11468: mov  rax rsi
 1146b: mov  rsi rdx
 1146e: cmp  rax 0x09
 11472: jnbe  0xd4
 11474: mov  rax rcx
 11477: shr  rcx 0x20
 1147b: mov  [0x00000104 + rsp] 0x00
 11483: lea  r9 
 1148b: shr  rax 0x08
 1148f: and  ecx 0xfffff000
 11495: mov  rsi 0xcccccccccccccccd
 1149f: and  eax 0x00000fff
 114a4: or  ecx eax
 114a6: UNKNOWN-INSTRUCTION
 114a8: nop  [0x00000000 + rax + rax * 1]
 114b0: mov  rax rcx
 114b3: sub  r9 0x01
 114b7: mul  rsp
 114ba: mov  rax rcx
 114bd: shr  rdx 0x03
 114c1: lea  r15 
 114c5: add  r15 r15
 114c8: sub  rax r15
 114cb: add  eax 0x30
 114ce: mov  [r9] al
 114d1: mov  rax rcx
 114d4: mov  rcx rdx
 114d7: cmp  rax 0x09
 114db: jnbe  0xd3
 114dd: xor  eax eax
 114df: UNKNOWN-INSTRUCTION
 114e1: rcl  [rdi + 190] 0x01
 114e5: UNKNOWN-INSTRUCTION
 114e8: push  ebx
 114ea: UNKNOWN-INSTRUCTION
 114ed: ror  [rax + 137] 0xdf
 114f1: lea  rcx 
 114f8: mov  rdx 0xffffffff
 114ff: add  r8d r10d
 11502: call 4ce0 ; relative offset = -51239
 11507: movsxd  rax [RIP + 0x00010f22]
 1150e: pop  esi
 1150f: pop  edi
 11510: lea  rbx 
 11515: jmp 1104e ; relative offset = -1228
 1151a: UNKNOWN-INSTRUCTION
 1151b: nop  [0 + rax + rax * 1]
 11520: mov  r15 [RIP + 0x00011199]
 11527: lea  r13 
 1152c: lea  rsi 
 11531: mov  rdx r13
 11534: mov  rdi r15
 11537: call 10ad0 ; relative offset = -2668
 1153c: UNKNOWN-INSTRUCTION
 1153e: ror  [rdi] 0x84
 11541: adc  eax [rdx]
 11543: UNKNOWN-INSTRUCTION
 11545: mov  rax [RIP + 0x00011204]
 1154c: mov  rcx [48 + rsp]
 11551: mov  rsi [RIP + 0x00011200]
 11558: mov  rdx [56 + rsp]
 1155d: UNKNOWN-INSTRUCTION
 1155f: sar  [rdi + 6] 0x7c
 11563: sub  dil [rcx]
 11565: UNKNOWN-INSTRUCTION
 11566: jns 1158e ; relative offset = 38
 11568: lea  rsi 
 1156f: xor  edi edi
 11571: call 47f0 ; relative offset = -52614
 11576: mov  rcx [48 + rsp]
 1157b: mov  rdx [56 + rsp]
 11580: mov  rax [RIP + 0x000111c9]
 11587: mov  rsi [RIP + 0x000111ca]
 1158e: lea  rdi 
 11595: UNKNOWN-INSTRUCTION
 11598: jnge 115a8 ; relative offset = 14
 1159a: jnle 117d4 ; relative offset = 564
 115a0: UNKNOWN-INSTRUCTION
 115a2: jns 117d4 ; relative offset = 556
 115a8: UNKNOWN-INSTRUCTION
 115aa: ror  [rdi] 0x8c
 115ad: UNKNOWN-INSTRUCTION
 115ae: add  al [rax]
 115b0: UNKNOWN-INSTRUCTION
 115b1: jnle 117d4 ; relative offset = 541
 115b7: mov  eax edx
 115b9: sub  eax esi
 115bb: shr  eax 0x1f
 115be: jmp 117d6 ; relative offset = 531
 115c3: nop  [0 + rax + rax * 1]
 115c8: mov  rdi [rbp + 88]
 115cc: mov  r8 [RIP + 0x00010cdd]
 115d3: lea  rsi 
 115db: mov  ecx 0x00000200
 115e0: mov  edx [RIP + 0x00010cd2]
 115e6: call cd20 ; relative offset = -18635
 115eb: mov  rdi rax
 115ee: mov  rbx rax
 115f1: call 4880 ; relative offset = -52598
 115f6: mov  rsi rax
 115f9: jmp 10dbc ; relative offset = -2114
 115fe: UNKNOWN-INSTRUCTION
 115ff: nop 
 11600: xor  edi edi
 11602: UNKNOWN-INSTRUCTION
 11606: add  [rax] eax
 11608: UNKNOWN-INSTRUCTION
 11609: jnz 1137d ; relative offset = -658
 1160f: mov  edi esi
 11611: mov  [24 + rsp] rsi
 11616: mov  [20 + rsp] edx
 1161a: call e4c0 ; relative offset = -12639
 1161f: mov  rsi [24 + rsp]
 11624: mov  edx [20 + rsp]
 11628: mov  rdi rax
 1162b: jmp 1137d ; relative offset = -691
 11630: xor  edi edi
 11632: UNKNOWN-INSTRUCTION
 11636: add  [rax] eax
 11638: UNKNOWN-INSTRUCTION
 11639: jnz 11355 ; relative offset = -746
 1163f: mov  edi esi
 11641: mov  [24 + rsp] rsi
 11646: mov  [20 + rsp] edx
 1164a: call e600 ; relative offset = -12367
 1164f: mov  rsi [24 + rsp]
 11654: mov  edx [20 + rsp]
 11658: mov  rdi rax
 1165b: jmp 11355 ; relative offset = -779
 11660: xor  edi edi
 11662: UNKNOWN-INSTRUCTION
 11664: xor  ecx [rsi]
 11666: add  [rax] eax
 11668: UNKNOWN-INSTRUCTION
 11669: jnz 11305 ; relative offset = -874
 1166f: mov  edi esi
 11671: mov  [24 + rsp] rsi
 11676: mov  [20 + rsp] edx
 1167a: call e4c0 ; relative offset = -12735
 1167f: mov  rsi [24 + rsp]
 11684: mov  edx [20 + rsp]
 11688: mov  rdi rax
 1168b: jmp 11305 ; relative offset = -907
 11690: mov  rcx [RIP + 0x00011029]
 11697: lea  rsi 
 1169c: lea  r15 
 116a4: mov  [40 + rsp] 0x00000000
 116ad: mov  rdx r15
 116b0: mov  rdi rcx
 116b3: mov  [8 + rsp] rcx
 116b8: call 10ad0 ; relative offset = -3053
 116bd: UNKNOWN-INSTRUCTION
 116c0: jz 11727 ; relative offset = 101
 116c2: UNKNOWN-INSTRUCTION
 116c4: adc  [r9] eax
 116c7: UNKNOWN-INSTRUCTION
 116c9: mov  rdx [RIP + 0x00010b70]
 116d0: mov  rcx [8 + rsp]
 116d5: jz 116ed ; relative offset = 22
 116d7: movsxd  rdx [0x00000090 + rsp]
 116df: lea  rax 
 116e6: sal  rdx 0x07
 116ea: add  rdx rax
 116ed: lea  rdi 
 116f5: sub  rsp 0x08
 116f9: xor  r9d r9d
 116fc: xor  r8d r8d
 116ff: UNKNOWN-INSTRUCTION
 11701: mov  esi 0x000003e9
 11706: push  ecx
 11707: mov  rcx r15
 1170a: UNKNOWN-INSTRUCTION
 1170b: dec  [rax + 137]
 1170e: jnge 11734 ; relative offset = 36
 11710: UNKNOWN-INSTRUCTION
 11711: call 14f60 ; relative offset = 14410
 11716: add  rsp 0x20
 1171a: mov  rdi [8 + rsp]
 1171f: UNKNOWN-INSTRUCTION
 11721: ror  [rax + 137] 0xc6
 11725: jnz 11739 ; relative offset = 18
 11727: mov  [RIP + 0x000108ef] 0x00000000
 11731: xor  r8d r8d
 11734: jmp 1107c ; relative offset = -1725
 11739: call 12c20 ; relative offset = 5346
 1173e: mov  [RIP + 0x000108dc] eax
 11744: mov  r8d eax
 11747: UNKNOWN-INSTRUCTION
 11748: ror  [rdi] 0x89
 1174b: sub  eax 0xebfffff9
 11750: UNKNOWN-INSTRUCTION
 11751: nop  [rax + 0x00000000]
 11758: UNKNOWN-INSTRUCTION
 1175b: jnz 1176e ; relative offset = 17
 1175d: mov  ecx 0x00000020
 11762: lea  r13 
 11766: mov  [rbx] cx
 11769: jmp 110a8 ; relative offset = -1734
 1176e: UNKNOWN-INSTRUCTION
 1176f: mov  ebp 0x000000b8
 11774: UNKNOWN-INSTRUCTION
 11775: jz 11065 ; relative offset = -1814
 1177b: mov  rcx [48 + rsp]
 11780: mov  [0x000000e4 + rsp] 0x00
 11788: lea  r13 
 11790: mov  rsi 0xcccccccccccccccd
 1179a: UNKNOWN-INSTRUCTION
 1179c: leave 
 1179d: js 1183d ; relative offset = 154
 117a3: nop  [0 + rax + rax * 1]
 117a8: mov  rax rcx
 117ab: sub  r13 0x01
 117af: mul  rsp
 117b2: shr  rdx 0x03
 117b6: lea  rax 
 117ba: add  rax rax
 117bd: sub  rcx rax
 117c0: add  ecx 0x30
 117c3: mov  [r13 + 0] cl
 117c7: mov  rcx rdx
 117ca: UNKNOWN-INSTRUCTION
 117cd: jnz 117a8 ; relative offset = -39
 117cf: jmp 1106c ; relative offset = -1896
 117d4: xor  eax eax
 117d6: UNKNOWN-INSTRUCTION
 117da: add  [rax] eax
 117dc: UNKNOWN-INSTRUCTION
 117dd: mov  ecx edx
 117df: jz 11830 ; relative offset = 79
 117e1: movsxd  rdx [80 + rsp]
 117e6: lea  rax 
 117ea: lea  rdx 
 117ee: lea  rax 
 117f5: sal  rdx 0x07
 117f9: add  rdx rax
 117fc: sub  rsp 0x08
 11800: xor  r9d r9d
 11803: xor  r8d r8d
 11806: mov  esi 0x000003e9
 1180b: push  ecx
 1180c: mov  rdi rbx
 1180f: mov  rcx r13
 11812: push  edi
 11814: UNKNOWN-INSTRUCTION
 11815: jmp  rax
 11817: UNKNOWN-INSTRUCTION
 1181b: add  rsp 0x20
 1181f: UNKNOWN-INSTRUCTION
 11821: ror  [rdi] 0x84
 11824: UNKNOWN-INSTRUCTION
 11827: dec  [rax + 1]
 1182a: ret 
 1182b: jmp 1175d ; relative offset = -211
 11830: lea  rdx 
 11837: mov  rdx [rdx + rax * 8]
 1183b: jmp 117fc ; relative offset = -65
 1183d: mov  rsi r13
 11840: mov  edi 0x00000030
 11845: mov  rax 0x6666666666666667
 1184f: nop 
 11850: mov  rax rcx
 11853: mov  r13 rsi
 11856: sub  rsi 0x01
 1185a: imul  r8
 1185d: mov  rax rcx
 11860: sar  rax 0x3f
 11864: sar  rdx 0x02
 11868: sub  rdx rax
 1186b: lea  rax 
 1186f: lea  eax 
 11872: sub  eax ecx
 11874: mov  rcx rdx
 11877: mov  [rsi] al
 11879: UNKNOWN-INSTRUCTION
 1187c: jnz 11850 ; relative offset = -46
 1187e: mov  [rsi + 255] 0x2d
 11882: sub  r13 0x02
 11886: jmp 1106c ; relative offset = -2079
 1188b: mov  eax 0x00000001
 11890: jmp 117d6 ; relative offset = -191
 11895: call 4890 ; relative offset = -53258
 1189a: jmp 4d0f ; relative offset = -52112
 1189f: nop 
 118a0: cmp  [RIP + 0x00010a65] 0x04
 118a7: UNKNOWN-INSTRUCTION
 118a9: or  unknown 0x04
 118ab: UNKNOWN-INSTRUCTION
 118ad: push  edi
 118af: lea  rdx 
 118b6: push  esi
 118b8: push  ebp
 118ba: push  esp
 118bc: push  ebp
 118bd: push  ebx
 118be: sub  rsp 0x28
 118c2: mov  eax [RIP + 0x00010a44]
 118c8: movsxd  rax [rdx + rax * 4]
 118cc: add  rax rdx
 118cf: UNKNOWN-INSTRUCTION
 118d0: jmp  rax
 118d2: UNKNOWN-INSTRUCTION
 118d3: nop  [0 + rax + rax * 1]
 118d8: cmp  [RIP + 0x00010ba0] 0x00
 118e0: jz 11c18 ; relative offset = 818
 118e6: xor  edi edi
 118e8: call e190 ; relative offset = -14173
 118ed: lea  rdx 
 118f1: mov  [rsp] rax
 118f5: mov  rax [RIP + 0x00010a4c]
 118fc: lea  r14 
 11901: mov  rax [RIP + 0x00010b48]
 11908: mov  rbp [rax]
 1190b: mov  rdi rbp
 1190e: call d900 ; relative offset = -16403
 11913: xor  esi esi
 11915: mov  rdi rbp
 11918: mov  r15 rax
 1191b: mov  rax [r14 + 16]
 1191f: mov  r12 [rax]
 11922: call 16ea0 ; relative offset = 21881
 11927: cmp  [RIP + 0x00010c99] 0x01
 1192f: jna 11c4f ; relative offset = 794
 11935: mov  rax [RIP + 0x0001066c]
 1193c: xor  r13d r13d
 1193f: mov  ebx 0x00000001
 11944: mov  [16 + rsp] rax
 11949: jmp 119ae ; relative offset = 99
 1194b: nop  [0 + rax + rax * 1]
 11950: mov  rax [16 + rsp]
 11955: mov  rdi [rax]
 11958: mov  rax [rdi + 40]
 1195c: UNKNOWN-INSTRUCTION
 11960: jnb 11c8f ; relative offset = 809
 11966: lea  rdx 
 1196a: xor  r13d r13d
 1196d: mov  [rdi + 40] rdx
 11971: mov  [rax] 0x0a
 11974: mov  rax [RIP + 0x00010ad5]
 1197b: mov  rsi r13
 1197e: mov  r12 [rax + rbx * 8]
 11982: add  rbx 0x01
 11986: mov  rdi r12
 11989: call 16ea0 ; relative offset = 21778
 1198e: mov  rdi r12
 11991: call d900 ; relative offset = -16534
 11996: UNKNOWN-INSTRUCTION
 11998: sbb  eax 0x00010c2b
 1199d: mov  r15 rax
 119a0: mov  rax [r14 + 16]
 119a4: mov  r12 [rax + rbp * 8]
 119a8: jnb 11c60 ; relative offset = 690
 119ae: mov  rax rbx
 119b1: xor  edx edx
 119b3: div  [rsp]
 119b7: mov  rbp rdx
 119ba: UNKNOWN-INSTRUCTION
 119bd: jz 11950 ; relative offset = -111
 119bf: add  r12 r13
 119c2: lea  rdi 
 119c6: mov  rsi r12
 119c9: mov  r13 r12
 119cc: call 71d0 ; relative offset = -43009
 119d1: jmp 11974 ; relative offset = -95
 119d3: nop  [0 + rax + rax * 1]
 119d8: mov  edi 0x0000002c
 119dd: add  rsp 0x28
 119e1: pop  ebx
 119e2: pop  ebp
 119e3: pop  esp
 119e5: pop  ebp
 119e7: pop  esi
 119e9: pop  edi
 119eb: jmp db00 ; relative offset = -16112
 119f0: cmp  [RIP + 0x00010bd0] 0x00
 119f8: jz 11c06 ; relative offset = 520
 119fe: mov  rax [RIP + 0x000105a3]
 11a05: lea  r13 
 11a0c: xor  ebx ebx
 11a0e: lea  r12 
 11a12: mov  [16 + rsp] rax
 11a17: lea  rbp 
 11a1c: jmp 11a6a ; relative offset = 76
 11a1e: UNKNOWN-INSTRUCTION
 11a1f: nop 
 11a20: mov  rax [RIP + 0x00010a29]
 11a27: mov  rdi [rax + rbx * 8]
 11a2b: call 10b80 ; relative offset = -3760
 11a30: mov  rax [16 + rsp]
 11a35: mov  rdi [rax]
 11a38: mov  rax [rdi + 40]
 11a3c: UNKNOWN-INSTRUCTION
 11a40: jnb 11c28 ; relative offset = 482
 11a46: lea  rdx 
 11a4a: mov  [rdi + 40] rdx
 11a4e: mov  [rax] 0x0a
 11a51: add  [RIP + 0x0001089f] 0x01
 11a59: add  rbx 0x01
 11a5d: UNKNOWN-INSTRUCTION
 11a5f: sbb  eax 0x00010b64
 11a64: jna 11c06 ; relative offset = 412
 11a6a: UNKNOWN-INSTRUCTION
 11a6e: add  [rax] eax
 11a70: UNKNOWN-INSTRUCTION
 11a71: jz 11a20 ; relative offset = -83
 11a73: mov  edi 0x00000004
 11a78: call c120 ; relative offset = -22877
 11a7d: UNKNOWN-INSTRUCTION
 11a7f: jz 11a20 ; relative offset = -97
 11a81: mov  rdi r13
 11a84: call c2a0 ; relative offset = -22505
 11a89: mov  rdi r12
 11a8c: call c2a0 ; relative offset = -22513
 11a91: mov  rdi rbp
 11a94: call c2a0 ; relative offset = -22521
 11a99: jmp 11a20 ; relative offset = -123
 11a9b: nop  [0 + rax + rax * 1]
 11aa0: cmp  [RIP + 0x00010b20] 0x00
 11aa8: jz 11c06 ; relative offset = 344
 11aae: mov  rax [RIP + 0x000104f3]
 11ab5: xor  ebx ebx
 11ab7: mov  [16 + rsp] rax
 11abc: nop  [rax + 0]
 11ac0: mov  rax [RIP + 0x00010989]
 11ac7: xor  esi esi
 11ac9: mov  rdi [rax + rbx * 8]
 11acd: call 16ea0 ; relative offset = 21454
 11ad2: mov  rax [16 + rsp]
 11ad7: mov  rdi [rax]
 11ada: mov  rax [rdi + 40]
 11ade: UNKNOWN-INSTRUCTION
 11ae2: jnb 11c40 ; relative offset = 344
 11ae8: lea  rdx 
 11aec: mov  [rdi + 40] rdx
 11af0: mov  [rax] 0x0a
 11af3: add  rbx 0x01
 11af7: UNKNOWN-INSTRUCTION
 11af9: sbb  eax 0x00010aca
 11afe: jnbe  0xc0
 11b00: jmp 11c06 ; relative offset = 257
 11b05: nop  [rax]
 11b08: cmp  [RIP + 0x00010970] 0x00
 11b10: jz 11c18 ; relative offset = 258
 11b16: mov  edi 0x00000001
 11b1b: call e190 ; relative offset = -14736
 11b20: lea  rdx 
 11b24: mov  rcx rax
 11b27: mov  rax [RIP + 0x0001081a]
 11b2e: lea  r15 
 11b33: mov  rax [RIP + 0x00010a8e]
 11b3a: xor  edx edx
 11b3c: div  rcx
 11b3f: cmp  rdx 0x01
 11b43: sbb  rax 0xff
 11b47: mov  [8 + rsp] rax
 11b4c: UNKNOWN-INSTRUCTION
 11b4e: ror  [rdi] 0x84
 11b51: mov  cl 0x00
 11b53: UNKNOWN-INSTRUCTION
 11b55: mov  [24 + rsp] 0x00000000
 11b5e: mov  rax [RIP + 0x00010443]
 11b65: mov  [16 + rsp] rax
 11b6a: UNKNOWN-INSTRUCTION
 11b6b: nop  [0 + rax + rax * 1]
 11b70: mov  r12 [24 + rsp]
 11b75: xor  r13d r13d
 11b78: xor  r14d r14d
 11b7b: jmp 11b92 ; relative offset = 21
 11b7d: nop  [rax]
 11b80: add  rbp r14
 11b83: lea  rdi 
 11b87: mov  rsi rbp
 11b8a: mov  r14 rbp
 11b8d: call 71d0 ; relative offset = -43458
 11b92: mov  rax [RIP + 0x000108b7]
 11b99: mov  rdi [rax + r12 * 8]
 11b9d: mov  [rsp] rdi
 11ba1: call d900 ; relative offset = -17062
 11ba6: mov  rdi [rsp]
 11baa: mov  rsi r14
 11bad: mov  rbx rax
 11bb0: mov  rax [r15 + 16]
 11bb4: mov  rbp [rax + r13 * 1]
 11bb8: add  r13 0x08
 11bbc: call 16ea0 ; relative offset = 21215
 11bc1: add  r12 [8 + rsp]
 11bc6: UNKNOWN-INSTRUCTION
 11bc8: and  eax 0x000109fb
 11bcd: jnae 11b80 ; relative offset = -79
 11bcf: mov  rax [16 + rsp]
 11bd4: mov  rdi [rax]
 11bd7: mov  rax [rdi + 40]
 11bdb: UNKNOWN-INSTRUCTION
 11bdf: jnb 11c80 ; relative offset = 155
 11be5: lea  rdx 
 11be9: mov  [rdi + 40] rdx
 11bed: mov  [rax] 0x0a
 11bf0: add  [24 + rsp] 0x01
 11bf6: mov  rax [24 + rsp]
 11bfb: UNKNOWN-INSTRUCTION
 11bfd: and  unknown 0x08
 11c00: jnz 11b70 ; relative offset = -150
 11c06: add  rsp 0x28
 11c0a: pop  ebx
 11c0b: pop  ebp
 11c0c: pop  esp
 11c0e: pop  ebp
 11c10: pop  esi
 11c12: pop  edi
 11c14: ret 
 11c15: nop  [rax]
 11c18: mov  edi 0x00000020
 11c1d: jmp 119dd ; relative offset = -581
 11c22: UNKNOWN-INSTRUCTION
 11c23: nop  [0 + rax + rax * 1]
 11c28: mov  esi 0x0000000a
 11c2d: call 4900 ; relative offset = -54066
 11c32: jmp 11a51 ; relative offset = -486
 11c37: UNKNOWN-INSTRUCTION
 11c38: nop  [0x00000000 + rax + rax * 1]
 11c40: mov  esi 0x0000000a
 11c45: call 4900 ; relative offset = -54090
 11c4a: jmp 11af3 ; relative offset = -348
 11c4f: mov  rax [RIP + 0x00010352]
 11c56: mov  [16 + rsp] rax
 11c5b: nop  [0 + rax + rax * 1]
 11c60: mov  rax [16 + rsp]
 11c65: mov  rdi [rax]
 11c68: mov  rax [rdi + 40]
 11c6c: UNKNOWN-INSTRUCTION
 11c70: jnb 11ca1 ; relative offset = 47
 11c72: lea  rdx 
 11c76: mov  [rdi + 40] rdx
 11c7a: mov  [rax] 0x0a
 11c7d: jmp 11c06 ; relative offset = -121
 11c7f: nop 
 11c80: mov  esi 0x0000000a
 11c85: call 4900 ; relative offset = -54154
 11c8a: jmp 11bf0 ; relative offset = -159
 11c8f: mov  esi 0x0000000a
 11c94: xor  r13d r13d
 11c97: call 4900 ; relative offset = -54172
 11c9c: jmp 11974 ; relative offset = -813
 11ca1: add  rsp 0x28
 11ca5: mov  esi 0x0000000a
 11caa: pop  ebx
 11cab: pop  ebp
 11cac: pop  esp
 11cae: pop  ebp
 11cb0: pop  esi
 11cb2: pop  edi
 11cb4: jmp 4900 ; relative offset = -54201
 11cb9: ret 
 11cba: UNKNOWN-INSTRUCTION
 11cbb: nop  [0 + rax + rax * 1]
 11cc0: push  edi
 11cc2: push  esi
 11cc4: mov  r14 rsi
 11cc7: push  ebp
 11cc9: mov  r13 rdi
 11ccc: push  esp
 11cce: push  ebp
 11ccf: push  ebx
 11cd0: sub  esp 0x00000318
 11cd7: mov  [20 + rsp] edx
 11cdb: mov  [16 + rsp] dl
 11cdf: UNKNOWN-INSTRUCTION
 11ce0: mov  rax 0x00000028
 11ce8: mov  [0x00000308 + rsp] rax
 11cf0: xor  eax eax
 11cf2: call 4710 ; relative offset = -54759
 11cf7: mov  rdi r13
 11cfa: mov  [rax] 0x00000000
 11d00: mov  rbp rax
 11d03: call 4830 ; relative offset = -54488
 11d08: UNKNOWN-INSTRUCTION
 11d0a: ror  [rdi] 0x84
 11d0d: mov  sil 0x06
 11d0f: UNKNOWN-INSTRUCTION
 11d11: mov  r15 [RIP + 0x00010a20]
 11d18: mov  r12 rax
 11d1b: UNKNOWN-INSTRUCTION
 11d1d: dec  [rdi]
 11d1f: UNKNOWN-INSTRUCTION
 11d20: jnz 11d23 ; relative offset = 1
 11d22: UNKNOWN-INSTRUCTION
 11d24: mov  rdi rax
 11d27: call 4a10 ; relative offset = -54044
 11d2c: lea  rdx 
 11d31: mov  eax 0x00000100
 11d37: mov  edi eax
 11d39: UNKNOWN-INSTRUCTION
 11d3a: ror  [rdi] 0x88
 11d3d: ret 
 11d3e: add  al [rax]
 11d40: UNKNOWN-INSTRUCTION
 11d41: mov  ecx 0x00001000
 11d46: lea  rsi 
 11d4d: call 7700 ; relative offset = -42578
 11d52: UNKNOWN-INSTRUCTION
 11d53: ror  [rdi] 0x88
 11d56: leave 
 11d57: add  al [rax]
 11d59: UNKNOWN-INSTRUCTION
 11d5a: mov  rax [120 + rsp]
 11d5f: mov  edi 0x00000010
 11d64: mov  rbx [112 + rsp]
 11d69: mov  [8 + rsp] rax
 11d6e: call 4690 ; relative offset = -55011
 11d73: mov  r8 rax
 11d76: UNKNOWN-INSTRUCTION
 11d78: ror  [rdi] 0x84
 11d7b: mov  esp 0x48000006
 11d80: mov  eax [8 + rsp]
 11d84: mov  [r8 + 8] rbx
 11d88: mov  rsi r8
 11d8b: mov  rdi r15
 11d8e: lea  rdx 
 11d93: mov  [24 + rsp] r8
 11d98: mov  [r8] rax
 11d9b: call cb00 ; relative offset = -21152
 11da0: cmp  eax 0xff
 11da3: jz 1243b ; relative offset = 1682
 11da9: UNKNOWN-INSTRUCTION
 11daa: ror  [rdi] 0x85
 11dad: mov  sil 0x00
 11daf: UNKNOWN-INSTRUCTION
 11db1: mov  rax [40 + rsp]
 11db6: UNKNOWN-INSTRUCTION
 11db8: ror  [rdi] 0x84
 11dbb: jnge 11dc3 ; relative offset = 6
 11dbd: UNKNOWN-INSTRUCTION
 11dbf: mov  r8 [24 + rsp]
 11dc4: UNKNOWN-INSTRUCTION
 11dc6: ror  [rdi] 0x84
 11dc9: UNKNOWN-INSTRUCTION
 11dcd: mov  rdi r8
 11dd0: call 4680 ; relative offset = -55125
 11dd5: mov  rsi r13
 11dd8: lea  rdx 
 11ddd: xor  edi edi
 11ddf: mov  rax 0x0400000000000000
 11de9: mov  [48 + rsp] 0x00000003
 11df2: mov  [56 + rsp] rax
 11df7: mov  [64 + rsp] 0x00000000
 11e00: mov  [72 + rsp] 0x00000000
 11e09: mov  [80 + rsp] 0x00000000
 11e12: mov  [88 + rsp] 0x00000000
 11e1b: mov  [96 + rsp] 0x00000000
 11e24: call 14900 ; relative offset = 10967
 11e29: mov  edx 0x00000005
 11e2e: lea  rsi 
 11e35: xor  edi edi
 11e37: mov  r13 rax
 11e3a: call 4860 ; relative offset = -54751
 11e3f: mov  rcx r13
 11e42: xor  esi esi
 11e44: xor  edi edi
 11e46: mov  rdx rax
 11e49: xor  eax eax
 11e4b: call 4ba0 ; relative offset = -53936
 11e50: mov  rdi r12
 11e53: call 4990 ; relative offset = -54472
 11e58: mov  [RIP + 0x0001090a] 0x00000002
 11e62: jmp 121c4 ; relative offset = 861
 11e67: mov  rax [RIP + 0x0001088a]
 11e6e: mov  rdx [RIP + 0x0001088b]
 11e75: sub  rdx rax
 11e78: cmp  rdx 0x0f
 11e7c: jna 122bc ; relative offset = 1082
 11e82: mov  rcx [8 + rsp]
 11e87: lea  rdx 
 11e8b: mov  [RIP + 0x00010866] rdx
 11e92: mov  [rax + 8] rbx
 11e96: mov  [rax] rcx
 11e99: call a280 ; relative offset = -31774
 11e9e: UNKNOWN-INSTRUCTION
 11ea2: add  [rax] eax
 11ea4: UNKNOWN-INSTRUCTION
 11ea5: jz 11ffa ; relative offset = 335
 11eab: UNKNOWN-INSTRUCTION
 11ead: jz 11eb0 ; relative offset = 1
 11eaf: add  [rax] eax
 11eb1: UNKNOWN-INSTRUCTION
 11eb2: mov  rbx [RIP + 0x000100ef]
 11eb9: jnz 11edf ; relative offset = 36
 11ebb: mov  rdi [rbx]
 11ebe: mov  rax [rdi + 40]
 11ec2: UNKNOWN-INSTRUCTION
 11ec6: jnb 1240e ; relative offset = 1346
 11ecc: lea  rdx 
 11ed0: mov  [rdi + 40] rdx
 11ed4: mov  [rax] 0x0a
 11ed7: add  [RIP + 0x00010419] 0x01
 11edf: UNKNOWN-INSTRUCTION
 11ee1: rol  [rdi] cl
 11ee3: add  [rax] eax
 11ee5: UNKNOWN-INSTRUCTION
 11ee6: mov  [RIP + 0x00010139] 0x00
 11eed: jnz 123a1 ; relative offset = 1198
 11ef3: xor  r15d r15d
 11ef6: UNKNOWN-INSTRUCTION
 11ef8: jmp 11f00 ; relative offset = 6
 11efa: add  [rax] eax
 11efc: UNKNOWN-INSTRUCTION
 11efd: jnz 12363 ; relative offset = 1120
 11f03: UNKNOWN-INSTRUCTION
 11f06: mov  rsi [RIP + 0x00010553]
 11f0d: mov  edx 0xffffffff
 11f12: lea  r9 
 11f19: UNKNOWN-INSTRUCTION
 11f1d: sub  rsp 0x08
 11f21: mov  eax 0x00000001
 11f27: xor  ecx ecx
 11f29: push  edi
 11f2b: mov  rdi r14
 11f2e: call fdf0 ; relative offset = -8515
 11f33: mov  rdi r15
 11f36: call 4680 ; relative offset = -55483
 11f3b: mov  rcx [rbx]
 11f3e: mov  esi 0x00000001
 11f43: mov  edx 0x00000002
 11f48: lea  rdi 
 11f4f: call 4b00 ; relative offset = -54356
 11f54: add  [RIP + 0x0001039c] 0x02
 11f5c: pop  ecx
 11f5d: pop  esi
 11f5e: mov  [8 + rsp] 0x00000000
 11f67: movzx  eax [16 + rsp]
 11f6c: mov  [16 + rsp] eax
 11f70: mov  [rbp + 0] 0x00000000
 11f77: mov  rdi r12
 11f7a: call 4a90 ; relative offset = -54511
 11f7f: mov  rbx rax
 11f82: UNKNOWN-INSTRUCTION
 11f84: ror  [rdi] 0x84
 11f87: UNKNOWN-INSTRUCTION
 11f8b: lea  r14 
 11f8f: mov  eax [RIP + 0x00010503]
 11f95: cmp  eax 0x02
 11f98: jz 12210 ; relative offset = 626
 11f9e: UNKNOWN-INSTRUCTION
 11f9f: jpo 11fb4 ; relative offset = 19
 11fa1: UNKNOWN-INSTRUCTION
 11fa2: jz 121f0 ; relative offset = 584
 11fa8: UNKNOWN-INSTRUCTION
 11fa9: ror  [rdi] 0x85
 11fac: UNKNOWN-INSTRUCTION
 11fad: add  al [rax]
 11faf: UNKNOWN-INSTRUCTION
 11fb0: mov  r15 [RIP + 0x000104d1]
 11fb7: UNKNOWN-INSTRUCTION
 11fb9: push  [rbp + 25]
 11fbc: jmp 12210 ; relative offset = 591
 11fc1: nop  [rax + 0x00000000]
 11fc8: mov  r15 [r15 + 8]
 11fcc: UNKNOWN-INSTRUCTION
 11fce: dec  [rdi]
 11fd0: UNKNOWN-INSTRUCTION
 11fd2: add  al [rax]
 11fd4: UNKNOWN-INSTRUCTION
 11fd5: mov  rdi [r15]
 11fd8: mov  edx 0x00000004
 11fdd: mov  rsi r14
 11fe0: call 4950 ; relative offset = -54933
 11fe5: UNKNOWN-INSTRUCTION
 11fe7: jnz 11fc8 ; relative offset = -33
 11fe9: nop  [rax + 0x00000000]
 11ff0: call c340 ; relative offset = -23733
 11ff5: jmp 11f70 ; relative offset = -138
 11ffa: UNKNOWN-INSTRUCTION
 11ffe: add  [rax] eax
 12000: UNKNOWN-INSTRUCTION
 12001: jz 11f5e ; relative offset = -169
 12007: jmp 11eab ; relative offset = -353
 1200c: xor  ecx ecx
 1200e: mov  rsi r13
 12011: mov  edi 0xffffff9c
 12016: call 7700 ; relative offset = -43291
 1201b: UNKNOWN-INSTRUCTION
 1201c: ror  [rdi] 0x89
 1201f: UNKNOWN-INSTRUCTION
 12022: push  [rcx]
 12024: UNKNOWN-INSTRUCTION
 12025: mov  edx 0x00000005
 1202a: lea  rsi 
 12031: call 4860 ; relative offset = -55254
 12036: movzx  edi [20 + rsp]
 1203b: mov  rdx r13
 1203e: mov  rsi rax
 12041: call a160 ; relative offset = -32486
 12046: mov  rax [0x00000308 + rsp]
 1204e: UNKNOWN-INSTRUCTION
 1204f: sub  rax 0x00000028
 12057: jnz 12440 ; relative offset = 995
 1205d: add  esp 0x00000318
 12064: mov  rdi r12
 12067: pop  ebx
 12068: pop  ebp
 12069: pop  esp
 1206b: pop  ebp
 1206d: pop  esi
 1206f: pop  edi
 12071: jmp 4990 ; relative offset = -55014
 12076: UNKNOWN-INSTRUCTION
 12078: nop  [0x00000000 + rax + rax * 1]
 12080: mov  edx [rbp + 0]
 12083: UNKNOWN-INSTRUCTION
 12085: jz 120b3 ; relative offset = 44
 12087: xor  edi edi
 12089: mov  edx 0x00000005
 1208e: lea  rsi 
 12095: call 4860 ; relative offset = -55354
 1209a: mov  edi [16 + rsp]
 1209e: mov  rdx r13
 120a1: mov  rsi rax
 120a4: call a160 ; relative offset = -32585
 120a9: cmp  [rbp + 0] 0x4b
 120ad: jz 11ff0 ; relative offset = -195
 120b3: mov  rdi r12
 120b6: call 4990 ; relative offset = -55083
 120bb: UNKNOWN-INSTRUCTION
 120bc: ror  [rdi] 0x85
 120bf: and  eax 0xe8000002
 120c4: clc 
 120c5: mov  ebp 0x3d80ffff
 120ca: jno 120d2 ; relative offset = 6
 120cc: add  [rax] eax
 120ce: UNKNOWN-INSTRUCTION
 120cf: jnz 122d9 ; relative offset = 516
 120d5: mov  eax [RIP + 0x00010231]
 120db: UNKNOWN-INSTRUCTION
 120dd: jz 120ec ; relative offset = 13
 120df: UNKNOWN-INSTRUCTION
 120e1: sub  al [rdx]
 120e3: add  [rax] eax
 120e5: UNKNOWN-INSTRUCTION
 120e6: jz 121b6 ; relative offset = 202
 120ec: UNKNOWN-INSTRUCTION
 120ef: add  eax 0x48000001
 120f4: mov  ebx [RIP + 0x0000feae]
 120fa: jnz 1233d ; relative offset = 573
 12100: mov  edx 0x00000005
 12105: lea  rsi 
 1210c: xor  edi edi
 1210e: call 4860 ; relative offset = -55475
 12113: mov  rsi [rbx]
 12116: mov  rbp rax
 12119: mov  rdi rax
 1211c: call 49d0 ; relative offset = -55121
 12121: mov  rdi rbp
 12124: call 4880 ; relative offset = -55465
 12129: mov  rdi [rbx]
 1212c: add  [RIP + 0x000101c5] rax
 12133: mov  rax [rdi + 40]
 12137: UNKNOWN-INSTRUCTION
 1213b: jnb 1241d ; relative offset = 732
 12141: lea  rdx 
 12145: mov  [rdi + 40] rdx
 12149: mov  [rax] 0x20
 1214c: mov  edx [RIP + 0x00010166]
 12152: mov  rdi [8 + rsp]
 12157: mov  ecx 0x00000200
 1215c: lea  rsi 
 12161: mov  r8 [RIP + 0x00010148]
 12168: add  [RIP + 0x00010188] 0x01
 12170: call cd20 ; relative offset = -21589
 12175: mov  rsi [rbx]
 12178: mov  rbp rax
 1217b: mov  rdi rax
 1217e: call 49d0 ; relative offset = -55219
 12183: mov  rdi rbp
 12186: call 4880 ; relative offset = -55563
 1218b: mov  rdi [rbx]
 1218e: add  [RIP + 0x00010163] rax
 12195: mov  rax [rdi + 40]
 12199: UNKNOWN-INSTRUCTION
 1219d: jnb 1242c ; relative offset = 649
 121a3: lea  rdx 
 121a7: mov  [rdi + 40] rdx
 121ab: mov  [rax] 0x0a
 121ae: add  [RIP + 0x00010142] 0x01
 121b6: cmp  [RIP + 0x0001040a] 0x00
 121be: jnz 12310 ; relative offset = 332
 121c4: mov  rax [0x00000308 + rsp]
 121cc: UNKNOWN-INSTRUCTION
 121cd: sub  rax 0x00000028
 121d5: jnz 12440 ; relative offset = 613
 121db: add  esp 0x00000318
 121e2: pop  ebx
 121e3: pop  ebp
 121e4: pop  esp
 121e6: pop  ebp
 121e8: pop  esi
 121ea: pop  edi
 121ec: ret 
 121ed: nop  [rax]
 121f0: UNKNOWN-INSTRUCTION
 121f1: ror  [rdi] 0x84
 121f4: clc 
 121f5: UNKNOWN-INSTRUCTION
 121f7: push  [rcx]
 121f9: rol  [rax + 0x0f2e147b] 0x94
 12200: rol  [rax + 0x0014037c] 0x0f
 12207: UNKNOWN-INSTRUCTION
 12208: in  unknown 0xfd
 1220a: UNKNOWN-INSTRUCTION
 1220b: dec  [rdi]
 1220d: UNKNOWN-INSTRUCTION
 12210: mov  r15 [RIP + 0x00010279]
 12217: UNKNOWN-INSTRUCTION
 12219: push  [rbp + 13]
 1221c: jmp 12248 ; relative offset = 42
 1221e: UNKNOWN-INSTRUCTION
 1221f: nop 
 12220: mov  r15 [r15 + 8]
 12224: UNKNOWN-INSTRUCTION
 12226: push  [73 + rdi + rbx * 1]
 1222a: mov  edi [rdi]
 1222c: mov  edx 0x00000004
 12231: mov  rsi r14
 12234: call 4950 ; relative offset = -55529
 12239: UNKNOWN-INSTRUCTION
 1223b: jnz 12220 ; relative offset = -29
 1223d: jmp 11ff0 ; relative offset = -594
 12242: UNKNOWN-INSTRUCTION
 12243: nop  [0 + rax + rax * 1]
 12248: movzx  eax [rbx + 18]
 1224c: xor  esi esi
 1224e: sub  eax 0x01
 12251: cmp  unknown 0x0d
 12253: jnbe  0x0d
 12255: movzx  eax al
 12258: lea  rcx 
 1225f: mov  esi [rcx + rax * 4]
 12262: xor  edx edx
 12264: mov  rcx r13
 12267: mov  rdi r14
 1226a: call eb10 ; relative offset = -14175
 1226f: add  [8 + rsp] rax
 12274: cmp  [RIP + 0x00010091] 0x01
 1227b: jnz 11ff0 ; relative offset = -657
 12281: cmp  [RIP + 0x0001119c] 0xff
 12288: jnz 11ff0 ; relative offset = -670
 1228e: UNKNOWN-INSTRUCTION
 12290: jpo 12292 ; relative offset = 0
 12292: add  [rax] eax
 12294: UNKNOWN-INSTRUCTION
 12295: jnz 11ff0 ; relative offset = -683
 1229b: UNKNOWN-INSTRUCTION
 1229e: add  unknown 0x01
 122a0: UNKNOWN-INSTRUCTION
 122a2: jnz 11ff0 ; relative offset = -696
 122a8: call dec0 ; relative offset = -17389
 122ad: call 118a0 ; relative offset = -2578
 122b2: call a280 ; relative offset = -32823
 122b7: jmp 11ff0 ; relative offset = -716
 122bc: mov  esi 0x00000010
 122c1: lea  rdi 
 122c8: call fcc0 ; relative offset = -9741
 122cd: mov  rax [RIP + 0x00010424]
 122d4: jmp 11e82 ; relative offset = -1111
 122d9: xor  esi esi
 122db: mov  rdi r13
 122de: call e760 ; relative offset = -15235
 122e3: jmp 120d5 ; relative offset = -531
 122e8: xor  edi edi
 122ea: mov  edx 0x00000005
 122ef: lea  rsi 
 122f6: call 4860 ; relative offset = -55963
 122fb: movzx  edi [20 + rsp]
 12300: mov  rdx r13
 12303: mov  rsi rax
 12306: call a160 ; relative offset = -33195
 1230b: jmp 120c3 ; relative offset = -589
 12310: mov  rax [0x00000308 + rsp]
 12318: UNKNOWN-INSTRUCTION
 12319: sub  rax 0x00000028
 12321: jnz 12440 ; relative offset = 281
 12327: add  esp 0x00000318
 1232e: pop  ebx
 1232f: pop  ebp
 12330: pop  esp
 12332: pop  ebp
 12334: pop  esi
 12336: pop  edi
 12338: jmp 118a0 ; relative offset = -2717
 1233d: mov  rcx [rbx]
 12340: mov  edx 0x00000002
 12345: mov  esi 0x00000001
 1234a: lea  rdi 
 12351: call 4b00 ; relative offset = -55382
 12356: add  [RIP + 0x0000ff9a] 0x02
 1235e: jmp 12100 ; relative offset = -611
 12363: mov  rdi r13
 12366: call 12520 ; relative offset = 437
 1236b: mov  r15 rax
 1236e: UNKNOWN-INSTRUCTION
 12370: ror  [rdi] 0x85
 12373: mov  bx 
 12375: UNKNOWN-INSTRUCTION
 12376: push  [rcx]
 12378: UNKNOWN-INSTRUCTION
 12379: mov  edx 0x00000005
 1237e: lea  rsi 
 12385: call 4860 ; relative offset = -56106
 1238a: mov  rdx r13
 1238d: mov  rsi rax
 12390: movzx  eax [20 + rsp]
 12395: mov  edi eax
 12397: call a160 ; relative offset = -33340
 1239c: jmp 11f03 ; relative offset = -1182
 123a1: mov  rcx [rbx]
 123a4: mov  edx 0x00000002
 123a9: mov  esi 0x00000001
 123ae: lea  rdi 
 123b5: call 4b00 ; relative offset = -55482
 123ba: add  [RIP + 0x0000ff36] 0x02
 123c2: jmp 11ef3 ; relative offset = -1236
 123c7: lea  rsi 
 123ce: mov  edx 0x00000005
 123d3: xor  edi edi
 123d5: call 4860 ; relative offset = -56186
 123da: mov  rsi rax
 123dd: mov  rax [0x00000308 + rsp]
 123e5: UNKNOWN-INSTRUCTION
 123e6: sub  rax 0x00000028
 123ee: jnz 12440 ; relative offset = 80
 123f0: movzx  edi [20 + rsp]
 123f5: add  esp 0x00000318
 123fc: mov  rdx r13
 123ff: pop  ebx
 12400: pop  ebp
 12401: pop  esp
 12403: pop  ebp
 12405: pop  esi
 12407: pop  edi
 12409: jmp a160 ; relative offset = -33454
 1240e: mov  esi 0x0000000a
 12413: call 4900 ; relative offset = -56088
 12418: jmp 11ed7 ; relative offset = -1350
 1241d: mov  esi 0x00000020
 12422: call 4900 ; relative offset = -56103
 12427: jmp 1214c ; relative offset = -736
 1242c: mov  esi 0x0000000a
 12431: call 4900 ; relative offset = -56118
 12436: jmp 121ae ; relative offset = -653
 1243b: call ddd0 ; relative offset = -18032
 12440: call 4890 ; relative offset = -56245
 12445: UNKNOWN-INSTRUCTION
 12447: nop  [0x00000000 + rax + rax * 1]
 1244f: nop 
 12450: UNKNOWN-INSTRUCTION
 12454: push  edi
 12456: mov  r15 rdi
 12459: mov  edi 0x00000050
 1245e: push  esi
 12460: mov  r14 rdx
 12463: push  ebp
 12465: mov  r13 rcx
 12468: push  esp
 1246a: push  ebp
 1246b: mov  rbp r8
 1246e: push  ebx
 1246f: sub  rsp 0x08
 12473: call 4690 ; relative offset = -56808
 12478: mov  r12 rax
 1247b: UNKNOWN-INSTRUCTION
 1247e: jz 124fb ; relative offset = 123
 12480: lea  rbx 
 12487: mov  rdi rax
 1248a: mov  [rax + 40] rbx
 1248e: call c6c0 ; relative offset = -24019
 12493: UNKNOWN-INSTRUCTION
 12495: jz 12510 ; relative offset = 121
 12497: mov  rsi rbx
 1249a: mov  rdi r15
 1249d: call c750 ; relative offset = -23890
 124a2: mov  [16 + r12] rax
 124a7: mov  rbx rax
 124aa: UNKNOWN-INSTRUCTION
 124ad: jz 12510 ; relative offset = 97
 124af: mov  esi 0x00000010
 124b4: mov  rdi rax
 124b7: call 49e0 ; relative offset = -56028
 124bc: mov  [r12] rax
 124c0: UNKNOWN-INSTRUCTION
 124c3: jz 12510 ; relative offset = 75
 124c5: sal  rbx 0x04
 124c9: mov  [48 + r12] r14
 124ce: add  rax rbx
 124d1: mov  [56 + r12] r13
 124d6: mov  [8 + r12] rax
 124db: mov  [24 + r12] 0x00000000
 124e4: mov  [32 + r12] 0x00000000
 124ed: mov  [64 + r12] rbp
 124f2: mov  [72 + r12] 0x00000000
 124fb: add  rsp 0x08
 124ff: mov  rax r12
 12502: pop  ebx
 12503: pop  ebp
 12504: pop  esp
 12506: pop  ebp
 12508: pop  esi
 1250a: pop  edi
 1250c: ret 
 1250d: nop  [rax]
 12510: mov  rdi r12
 12513: xor  r12d r12d
 12516: call 4680 ; relative offset = -56987
 1251b: jmp 124fb ; relative offset = -34
 1251d: nop  [rax]
 12520: UNKNOWN-INSTRUCTION
 12524: push  edi
 12526: push  esi
 12528: push  ebp
 1252a: push  esp
 1252c: push  ebp
 1252d: push  ebx
 1252e: sub  esp 0x00000108
 12535: UNKNOWN-INSTRUCTION
 12536: mov  rax 0x00000028
 1253e: mov  [0x000000f8 + rsp] rax
 12546: xor  eax eax
 12548: UNKNOWN-INSTRUCTION
 1254a: dec  [rdi]
 1254c: UNKNOWN-INSTRUCTION
 1254d: mov  eax [RIP + 0xb60f0000]
 12553: UNKNOWN-INSTRUCTION
 12554: mov  r15 rdi
 12557: UNKNOWN-INSTRUCTION
 12558: ror  [rdi] cl
 1255a: UNKNOWN-INSTRUCTION
 1255c: add  eax 0xfa800000
 12561: UNKNOWN-INSTRUCTION
 12562: jz 12720 ; relative offset = 440
 12568: xor  esi esi
 1256a: xor  edi edi
 1256c: call 4980 ; relative offset = -56305
 12571: mov  r14 rax
 12574: UNKNOWN-INSTRUCTION
 12576: ror  [rdi] 0x84
 12579: and  unknown 0x05
 1257b: UNKNOWN-INSTRUCTION
 1257d: mov  rdi rax
 12580: call 4880 ; relative offset = -56581
 12585: lea  r12 
 12589: mov  rbp rax
 1258c: mov  rbx r12
 1258f: UNKNOWN-INSTRUCTION
 12591: dec  [rdi]
 12593: UNKNOWN-INSTRUCTION
 12595: jna 12a78 ; relative offset = 1245
 1259b: movzx  rdx [r15]
 1259f: UNKNOWN-INSTRUCTION
 125a0: ror  [rdi] cl
 125a2: UNKNOWN-INSTRUCTION
 125a3: sub  unknown 0x06
 125a5: UNKNOWN-INSTRUCTION
 125a7: lea  rax 
 125ac: mov  [32 + rsp] r15
 125b1: mov  r8 r15
 125b4: mov  [rsp] rax
 125b8: lea  rax 
 125bd: mov  [8 + rsp] 0x00000000
 125c6: mov  [40 + rsp] 0x00000000
 125cf: mov  [48 + rsp] 0x00000000
 125d8: mov  [24 + rsp] rax
 125dd: mov  eax edx
 125df: UNKNOWN-INSTRUCTION
 125e2: jnz 125fd ; relative offset = 25
 125e4: nop  [rax + 0]
 125e8: movzx  rax [r8 + 1]
 125ed: add  r8 0x01
 125f1: cmp  unknown 0x2f
 125f3: jz 125e8 ; relative offset = -13
 125f5: UNKNOWN-INSTRUCTION
 125f6: ror  [rdi] 0x84
 125f9: UNKNOWN-INSTRUCTION
 125fd: mov  r13 r8
 12600: mov  r15 r13
 12603: movzx  rdx [r13 + 1]
 12608: add  r13 0x01
 1260c: UNKNOWN-INSTRUCTION
 1260e: jz 12615 ; relative offset = 5
 12610: UNKNOWN-INSTRUCTION
 12613: jnz 12600 ; relative offset = -21
 12615: UNKNOWN-INSTRUCTION
 12618: jz 126f8 ; relative offset = 218
 1261e: mov  rbp r13
 12621: sub  rbp r8
 12624: cmp  rbp 0x01
 12628: jz 12750 ; relative offset = 290
 1262e: cmp  rbp 0x02
 12632: jnz 1263c ; relative offset = 8
 12634: cmp  unknown 0x2e
 12636: jz 12a08 ; relative offset = 972
 1263c: UNKNOWN-INSTRUCTION
 1263e: jnge 12664 ; relative offset = 36
 12640: jmp  [rdi]
 12642: jz 1264d ; relative offset = 9
 12644: mov  [r12] 0x2f
 12649: add  r12 0x01
 1264d: lea  rax 
 12651: UNKNOWN-INSTRUCTION
 12653: ret 
 12654: jnbe  0x57
 12656: sub  rbx r14
 12659: sub  r12 r14
 1265c: mov  [16 + rsp] r8
 12661: lea  rax 
 12666: add  ebx 0x00001000
 1266d: cmp  rbp 0x00001000
 12674: UNKNOWN-INSTRUCTION
 1267b: jnz 12686 ; relative offset = 9
 1267d: UNKNOWN-INSTRUCTION
 12680: jnz 12a50 ; relative offset = 970
 12686: mov  rdi r14
 12689: mov  rsi rbx
 1268c: call 4b10 ; relative offset = -56193
 12691: mov  r8 [16 + rsp]
 12696: UNKNOWN-INSTRUCTION
 12698: ror  [rcx + 137] 0xc6
 1269c: jnz 126a7 ; relative offset = 9
 1269e: UNKNOWN-INSTRUCTION
 126a1: jnz 129aa ; relative offset = 771
 126a7: add  rbx r14
 126aa: add  r12 r14
 126ad: mov  rdi r12
 126b0: mov  rsi r8
 126b3: lea  r12 
 126b7: mov  rdx rbp
 126ba: call 4a50 ; relative offset = -56431
 126bf: mov  [r12] 0x00
 126c4: mov  rsi [rsp]
 126c8: mov  rdi r14
 126cb: call 49a0 ; relative offset = -56624
 126d0: UNKNOWN-INSTRUCTION
 126d2: jnz 126e4 ; relative offset = 16
 126d4: mov  eax [120 + rsp]
 126d8: and  eax 0x0000f000
 126dd: UNKNOWN-INSTRUCTION
 126df: mov  unknown 
 126e0: UNKNOWN-INSTRUCTION
 126e2: jz 12760 ; relative offset = 124
 126e4: movzx  rdx [r13 + 0]
 126e9: mov  r8 r13
 126ec: UNKNOWN-INSTRUCTION
 126ed: ror  [rdi] cl
 126ef: UNKNOWN-INSTRUCTION
 126f0: jmp 100126f3 ; relative offset = 268435454
 126f5: UNKNOWN-INSTRUCTION
 126f8: lea  rax 
 126fc: UNKNOWN-INSTRUCTION
 126ff: jna 12970 ; relative offset = 619
 12705: UNKNOWN-INSTRUCTION
 12707: jnge 1272d ; relative offset = 36
 12709: jmp  [rdi]
 1270b: jnz 12970 ; relative offset = 607
 12711: mov  rax r12
 12714: sub  r12 0x01
 12718: jmp 12975 ; relative offset = 600
 1271d: nop  [rax]
 12720: mov  edi 0x00001000
 12725: mov  [rsp] dl
 12728: call 4690 ; relative offset = -57501
 1272d: mov  r14 rax
 12730: UNKNOWN-INSTRUCTION
 12732: ror  [rdi] 0x84
 12735: jno 12739 ; relative offset = 2
 12737: UNKNOWN-INSTRUCTION
 12739: mov  [rax] 0x2f
 1273c: movzx  edx [rsp]
 12740: lea  rbx 
 12747: lea  r12 
 1274b: jmp 125a7 ; relative offset = -425
 12750: cmp  unknown 0x2e
 12752: jnz 1263c ; relative offset = -284
 12758: mov  r8 r13
 1275b: jmp 126ec ; relative offset = -113
 1275d: nop  [rax]
 12760: cmp  [8 + rsp] 0x00
 12766: jz 1293e ; relative offset = 466
 1276c: mov  rax [32 + rsp]
 12771: mov  rbp [8 + rsp]
 12776: mov  rdi [24 + rsp]
 1277b: mov  [64 + rsp] rax
 12780: mov  rax [104 + rsp]
 12785: mov  rsi [rbp + 16]
 12789: mov  [72 + rsp] rax
 1278e: mov  rax [96 + rsp]
 12793: mov  [80 + rsp] rax
 12798: call  rdx
 12799: push  ebp
 1279a: UNKNOWN-INSTRUCTION
 1279b: mov  rdx rax
 1279e: UNKNOWN-INSTRUCTION
 127a2: jnb 12c16 ; relative offset = 1134
 127a8: mov  rbp [8 + rsp]
 127ad: sal  rdx 0x04
 127b1: add  rdx [rbp + 0]
 127b5: mov  rsi [rdx]
 127b8: UNKNOWN-INSTRUCTION
 127ba: div  [76 + rax + rcx * 2]
 127be: mov  [16 + rsp] esp
 127c2: mov  r12 [24 + rsp]
 127c7: mov  [56 + rsp] rbx
 127cc: mov  rbx rdx
 127cf: jmp 127db ; relative offset = 10
 127d1: nop  [rax + 0x00000000]
 127d8: mov  rsi [rbx]
 127db: UNKNOWN-INSTRUCTION
 127dd: out  0x0f unknown
 127df: UNKNOWN-INSTRUCTION
 127e0: add  eax [r8]
 127e3: UNKNOWN-INSTRUCTION
 127e4: mov  rdi r12
 127e7: call  rdx
 127e8: push  ebp
 127e9: UNKNOWN-INSTRUCTION
 127eb: ror  [rdi] 0x85
 127ee: mov  [rdx] 0x00
 127f1: UNKNOWN-INSTRUCTION
 127f2: mov  rbx [rbx + 8]
 127f6: UNKNOWN-INSTRUCTION
 127f9: jnz 127d8 ; relative offset = -35
 127fb: mov  r12 [16 + rsp]
 12800: mov  rbx [56 + rsp]
 12805: mov  edi 0x00000018
 1280a: call 4690 ; relative offset = -57727
 1280f: mov  r8 rax
 12812: UNKNOWN-INSTRUCTION
 12814: ror  [rdi] 0x84
 12817: pop  [rcx]
 12819: UNKNOWN-INSTRUCTION
 1281b: mov  rdi [32 + rsp]
 12820: mov  [16 + rsp] r8
 12825: call e6a0 ; relative offset = -16778
 1282a: mov  r8 [16 + rsp]
 1282f: mov  rdx [24 + rsp]
 12834: mov  rdi [8 + rsp]
 12839: mov  [r8] rax
 1283c: mov  rax [104 + rsp]
 12841: mov  rsi r8
 12844: mov  [r8 + 8] rax
 12848: mov  rax [96 + rsp]
 1284d: mov  [r8 + 16] rax
 12851: call cb00 ; relative offset = -23894
 12856: cmp  eax 0xff
 12859: jz 129aa ; relative offset = 331
 1285f: UNKNOWN-INSTRUCTION
 12861: jnz 1288d ; relative offset = 42
 12863: mov  rax [64 + rsp]
 12868: UNKNOWN-INSTRUCTION
 1286a: ror  [rdi] 0x84
 1286d: UNKNOWN-INSTRUCTION
 1286e: add  [rax] eax
 12870: UNKNOWN-INSTRUCTION
 12871: mov  r8 [16 + rsp]
 12876: UNKNOWN-INSTRUCTION
 12879: jz 1288d ; relative offset = 18
 1287b: mov  rdi [r8]
 1287e: call 4680 ; relative offset = -57859
 12883: mov  rdi [16 + rsp]
 12888: call 4680 ; relative offset = -57869
 1288d: mov  rsi [0x00000090 + rsp]
 12895: mov  rdi r14
 12898: call c440 ; relative offset = -25693
 1289d: UNKNOWN-INSTRUCTION
 1289f: ror  [rdi] 0x84
 128a2: add  al [r8]
 128a5: UNKNOWN-INSTRUCTION
 128a6: mov  rdi rax
 128a9: mov  [16 + rsp] rax
 128ae: call 4880 ; relative offset = -57395
 128b3: mov  rdi r13
 128b6: mov  r15 rax
 128b9: call 4880 ; relative offset = -57406
 128be: cmp  [48 + rsp] 0x00
 128c4: mov  r8 [16 + rsp]
 128c9: mov  rdx rax
 128cc: jz 12b3f ; relative offset = 621
 128d2: lea  rcx 
 128d7: UNKNOWN-INSTRUCTION
 128da: and  unknown 0x30
 128dc: jnae 12b90 ; relative offset = 686
 128e2: mov  rbp [40 + rsp]
 128e7: add  rdx 0x01
 128eb: mov  rsi r13
 128ee: mov  [16 + rsp] r8
 128f3: lea  rdi 
 128f8: mov  r13 rbp
 128fb: call 4b90 ; relative offset = -56688
 12900: mov  rsi [16 + rsp]
 12905: mov  rdx r15
 12908: mov  rdi rbp
 1290b: call 4a50 ; relative offset = -57024
 12910: mov  r8 [16 + rsp]
 12915: mov  [32 + rsp] rbp
 1291a: lea  rax 
 1291e: UNKNOWN-INSTRUCTION
 12922: jz 12b33 ; relative offset = 523
 12928: UNKNOWN-INSTRUCTION
 1292d: mov  ecx 0x4c000002
 12932: mov  edi eax
 12934: call 4680 ; relative offset = -58041
 12939: jmp 126e4 ; relative offset = -602
 1293e: lea  r8 
 12945: lea  rcx 
 1294c: xor  esi esi
 1294e: mov  edi 0x00000007
 12953: lea  rdx 
 1295a: call 12450 ; relative offset = -1295
 1295f: mov  [8 + rsp] rax
 12964: UNKNOWN-INSTRUCTION
 12966: ror  [rdi] 0x85
 12969: UNKNOWN-INSTRUCTION
 1296c: jmp  rbx
 1296e: UNKNOWN-INSTRUCTION
 1296f: nop 
 12970: lea  rax 
 12975: mov  [r12] 0x00
 1297a: UNKNOWN-INSTRUCTION
 1297d: jz 129bb ; relative offset = 60
 1297f: sub  r12 r14
 12982: lea  rbx 
 12987: cmp  r12 0xff
 1298b: jnz 12992 ; relative offset = 5
 1298d: UNKNOWN-INSTRUCTION
 1298f: div  [rbp + 30]
 12992: mov  rdi r14
 12995: mov  rsi rbx
 12998: call 4b10 ; relative offset = -56973
 1299d: mov  r14 rax
 129a0: UNKNOWN-INSTRUCTION
 129a3: jnz 129bb ; relative offset = 22
 129a5: UNKNOWN-INSTRUCTION
 129a8: jz 129bb ; relative offset = 17
 129aa: call ddd0 ; relative offset = -19423
 129af: nop 
 129b0: mov  rdi r14
 129b3: xor  r14d r14d
 129b6: call 4680 ; relative offset = -58171
 129bb: mov  rdi [40 + rsp]
 129c0: call 4680 ; relative offset = -58181
 129c5: mov  rdi [8 + rsp]
 129ca: UNKNOWN-INSTRUCTION
 129cc: push  [232 + rcx + rcx * 1]
 129d0: cmp  unknown 0xa0
 129d2: UNKNOWN-INSTRUCTION
 129d3: dec  [rdi]
 129d5: UNKNOWN-INSTRUCTION
 129d8: mov  rax [0x000000f8 + rsp]
 129e0: UNKNOWN-INSTRUCTION
 129e1: sub  rax 0x00000028
 129e9: jnz 12c11 ; relative offset = 546
 129ef: add  esp 0x00000108
 129f6: mov  rax r14
 129f9: pop  ebx
 129fa: pop  ebp
 129fb: pop  esp
 129fd: pop  ebp
 129ff: pop  esi
 12a01: pop  edi
 12a03: ret 
 12a04: nop  [rax + 0]
 12a08: UNKNOWN-INSTRUCTION
 12a0a: js 12a0d ; relative offset = 1
 12a0c: UNKNOWN-INSTRUCTION
 12a0d: jnz 1263c ; relative offset = -983
 12a13: lea  rax 
 12a17: mov  r8 r13
 12a1a: UNKNOWN-INSTRUCTION
 12a1d: jna 126ec ; relative offset = -823
 12a23: sub  r12 0x01
 12a27: UNKNOWN-INSTRUCTION
 12a2a: jna 126ec ; relative offset = -836
 12a30: UNKNOWN-INSTRUCTION
 12a32: jnge 12a58 ; relative offset = 36
 12a34: jmp  [rdi]
 12a36: jz 12758 ; relative offset = -740
 12a3c: sub  r12 0x01
 12a40: UNKNOWN-INSTRUCTION
 12a43: jnz 12a30 ; relative offset = -21
 12a45: jmp 12758 ; relative offset = -754
 12a4a: UNKNOWN-INSTRUCTION
 12a4b: nop  [0 + rax + rax * 1]
 12a50: mov  rdi r14
 12a53: xor  r14d r14d
 12a56: call 4680 ; relative offset = -58331
 12a5b: mov  r8 [16 + rsp]
 12a60: jmp 126a7 ; relative offset = -958
 12a65: call 4710 ; relative offset = -58202
 12a6a: xor  r14d r14d
 12a6d: mov  [rax] 0x00000002
 12a73: jmp 129d8 ; relative offset = -160
 12a78: mov  rdi r14
 12a7b: mov  esi 0x00001000
 12a80: call 4b10 ; relative offset = -57205
 12a85: mov  r14 rax
 12a88: UNKNOWN-INSTRUCTION
 12a8a: ror  [rdi] 0x84
 12a8d: sbb  edi edi
 12a8f: UNKNOWN-INSTRUCTION
 12a90: dec  [RBP + 36 + rcx * 4]
 12a94: UNKNOWN-INSTRUCTION
 12a95: lea  rbx 
 12a9c: jmp 1259b ; relative offset = -1286
 12aa1: call 4710 ; relative offset = -58262
 12aa6: cmp  [rax] 0x0c
 12aa9: jnz 129d8 ; relative offset = -215
 12aaf: jmp 129aa ; relative offset = -266
 12ab4: nop  [rax + 0]
 12ab8: mov  rdx rbx
 12abb: mov  r12 [16 + rsp]
 12ac0: mov  rbx [56 + rsp]
 12ac5: cmp  [rdx] 0x00
 12ac9: jz 12805 ; relative offset = -714
 12acf: movzx  rdx [r15 + 1]
 12ad4: mov  r8 r13
 12ad7: jmp 126ec ; relative offset = -1008
 12adc: call 4710 ; relative offset = -58321
 12ae1: xor  r14d r14d
 12ae4: mov  [rax] 0x00000016
 12aea: jmp 129d8 ; relative offset = -279
 12aef: call 4710 ; relative offset = -58340
 12af4: cmp  [rax] 0x0c
 12af7: jnz 12acf ; relative offset = -42
 12af9: mov  rdi [40 + rsp]
 12afe: mov  r15 rax
 12b01: call 4680 ; relative offset = -58502
 12b06: mov  rdi r14
 12b09: xor  r14d r14d
 12b0c: call 4680 ; relative offset = -58513
 12b11: mov  rdi [8 + rsp]
 12b16: call ca10 ; relative offset = -24843
 12b1b: mov  [r15] 0x0000000c
 12b22: jmp 129d8 ; relative offset = -335
 12b27: mov  r12 [16 + rsp]
 12b2c: mov  rbx [56 + rsp]
 12b31: jmp 12acf ; relative offset = -100
 12b33: mov  [r14] 0x2f
 12b37: mov  r12 rax
 12b3a: jmp 12931 ; relative offset = -526
 12b3f: lea  rax 
 12b44: mov  [32 + rsp] r8
 12b49: mov  rcx rax
 12b4c: mov  eax 0x00001000
 12b51: mov  [16 + rsp] rdx
 12b56: UNKNOWN-INSTRUCTION
 12b58: ror  [rax + 15] 0x43
 12b5c: ror  [rax + 137] 0xc7
 12b60: mov  [48 + rsp] rax
 12b65: call 4690 ; relative offset = -58586
 12b6a: mov  rdx [16 + rsp]
 12b6f: mov  r8 [32 + rsp]
 12b74: UNKNOWN-INSTRUCTION
 12b76: ror  [rax + 137] 0x44
 12b7a: and  unknown 0x28
 12b7c: jnz 128e2 ; relative offset = -672
 12b82: jmp 129aa ; relative offset = -477
 12b87: UNKNOWN-INSTRUCTION
 12b88: nop  [0x00000000 + rax + rax * 1]
 12b90: mov  rdi [40 + rsp]
 12b95: mov  rsi rcx
 12b98: mov  [56 + rsp] rax
 12b9d: mov  [32 + rsp] r8
 12ba2: mov  [16 + rsp] rcx
 12ba7: call 4b10 ; relative offset = -57500
 12bac: mov  [40 + rsp] rax
 12bb1: UNKNOWN-INSTRUCTION
 12bb3: ror  [rdi] 0x84
 12bb6: UNKNOWN-INSTRUCTION
 12bb9: dec  [rax + 139]
 12bbc: UNKNOWN-INSTRUCTION
 12bbd: and  unknown 0x10
 12bbf: mov  rdx [56 + rsp]
 12bc4: mov  r8 [32 + rsp]
 12bc9: mov  [48 + rsp] rcx
 12bce: jmp 128e2 ; relative offset = -753
 12bd3: mov  [8 + rsp] 0x00000000
 12bdc: mov  [40 + rsp] 0x00000000
 12be5: jmp 126f8 ; relative offset = -1266
 12bea: sub  r12 0x01
 12bee: UNKNOWN-INSTRUCTION
 12bf0: out  0x0f unknown
 12bf2: cmp  [rdx] 0xfd
 12bf5: UNKNOWN-INSTRUCTION
 12bf6: inc  [rcx + 128]
 12bf9: jnge 12c1f ; relative offset = 36
 12bfb: jmp  [rdi]
 12bfd: jz 12931 ; relative offset = -722
 12c03: sub  r12 0x01
 12c07: UNKNOWN-INSTRUCTION
 12c09: out  0x75 unknown
 12c0b: jmp 12bf6 ; relative offset = -23
 12c0d: UNKNOWN-INSTRUCTION
 12c10: jmp  rax
 12c12: jp 12c30 ; relative offset = 28
 12c14: UNKNOWN-INSTRUCTION
 12c15: jmp  rcx
 12c17: stc 
 12c18: UNKNOWN-INSTRUCTION
 12c1a: dec  [rdi]
 12c1c: UNKNOWN-INSTRUCTION
 12c24: push  edi
 12c26: mov  r15 rdi
 12c29: push  esi
 12c2b: push  ebp
 12c2d: push  esp
 12c2f: push  ebp
 12c30: push  ebx
 12c31: lea  rbx 
 12c35: sub  rsp 0x38
 12c39: UNKNOWN-INSTRUCTION
 12c3a: mov  rax 0x00000028
 12c42: mov  [40 + rsp] rax
 12c47: xor  eax eax
 12c49: mov  [8 + rsp] rbx
 12c4e: call 4870 ; relative offset = -58339
 12c53: cmp  rax 0x01
 12c57: jna 12dd0 ; relative offset = 371
 12c5d: xor  r12d r12d
 12c60: UNKNOWN-INSTRUCTION
 12c62: jnge 12c88 ; relative offset = 36
 12c64: UNKNOWN-INSTRUCTION
 12c65: jnb 12d7e ; relative offset = 275
 12c6b: lea  r13 
 12c70: lea  r14 
 12c75: nop  [rax]
 12c78: movzx  rax [r15]
 12c7c: cmp  unknown 0x5f
 12c7e: jnle 12da8 ; relative offset = 292
 12c84: cmp  unknown 0x40
 12c86: jnle 12d6b ; relative offset = 223
 12c8c: cmp  unknown 0x23
 12c8e: jnle 12d60 ; relative offset = 204
 12c94: cmp  unknown 0x1f
 12c96: jnle 12d6b ; relative offset = 207
 12c9c: mov  [r13 + 0] 0x00000000
 12ca4: jmp 12cd6 ; relative offset = 48
 12ca6: UNKNOWN-INSTRUCTION
 12ca8: nop  [0x00000000 + rax + rax * 1]
 12cb0: mov  edx 0x7fffffff
 12cb5: sub  edx r12d
 12cb8: UNKNOWN-INSTRUCTION
 12cb9: ror  [rdi] 
 12cbb: UNKNOWN-INSTRUCTION
 12cbc: jo 12cbf ; relative offset = 1
 12cbe: UNKNOWN-INSTRUCTION
 12cc0: add  r12d eax
 12cc3: mov  rdi r13
 12cc6: add  r15 rbx
 12cc9: call 4c80 ; relative offset = -57422
 12cce: UNKNOWN-INSTRUCTION
 12ccf: ror  [rdi] 0x85
 12cd2: UNKNOWN-INSTRUCTION
 12cd6: mov  rbp [8 + rsp]
 12cdb: mov  rcx r13
 12cde: mov  rsi r15
 12ce1: mov  rdi r14
 12ce4: sub  rbp r15
 12ce7: mov  rdx rbp
 12cea: call 48b0 ; relative offset = -58431
 12cef: mov  rbx rax
 12cf2: cmp  rax 0xfd
 12cf6: jna 12d0c ; relative offset = 20
 12cf8: UNKNOWN-INSTRUCTION
 12cfa: in  eax dx
 12cfb: jz 12d0c ; relative offset = 15
 12cfd: xor  edi edi
 12cff: call c5f0 ; relative offset = -26388
 12d04: UNKNOWN-INSTRUCTION
 12d05: ror  [rdi] 0x84
 12d08: lodsb 
 12d09: UNKNOWN-INSTRUCTION
 12d0c: cmp  rbx 0xff
 12d10: jz 12d6b ; relative offset = 89
 12d12: cmp  rbx 0xfe
 12d16: jz 12e20 ; relative offset = 260
 12d1c: UNKNOWN-INSTRUCTION
 12d1f: mov  eax 0x00000001
 12d24: mov  edi [28 + rsp]
 12d28: UNKNOWN-INSTRUCTION
 12d2c: call 4aa0 ; relative offset = -58001
 12d31: UNKNOWN-INSTRUCTION
 12d32: ror  [rdi] 0x89
 12d35: jnbe  0xff
 12d37: UNKNOWN-INSTRUCTION
 12d38: dec  [rbx + 0xe81c247c]
 12d3e: pop  esi
 12d3f: sbb  dil dil
 12d41: inc  [rbp + 0x79850fc0]
 12d47: UNKNOWN-INSTRUCTION
 12d49: inc  [rcx + 129]
 12d4c: cld 
 12d4d: UNKNOWN-INSTRUCTION
 12d50: jnle 12d61 ; relative offset = 15
 12d52: UNKNOWN-INSTRUCTION
 12d57: add  r12d 0x01
 12d5b: jmp 12cc3 ; relative offset = -157
 12d60: sub  eax 0x25
 12d63: cmp  unknown 0x1a
 12d65: UNKNOWN-INSTRUCTION
 12d67: xor  edi edi
 12d69: UNKNOWN-INSTRUCTION
 12d6a: dec  [rcx + 131]
 12d6d: mov  [rcx] 0x01c48341
 12d73: UNKNOWN-INSTRUCTION
 12d75: jnge 12d9b ; relative offset = 36
 12d77: UNKNOWN-INSTRUCTION
 12d7d: dec  [rax + 139]
 12d80: and  unknown 0x28
 12d83: UNKNOWN-INSTRUCTION
 12d84: sub  rax 0x00000028
 12d8c: jnz 12e3b ; relative offset = 169
 12d92: add  rsp 0x38
 12d96: mov  eax r12d
 12d99: pop  ebx
 12d9a: pop  ebp
 12d9b: pop  esp
 12d9d: pop  ebp
 12d9f: pop  esi
 12da1: pop  edi
 12da3: ret 
 12da4: nop  [rax + 0]
 12da8: sub  eax 0x61
 12dab: cmp  unknown 0x1d
 12dad: jna 12d6b ; relative offset = -68
 12daf: jmp 12c9c ; relative offset = -280
 12db4: nop  [rax + 0]
 12db8: movzx  rdi [r15]
 12dbc: mov  ebx 0x00000001
 12dc1: mov  [28 + rsp] edi
 12dc5: jmp 12d2c ; relative offset = -158
 12dca: UNKNOWN-INSTRUCTION
 12dcb: nop  [0 + rax + rax * 1]
 12dd0: xor  r12d r12d
 12dd3: UNKNOWN-INSTRUCTION
 12dd6: jnb 12d7e ; relative offset = -90
 12dd8: call 4cd0 ; relative offset = -57613
 12ddd: xor  r12d r12d
 12de0: mov  rdx [rax]
 12de3: nop  [0 + rax + rax * 1]
 12de8: movzx  rax [r15]
 12dec: add  r15 0x01
 12df0: movzx  eax [rdx + rax * 2]
 12df4: test  spl 0x40
 12df7: jnz 12dfd ; relative offset = 4
 12df9: test  unknown 0x02
 12dfb: jnz 12e0e ; relative offset = 17
 12dfd: cmp  r12d 0x7fffffff
 12e04: jz 12d7e ; relative offset = -140
 12e0a: add  r12d 0x01
 12e0e: UNKNOWN-INSTRUCTION
 12e10: jnge 12e36 ; relative offset = 36
 12e12: UNKNOWN-INSTRUCTION
 12e13: jnz 12de8 ; relative offset = -45
 12e15: jmp 12d7e ; relative offset = -156
 12e1a: UNKNOWN-INSTRUCTION
 12e1b: nop  [0 + rax + rax * 1]
 12e20: mov  r15 [8 + rsp]
 12e25: add  r12d 0x01
 12e29: jmp 12d73 ; relative offset = -187
 12e2e: UNKNOWN-INSTRUCTION
 12e2f: nop 
 12e30: mov  esp 0x7fffffff
 12e36: jmp 12d7e ; relative offset = -189
 12e3b: call 4890 ; relative offset = -58800
 12e40: UNKNOWN-INSTRUCTION
 12e44: push  edi
 12e46: push  esi
 12e48: push  ebp
 12e4a: push  esp
 12e4c: mov  r12 rsi
 12e4f: push  ebp
 12e50: mov  rbp rdi
 12e53: push  ebx
 12e54: sub  rsp 0x18
 12e58: mov  [8 + rsp] rdx
 12e5d: call 4880 ; relative offset = -58850
 12e62: mov  r15 [r12]
 12e66: UNKNOWN-INSTRUCTION
 12e68: dec  [rdi]
 12e6a: UNKNOWN-INSTRUCTION
 12e6b: scasb 
 12e6c: UNKNOWN-INSTRUCTION
 12e6f: mov  [7 + rsp] 0x00
 12e74: mov  rbx rax
 12e77: xor  r14d r14d
 12e7a: mov  r13 0xffffffff
 12e81: jmp 12eb3 ; relative offset = 48
 12e83: nop  [0 + rax + rax * 1]
 12e88: mov  rax [8 + rsp]
 12e8d: mov  ecx [rax + r14 * 4]
 12e91: UNKNOWN-INSTRUCTION
 12e93: or  unknown 0xa8
 12e95: mov  ecx 0x00000001
 12e9a: movzx  eax [7 + rsp]
 12e9f: UNKNOWN-INSTRUCTION
 12ea0: ror  [r8 + 0x49072444] 0x83
 12ea8: mov  [rcx] 0x4f
 12eab: mov  edi [rsp + rsi * 8]
 12eae: UNKNOWN-INSTRUCTION
 12eb0: push  [RBP + 72 + rdi * 1]
 12eb4: mov  edx ebx
 12eb6: mov  rsi rbp
 12eb9: mov  rdi r15
 12ebc: call 4720 ; relative offset = -59297
 12ec1: UNKNOWN-INSTRUCTION
 12ec3: jnz 12ea6 ; relative offset = -31
 12ec5: mov  rdi r15
 12ec8: call 4880 ; relative offset = -58957
 12ecd: UNKNOWN-INSTRUCTION
 12ecf: ret 
 12ed0: jz 12f18 ; relative offset = 70
 12ed2: cmp  r13 0xff
 12ed6: jnz 12e88 ; relative offset = -80
 12ed8: mov  r13 r14
 12edb: add  r14 0x01
 12edf: mov  r15 [r12 + r14 * 8]
 12ee3: UNKNOWN-INSTRUCTION
 12ee5: push  [rbp + 203]
 12ee8: nop  [0x00000000 + rax + rax * 1]
 12ef0: UNKNOWN-INSTRUCTION
 12ef1: jnge 12f17 ; relative offset = 36
 12ef3: UNKNOWN-INSTRUCTION
 12ef5: mov  rax 0xfffffffe
 12efc: UNKNOWN-INSTRUCTION
 12efe: call 18c5b24c ; relative offset = 415531848
 12f04: mov  rax r13
 12f07: pop  ebx
 12f08: pop  ebp
 12f09: pop  esp
 12f0b: pop  ebp
 12f0d: pop  esi
 12f0f: pop  edi
 12f11: ret 
 12f12: UNKNOWN-INSTRUCTION
 12f13: nop  [0 + rax + rax * 1]
 12f18: mov  r13 r14
 12f1b: jmp 12f00 ; relative offset = -29
 12f1d: mov  r13 0xffffffff
 12f24: jmp 12f00 ; relative offset = -38
 12f26: UNKNOWN-INSTRUCTION
 12f28: nop  [0x00000000 + rax + rax * 1]
 12f30: UNKNOWN-INSTRUCTION
 12f34: push  edi
 12f36: mov  r11d ecx
 12f39: push  esi
 12f3b: mov  r14 0xffffffff
 12f42: push  ebp
 12f44: mov  r13 rdi
 12f47: push  esp
 12f49: mov  r12 rsi
 12f4c: push  ebp
 12f4d: push  ebx
 12f4e: sub  esp 0x000000c8
 12f55: mov  rax [0x00000100 + rsp]
 12f5d: mov  [0x00000098 + rsp] rdi
 12f65: mov  [16 + rsp] rdx
 12f6a: mov  [0x00000090 + rsp] rax
 12f72: mov  rax [0x00000108 + rsp]
 12f7a: mov  [120 + rsp] r8d
 12f7f: mov  [8 + rsp] r9
 12f84: mov  [0x00000088 + rsp] rax
 12f8c: UNKNOWN-INSTRUCTION
 12f8d: mov  rax 0x00000028
 12f95: mov  [0x000000b8 + rsp] rax
 12f9d: xor  eax eax
 12f9f: nop 
 12fa0: mov  [32 + rsp] r11d
 12fa5: call 4870 ; relative offset = -59194
 12faa: mov  ebx [120 + rsp]
 12fae: mov  r11d [32 + rsp]
 12fb3: mov  [88 + rsp] rax
 12fb8: and  ebx 0x02
 12fbb: cmp  r11d 0x0a
 12fbf: UNKNOWN-INSTRUCTION
 12fc1: push  esp
 12fc2: sbb  eax 0x8d48ffff
 12fc7: adc  eax 0x00009564
 12fcc: mov  eax r11d
 12fcf: movsxd  rax [rdx + rax * 4]
 12fd3: add  rax rdx
 12fd6: UNKNOWN-INSTRUCTION
 12fd7: jmp  rax
 12fd9: cmp  r11d 0x0a
 12fdd: jz 13041 ; relative offset = 98
 12fdf: lea  rbp 
 12fe6: xor  edi edi
 12fe8: mov  edx 0x00000005
 12fed: mov  [32 + rsp] r11d
 12ff2: mov  rsi rbp
 12ff5: call 4860 ; relative offset = -59290
 12ffa: mov  r11d [32 + rsp]
 12fff: UNKNOWN-INSTRUCTION
 13001: call 2485b94e ; relative offset = 612665672
 13006: nop 
 13007: UNKNOWN-INSTRUCTION
 1300a: jz 14247 ; relative offset = 4663
 13010: lea  rbp 
 13017: xor  edi edi
 13019: mov  edx 0x00000005
 1301e: mov  [32 + rsp] r11d
 13023: mov  rsi rbp
 13026: call 4860 ; relative offset = -59339
 1302b: mov  r11d [32 + rsp]
 13030: UNKNOWN-INSTRUCTION
 13032: call 2485b97f ; relative offset = 612665672
 13037: mov  [rax] al
 13039: UNKNOWN-INSTRUCTION
 1303b: jz 1422a ; relative offset = 4585
 13041: xor  r15d r15d
 13044: UNKNOWN-INSTRUCTION
 13046: jz 140af ; relative offset = 4195
 1304c: UNKNOWN-INSTRUCTION
 1304e: mov  rbx [0x00000088 + rsp]
 13056: mov  [32 + rsp] r11d
 1305b: mov  ebp 0x00000001
 13060: UNKNOWN-INSTRUCTION
 13062: and  unknown 0x26
 13065: mov  rdi rbx
 13068: call 4880 ; relative offset = -59373
 1306d: mov  [72 + rsp] rbx
 13072: mov  r11d [32 + rsp]
 13077: mov  [24 + rsp] rax
 1307c: mov  [32 + rsp] 0x01
 13081: xor  esi esi
 13083: mov  [124 + rsp] 0x00
 13088: mov  [80 + rsp] 0x00000000
 13091: mov  [37 + rsp] bpl
 13096: mov  r10 r12
 13099: mov  r12 r14
 1309c: mov  r14 r13
 1309f: mov  r13d r11d
 130a2: mov  r11d esi
 130a5: xor  r9d r9d
 130a8: nop  [0x00000000 + rax + rax * 1]
 130b0: UNKNOWN-INSTRUCTION
 130b2: loope 130f4 ; relative offset = 64
 130b4: UNKNOWN-INSTRUCTION
 130b7: cmp  r12 0xff
 130bb: jnz 130cb ; relative offset = 14
 130bd: mov  rax [16 + rsp]
 130c2: UNKNOWN-INSTRUCTION
 130c4: cmp  unknown 0x08
 130c6: UNKNOWN-INSTRUCTION
 130cd: in  eax dx
 130ce: jz 13d8d ; relative offset = 3257
 130d4: cmp  r13d 0x02
 130d8: mov  rdi [16 + rsp]
 130dd: UNKNOWN-INSTRUCTION
 130df: sal  [rdx] 0x44
 130e2: and  unknown 0x25
 130e4: lea  rbx 
 130e8: mov  r8d eax
 130eb: jz 136f0 ; relative offset = 1535
 130f1: mov  rax [24 + rsp]
 130f6: UNKNOWN-INSTRUCTION
 130f8: ror  [rdi] 0x84
 130fb: jno 13107 ; relative offset = 10
 130fd: UNKNOWN-INSTRUCTION
 130ff: lea  rdx 
 13103: cmp  r12 0xff
 13107: jnz 1314b ; relative offset = 66
 13109: cmp  rax 0x01
 1310d: jna 1314b ; relative offset = 60
 1310f: mov  [64 + rsp] r10
 13114: mov  [56 + rsp] r11b
 13119: mov  [48 + rsp] r9
 1311e: mov  [40 + rsp] rdx
 13123: mov  [39 + rsp] r8b
 13128: call 4880 ; relative offset = -59565
 1312d: mov  r10 [64 + rsp]
 13132: movzx  r11 [56 + rsp]
 13138: mov  r9 [48 + rsp]
 1313d: mov  rdx [40 + rsp]
 13142: mov  r12 rax
 13145: movzx  r8 [39 + rsp]
 1314b: UNKNOWN-INSTRUCTION
 1314d: loop 1315e ; relative offset = 15
 1314f: UNKNOWN-INSTRUCTION
 13150: sbb  unknown 0x0a
 13152: UNKNOWN-INSTRUCTION
 13154: mov  rdx [24 + rsp]
 13159: mov  rsi [72 + rsp]
 1315e: mov  rdi rbx
 13161: mov  [56 + rsp] r10
 13166: mov  [48 + rsp] r11b
 1316b: mov  [40 + rsp] r9
 13170: mov  [39 + rsp] r8b
 13175: call 49b0 ; relative offset = -59338
 1317a: movzx  r8 [39 + rsp]
 13180: mov  r9 [40 + rsp]
 13185: UNKNOWN-INSTRUCTION
 13186: rol  [182 + rdi + rcx * 1] 0x5c
 1318b: and  unknown 0x30
 1318d: mov  r10 [56 + rsp]
 13192: jnz 13b70 ; relative offset = 2520
 13198: UNKNOWN-INSTRUCTION
 13199: jnge 131bf ; relative offset = 36
 1319b: UNKNOWN-INSTRUCTION
 1319d: jnz 14219 ; relative offset = 4214
 131a3: movzx  ebx [rbx]
 131a6: UNKNOWN-INSTRUCTION
 131a9: jnle 13d08 ; relative offset = 2905
 131af: UNKNOWN-INSTRUCTION
 131b1: js 132fb ; relative offset = 324
 131b7: UNKNOWN-INSTRUCTION
 131bd: add  [rax] eax
 131bf: UNKNOWN-INSTRUCTION
 131c0: lea  rdx 
 131c7: movzx  eax bpl
 131ca: movsxd  rax [rdx + rax * 4]
 131ce: add  rax rdx
 131d1: UNKNOWN-INSTRUCTION
 131d2: jmp  rax
 131d4: nop  [rax + 0]
 131d8: mov  ecx r8d
 131db: nop  [0 + rax + rax * 1]
 131e0: mov  ebp r8d
 131e3: xor  eax eax
 131e5: mov  r8d ecx
 131e8: mov  ecx ebx
 131ea: UNKNOWN-INSTRUCTION
 131eb: nop  [0 + rax + rax * 1]
 131f0: mov  rsi [8 + rsp]
 131f5: UNKNOWN-INSTRUCTION
 131f7: div  [137 + rdx + rdx * 1]
 131fb: ret  0xeac0
 131fe: add  eax 0x8bd2b60f
 13203: adc  unknown 0x96
 13205: shr  edx cl
 13207: and  edx 0x01
 1320a: jnz 13215 ; relative offset = 9
 1320c: UNKNOWN-INSTRUCTION
 1320e: ror  [rdi] 0x84
 13211: UNKNOWN-INSTRUCTION
 13212: add  [rax] eax
 13214: UNKNOWN-INSTRUCTION
 13215: cmp  r13d 0x02
 13219: UNKNOWN-INSTRUCTION
 1321b: ret  0x7c80
 1321e: and  unknown 0x26
 13220: UNKNOWN-INSTRUCTION
 13221: mov  eax edx
 13223: jnz 13540 ; relative offset = 791
 13229: mov  eax r11d
 1322c: xor  eax 0x01
 1322f: UNKNOWN-INSTRUCTION
 13231: jz 13262 ; relative offset = 47
 13233: UNKNOWN-INSTRUCTION
 13236: jna 1323d ; relative offset = 5
 13238: mov  [r14 + r15 * 1] 0x27
 1323d: lea  rdx 
 13241: UNKNOWN-INSTRUCTION
 13244: jna 1324c ; relative offset = 6
 13246: mov  [1 + r14 + r15 * 1] 0x24
 1324c: lea  rdx 
 13250: UNKNOWN-INSTRUCTION
 13253: jna 1325b ; relative offset = 6
 13255: mov  [2 + r14 + r15 * 1] 0x27
 1325b: add  r15 0x03
 1325f: mov  r11d eax
 13262: UNKNOWN-INSTRUCTION
 13265: jnb 1326c ; relative offset = 5
 13267: mov  [r14 + r15 * 1] 0x5c
 1326c: add  r15 0x01
 13270: add  r9 0x01
 13274: UNKNOWN-INSTRUCTION
 13277: jnb 1327d ; relative offset = 4
 13279: mov  [r14 + r15 * 1] cl
 1327d: movzx  eax [32 + rsp]
 13282: add  r15 0x01
 13286: mov  esi 0x00000000
 1328b: UNKNOWN-INSTRUCTION
 1328d: in  eax dx
 1328e: UNKNOWN-INSTRUCTION
 13291: mov  [32 + rsp] al
 13295: jmp 130b0 ; relative offset = -490
 1329a: UNKNOWN-INSTRUCTION
 1329b: nop  [0 + rax + rax * 1]
 132a0: UNKNOWN-INSTRUCTION
 132a2: jnge 13319 ; relative offset = 117
 132a4: push  esi
 132a5: xor  ebp ebp
 132a7: cmp  r13d 0x02
 132ab: UNKNOWN-INSTRUCTION
 132ad: rol  [rax + 0x0026247c] 0x89
 132b4: ret  0x840f
 132b7: mov  spl 0x00
 132b9: UNKNOWN-INSTRUCTION
 132bc: ror  [rdi] 0x84
 132bf: lodsb 
 132c0: UNKNOWN-INSTRUCTION
 132c3: movzx  ebp [37 + rsp]
 132c8: mov  r13 r14
 132cb: mov  ebx 0x00000002
 132d1: mov  r14 r12
 132d4: mov  r12 r10
 132d7: mov  eax ebp
 132d9: UNKNOWN-INSTRUCTION
 132da: ror  [rdi] 0x85
 132dd: jp 132e1 ; relative offset = 2
 132df: UNKNOWN-INSTRUCTION
 132e1: and  [120 + rsp] 0xfd
 132e6: mov  [8 + rsp] 0x00000000
 132ef: jmp 12fa0 ; relative offset = -852
 132f4: nop  [rax + 0]
 132f8: xor  r8d r8d
 132fb: cmp  [88 + rsp] 0x01
 13301: jnz 13869 ; relative offset = 1378
 13307: UNKNOWN-INSTRUCTION
 13308: nop  [0x00000000 + rax + rax * 1]
 13310: mov  [56 + rsp] r10
 13315: mov  [48 + rsp] r11b
 1331a: mov  [40 + rsp] r9
 1331f: mov  [39 + rsp] r8b
 13324: call 4cd0 ; relative offset = -58969
 13329: movzx  r8 [39 + rsp]
 1332f: mov  r9 [40 + rsp]
 13334: mov  edi 0x00000001
 13339: mov  rdx rax
 1333c: movzx  eax bpl
 1333f: movzx  r11 [48 + rsp]
 13345: mov  r10 [56 + rsp]
 1334a: mov  rdx [rdx]
 1334d: test  [1 + rdx + rax * 2] 0x40
 13352: UNKNOWN-INSTRUCTION
 13358: ret  0x5422
 1335b: and  unknown 0x25
 1335d: UNKNOWN-INSTRUCTION
 1335e: ror  [rdi] cl
 13360: UNKNOWN-INSTRUCTION
 13362: or  unknown 0x00
 13364: UNKNOWN-INSTRUCTION
 13365: nop  [rax]
 13368: cmp  r13d 0x02
 1336c: UNKNOWN-INSTRUCTION
 1336e: ret  0xd989
 13371: movzx  eax [37 + rsp]
 13376: xor  eax 0x01
 13379: UNKNOWN-INSTRUCTION
 1337a: ror  [rdi] 
 1337c: UNKNOWN-INSTRUCTION
 1337d: outsw 
 1337e: UNKNOWN-INSTRUCTION
 13380: push  [rcx]
 13382: rol  [rax + 0x0026247c] 0x0f
 13389: UNKNOWN-INSTRUCTION
 1338d: jmp  [rsi + 144]
 13390: UNKNOWN-INSTRUCTION
 13392: ror  [rdi] 0x85
 13395: jnge 13395 ; relative offset = -2
 13397: UNKNOWN-INSTRUCTION
 13398: inc  [rbx + 0x834901f0]
 1339e: rol  [rcx] 0x44
 133a1: and  eax ebx
 133a3: jmp 13c48 ; relative offset = 2208
 133a8: UNKNOWN-INSTRUCTION
 133aa: jnz 14181 ; relative offset = 3537
 133b0: lea  rax 
 133b7: mov  [38 + rsp] 0x00
 133bc: mov  ebp 0x00000001
 133c1: xor  esi esi
 133c3: mov  [72 + rsp] rax
 133c8: mov  ebx 0x00000005
 133ce: mov  edi 0x00000001
 133d4: mov  [24 + rsp] 0x00000001
 133dd: mov  [124 + rsp] 0x00
 133e2: mov  [32 + rsp] 0x01
 133e7: mov  [80 + rsp] 0x00000000
 133f0: UNKNOWN-INSTRUCTION
 133f2: in  unknown 0x0f
 133f4: UNKNOWN-INSTRUCTION
 133f5: cwde 
 133f6: cld 
 133f7: UNKNOWN-INSTRUCTION
 133f8: inc  [rcx + 198]
 133fb: UNKNOWN-INSTRUCTION
 133fe: jmp 13091 ; relative offset = -882
 13403: mov  [38 + rsp] 0x01
 13408: mov  ebp 0x00000001
 1340d: lea  rax 
 13414: xor  r15d r15d
 13417: mov  ebx 0x00000002
 1341d: mov  [24 + rsp] 0x00000001
 13426: mov  [72 + rsp] rax
 1342b: jmp 1307c ; relative offset = -948
 13430: mov  [38 + rsp] 0x00
 13435: mov  ebp 0x00000001
 1343a: xor  r15d r15d
 1343d: mov  [24 + rsp] 0x00000000
 13446: mov  [72 + rsp] 0x00000000
 1344f: jmp 1307c ; relative offset = -984
 13454: UNKNOWN-INSTRUCTION
 13456: jz 13573 ; relative offset = 279
 1345c: mov  [38 + rsp] 0x01
 13461: xor  ebp ebp
 13463: jmp 1340d ; relative offset = -88
 13465: lea  rax 
 1346c: mov  [38 + rsp] 0x01
 13471: mov  ebp 0x00000001
 13476: xor  r15d r15d
 13479: mov  [24 + rsp] 0x00000001
 13482: mov  ebx 0x00000005
 13488: mov  [72 + rsp] rax
 1348d: jmp 1307c ; relative offset = -1046
 13492: mov  [38 + rsp] 0x00
 13497: xor  ebp ebp
 13499: xor  r15d r15d
 1349c: mov  [24 + rsp] 0x00000000
 134a5: mov  [72 + rsp] 0x00000000
 134ae: jmp 1307c ; relative offset = -1079
 134b3: xor  r8d r8d
 134b6: cmp  r13d 0x02
 134ba: jz 13e98 ; relative offset = 2520
 134c0: cmp  r13d 0x05
 134c4: jnz 134f0 ; relative offset = 42
 134c6: test  [120 + rsp] 0x04
 134cb: jz 134f0 ; relative offset = 35
 134cd: lea  rax 
 134d1: UNKNOWN-INSTRUCTION
 134d3: loopne 13548 ; relative offset = 115
 134d5: sbb  cl [rax + 139]
 134d8: jnge 134fe ; relative offset = 36
 134da: UNKNOWN-INSTRUCTION
 134dd: jnge 134ee ; relative offset = 15
 134df: add  [rdi] edi
 134e1: jz 14152 ; relative offset = 3179
 134e7: UNKNOWN-INSTRUCTION
 134e8: nop  [0x00000000 + rax + rax * 1]
 134f0: xor  edx edx
 134f2: xor  ebp ebp
 134f4: mov  ecx 0x0000003f
 134f9: jmp 13371 ; relative offset = -397
 134fe: xor  r8d r8d
 13501: cmp  r13d 0x02
 13505: jz 13e58 ; relative offset = 2381
 1350b: mov  [124 + rsp] bpl
 13510: xor  edx edx
 13512: mov  ecx 0x00000027
 13517: jmp 13371 ; relative offset = -427
 1351c: mov  ecx 0x00000072
 13521: xor  ebp ebp
 13523: cmp  r13d 0x02
 13527: UNKNOWN-INSTRUCTION
 13529: ret  0x7c80
 1352c: and  unknown 0x26
 1352e: UNKNOWN-INSTRUCTION
 1352f: mov  eax edx
 13531: jz 13229 ; relative offset = -782
 13537: UNKNOWN-INSTRUCTION
 13538: nop  [0x00000000 + rax + rax * 1]
 13540: movzx  ebp [37 + rsp]
 13545: mov  r11d r13d
 13548: mov  r13 r14
 1354b: mov  r14 r12
 1354e: mov  r12 r10
 13551: and  eax ebp
 13553: UNKNOWN-INSTRUCTION
 13554: ror  [rdi] 0x84
 13557: UNKNOWN-INSTRUCTION
 1355a: inc  [rbx + 0xfd782464]
 13560: call 4870 ; relative offset = -60661
 13565: mov  [8 + rsp] 0x00000000
 1356e: mov  [88 + rsp] rax
 13573: mov  ebp 0x00000001
 13578: lea  rax 
 1357f: mov  [38 + rsp] 0x00
 13584: xor  esi esi
 13586: mov  ebx 0x00000002
 1358c: mov  [72 + rsp] rax
 13591: mov  edi 0x00000001
 13597: mov  [24 + rsp] 0x00000001
 135a0: mov  [124 + rsp] 0x00
 135a5: mov  [32 + rsp] 0x01
 135aa: mov  [80 + rsp] 0x00000000
 135b3: UNKNOWN-INSTRUCTION
 135b5: in  unknown 0x0f
 135b7: UNKNOWN-INSTRUCTION
 135bb: push  [rcx]
 135bd: shr  cl 0x36
 135c0: UNKNOWN-INSTRUCTION
 135c3: nop  [0 + rax + rax * 1]
 135c8: mov  ecx 0x00000066
 135cd: cmp  r13d 0x02
 135d1: UNKNOWN-INSTRUCTION
 135d3: rol  [rax + 0x0026247c] 0x75
 135da: sbb  sil [rcx]
 135dc: in  eax dx
 135dd: jmp 13262 ; relative offset = -896
 135e2: cmp  r13d 0x02
 135e6: mov  ecx 0x00000062
 135eb: UNKNOWN-INSTRUCTION
 135ed: rol  [rax + 0x0026247c] 0x74
 135f4: out  0x0f unknown
 135f6: mov  sil 0x6c
 135f8: and  unknown 0x26
 135fa: mov  r11d r13d
 135fd: mov  r13 r14
 13600: mov  r14 r12
 13603: mov  r12 r10
 13606: and  eax ebp
 13608: jmp 13553 ; relative offset = -186
 1360d: mov  ecx 0x0000006e
 13612: xor  ebp ebp
 13614: jmp 13523 ; relative offset = -246
 13619: mov  ecx 0x00000061
 1361e: jmp 135cd ; relative offset = -83
 13620: UNKNOWN-INSTRUCTION
 13621: jnge 13647 ; relative offset = 36
 13623: UNKNOWN-INSTRUCTION
 13625: jnz 142c4 ; relative offset = 3225
 1362b: xor  r8d r8d
 1362e: cmp  r13d 0x02
 13632: mov  eax r11d
 13635: UNKNOWN-INSTRUCTION
 13637: ret  0xf083
 1363a: add  [rax] esp
 1363c: ror  [rdi] 
 1363e: UNKNOWN-INSTRUCTION
 1363f: or  [r8] r8
 13642: UNKNOWN-INSTRUCTION
 13646: jna 1364d ; relative offset = 5
 13648: mov  [r14 + r15 * 1] 0x27
 1364d: lea  rcx 
 13651: UNKNOWN-INSTRUCTION
 13653: ret  0x0676
 13656: mov  [1 + r14 + r15 * 1] 0x24
 1365c: lea  rcx 
 13660: UNKNOWN-INSTRUCTION
 13662: ret  0x0676
 13665: mov  [2 + r14 + r15 * 1] 0x27
 1366b: lea  rsi 
 1366f: UNKNOWN-INSTRUCTION
 13674: and  ecx [rcx]
 13676: UNKNOWN-INSTRUCTION
 13678: add  r15 0x04
 1367c: mov  r11d eax
 1367f: xor  ebp ebp
 13681: mov  ecx 0x00000030
 13686: jmp 1320c ; relative offset = -1151
 1368b: mov  ecx 0x00000023
 13690: mov  eax r8d
 13693: UNKNOWN-INSTRUCTION
 13695: leave 
 13696: jnz 13c98 ; relative offset = 1532
 1369c: mov  ebx ecx
 1369e: jmp 132a7 ; relative offset = -1020
 136a3: nop  [0 + rax + rax * 1]
 136a8: xor  r8d r8d
 136ab: mov  ecx 0x00000009
 136b0: mov  ebx 0x00000074
 136b5: nop  [rax]
 136b8: UNKNOWN-INSTRUCTION
 136b9: jnge 136df ; relative offset = 36
 136bb: and  eax 0x00850f00
 136c0: or  eax 0xed310000
 136c5: xor  eax eax
 136c7: UNKNOWN-INSTRUCTION
 136c8: jnge 136ee ; relative offset = 36
 136ca: UNKNOWN-INSTRUCTION
 136cc: jnz 131f0 ; relative offset = -1250
 136d2: jmp 13390 ; relative offset = -839
 136d7: mov  ecx 0x00000076
 136dc: xor  ebp ebp
 136de: jmp 13523 ; relative offset = -448
 136e3: mov  ecx r8d
 136e6: mov  ebx 0x00000020
 136eb: jmp 131e0 ; relative offset = -1296
 136f0: movzx  ebx [rbx]
 136f3: UNKNOWN-INSTRUCTION
 136f6: jnle 137c8 ; relative offset = 204
 136fc: UNKNOWN-INSTRUCTION
 136fe: js 132fb ; relative offset = -1033
 13704: UNKNOWN-INSTRUCTION
 13709: out  dx unknown
 1370a: UNKNOWN-INSTRUCTION
 1370c: dec  [rax + 141]
 1370f: adc  eax 0x00008f48
 13714: movzx  eax bpl
 13717: movsxd  rax [rdx + rax * 4]
 1371b: add  rax rdx
 1371e: UNKNOWN-INSTRUCTION
 1371f: jmp  rax
 13721: mov  ecx 0x0000000c
 13726: mov  ebx 0x00000066
 1372b: jmp 136b8 ; relative offset = -117
 1372d: mov  ecx 0x00000009
 13732: mov  ebx 0x00000074
 13737: cmp  r13d 0x02
 1373b: UNKNOWN-INSTRUCTION
 1373d: sal  [rdx] 0x44
 13740: and  unknown 0x26
 13742: mov  r8d eax
 13745: jz 136b8 ; relative offset = -147
 1374b: jmp 132c3 ; relative offset = -1165
 13750: mov  ecx 0x00000008
 13755: mov  ebx 0x00000062
 1375a: jmp 136b8 ; relative offset = -167
 1375f: UNKNOWN-INSTRUCTION
 13760: jnge 13786 ; relative offset = 36
 13762: and  eax 0xb6850f00
 13767: UNKNOWN-INSTRUCTION
 13769: inc  [rbp + 49]
 1376c: UNKNOWN-INSTRUCTION
 1376d: xor  ecx ecx
 1376f: test  [120 + rsp] 0x01
 13774: jz 136c3 ; relative offset = -183
 1377a: add  r9 0x01
 1377e: jmp 130b0 ; relative offset = -1747
 13783: mov  ecx 0x0000000b
 13788: mov  ebx 0x00000076
 1378d: jmp 136b8 ; relative offset = -218
 13792: mov  ebx 0x00000020
 13797: jmp 132a7 ; relative offset = -1269
 1379c: mov  ecx 0x0000000d
 137a1: mov  ebx 0x00000072
 137a6: jmp 13737 ; relative offset = -113
 137a8: mov  ecx 0x0000000a
 137ad: mov  ebx 0x0000006e
 137b2: jmp 13737 ; relative offset = -125
 137b4: mov  ecx 0x00000007
 137b9: mov  ebx 0x00000061
 137be: jmp 136b8 ; relative offset = -267
 137c3: nop  [0 + rax + rax * 1]
 137c8: UNKNOWN-INSTRUCTION
 137ca: jp 1384b ; relative offset = 127
 137cc: jnb 1374e ; relative offset = -128
 137ce: UNKNOWN-INSTRUCTION
 137cf: jz 132fb ; relative offset = -1243
 137d6: lea  ecx 
 137d9: mov  eax 0x00000001
 137de: mov  rdx 0x03ffffff53ffffff
 137e8: sal  rax cl
 137eb: UNKNOWN-INSTRUCTION
 137ed: ror  [rdi] 
 137ef: UNKNOWN-INSTRUCTION
 137f0: jz 137ed ; relative offset = -5
 137f2: UNKNOWN-INSTRUCTION
 137f3: jmp  [rcx + 0xa4000000]
 137f9: jnz 132a5 ; relative offset = -1370
 137ff: UNKNOWN-INSTRUCTION
 13801: pop  esp
 13802: jnz 132fb ; relative offset = -1293
 13808: cmp  r13d 0x02
 1380c: jz 13e30 ; relative offset = 1566
 13812: movzx  edx [37 + rsp]
 13817: UNKNOWN-INSTRUCTION
 13818: push  esp
 13819: and  unknown 0x26
 1381b: cmp  [24 + rsp] 0x00
 13821: UNKNOWN-INSTRUCTION
 13823: sal  [rax] 0xc2
 13826: mov  r8d edx
 13829: jnz 13c37 ; relative offset = 1032
 1382f: mov  ecx 0x0000005c
 13834: jmp 136b8 ; relative offset = -385
 13839: nop  [rax + 0x00000000]
 13840: UNKNOWN-INSTRUCTION
 13842: jnl 13853 ; relative offset = 15
 13844: UNKNOWN-INSTRUCTION
 13846: add  unknown 0x00
 13848: UNKNOWN-INSTRUCTION
 13849: jng 13b2e ; relative offset = 735
 1384f: mov  ecx 0x0000007e
 13854: UNKNOWN-INSTRUCTION
 13856: jng 13867 ; relative offset = 15
 13858: UNKNOWN-INSTRUCTION
 13859: xor  edi esi
 1385b: UNKNOWN-INSTRUCTION
 1385c: dec  [rax + 131]
 1385f: jnge 13885 ; relative offset = 36
 13861: pop  eax
 13862: add  [rdi] ecx
 13864: UNKNOWN-INSTRUCTION
 13865: cmpsw 
 13866: UNKNOWN-INSTRUCTION
 13868: dec  [rax + 141]
 1386b: UNKNOWN-INSTRUCTION
 1386c: and  unknown 0xb0
 1386e: UNKNOWN-INSTRUCTION
 13871: mov  [0x000000b0 + rsp] 0x00000000
 1387d: mov  [96 + rsp] rax
 13882: cmp  r12 0xff
 13886: jnz 138bf ; relative offset = 55
 13888: mov  rdi [16 + rsp]
 1388d: mov  [56 + rsp] r10
 13892: mov  [48 + rsp] r11b
 13897: mov  [40 + rsp] r9
 1389c: mov  [39 + rsp] r8b
 138a1: call 4880 ; relative offset = -61478
 138a6: mov  r10 [56 + rsp]
 138ab: mov  r9 [40 + rsp]
 138b0: movzx  r11 [48 + rsp]
 138b6: movzx  r8 [39 + rsp]
 138bc: mov  r12 rax
 138bf: lea  rax 
 138c7: mov  [125 + rsp] r8b
 138cc: xor  edi edi
 138ce: mov  [56 + rsp] rax
 138d3: mov  [48 + rsp] r9
 138d8: mov  [40 + rsp] r12
 138dd: mov  [127 + rsp] r11b
 138e2: mov  [39 + rsp] bpl
 138e7: mov  [0x00000080 + rsp] r15
 138ef: mov  [112 + rsp] r10
 138f4: mov  [64 + rsp] r13d
 138f9: mov  [104 + rsp] r14
 138fe: mov  r14 [96 + rsp]
 13903: mov  [126 + rsp] bpl
 13907: mov  rbx rdi
 1390a: mov  rax [48 + rsp]
 1390f: mov  rbp [40 + rsp]
 13914: mov  rcx r14
 13917: mov  rdi [56 + rsp]
 1391c: lea  r15 
 13920: mov  rax [16 + rsp]
 13925: sub  rbp r15
 13928: lea  r13 
 1392c: mov  rdx rbp
 1392f: mov  rsi r13
 13932: call 48b0 ; relative offset = -61575
 13937: mov  r12 rax
 1393a: cmp  rax 0xfd
 1393e: jna 13eb0 ; relative offset = 1388
 13944: UNKNOWN-INSTRUCTION
 13946: in  eax dx
 13947: jz 13eb0 ; relative offset = 1379
 1394d: xor  edi edi
 1394f: call c5f0 ; relative offset = -29540
 13954: UNKNOWN-INSTRUCTION
 13955: ror  [rdi] 0x84
 13958: inc  [rsi]
 1395a: UNKNOWN-INSTRUCTION
 1395c: cmp  r12 0xff
 13960: jz 13ec3 ; relative offset = 1373
 13966: cmp  r12 0xfe
 1396a: jz 140e4 ; relative offset = 1908
 13970: cmp  [64 + rsp] 0x02
 13975: jnz 13982 ; relative offset = 11
 13977: UNKNOWN-INSTRUCTION
 13978: jnge 1399e ; relative offset = 36
 1397a: UNKNOWN-INSTRUCTION
 1397c: jnz 13f08 ; relative offset = 1414
 13982: mov  edi [0x000000ac + rsp]
 13989: call 4ca0 ; relative offset = -60654
 1398e: mov  edi 0x00000000
 13993: UNKNOWN-INSTRUCTION
 13994: ror  [rdi] 0xb6
 13997: and  unknown 0x27
 1399a: UNKNOWN-INSTRUCTION
 1399d: mov  rdi r14
 139a0: add  rbx r12
 139a3: mov  [39 + rsp] al
 139a7: call 4c80 ; relative offset = -60716
 139ac: UNKNOWN-INSTRUCTION
 139ad: ror  [rdi] 0x84
 139b0: push  esi
 139b1: UNKNOWN-INSTRUCTION
 139b3: dec  [rdi]
 139b5: mov  sil 0x6c
 139b7: and  unknown 0x27
 139b9: mov  rdi rbx
 139bc: movzx  r8 [125 + rsp]
 139c2: mov  r9 [48 + rsp]
 139c7: mov  r12 [40 + rsp]
 139cc: mov  edx ebp
 139ce: movzx  r11 [127 + rsp]
 139d4: movzx  ebx [126 + rsp]
 139d9: mov  r15 [0x00000080 + rsp]
 139e1: mov  r14 [104 + rsp]
 139e6: xor  edx 0x01
 139e9: mov  r10 [112 + rsp]
 139ee: mov  r13d [64 + rsp]
 139f3: UNKNOWN-INSTRUCTION
 139f4: push  esp
 139f5: and  unknown 0x25
 139f7: cmp  rdi 0x01
 139fb: jna 1335d ; relative offset = -1700
 13a01: mov  rcx rdi
 13a04: mov  [39 + rsp] bpl
 13a09: mov  rdi [16 + rsp]
 13a0e: xor  esi esi
 13a10: movzx  ebp [38 + rsp]
 13a15: add  rcx r9
 13a18: jmp 13ad1 ; relative offset = 180
 13a1d: nop  [rax]
 13a20: cmp  r13d 0x02
 13a24: UNKNOWN-INSTRUCTION
 13a28: mov  eax esi
 13a2a: UNKNOWN-INSTRUCTION
 13a2c: in  eax dx
 13a2d: jnz 14032 ; relative offset = 1535
 13a33: mov  eax r11d
 13a36: xor  eax 0x01
 13a39: UNKNOWN-INSTRUCTION
 13a3b: jz 13a6d ; relative offset = 47
 13a3e: UNKNOWN-INSTRUCTION
 13a41: jna 13a48 ; relative offset = 5
 13a43: mov  [r14 + r15 * 1] 0x27
 13a48: lea  rsi 
 13a4c: UNKNOWN-INSTRUCTION
 13a4e: jna 13a57 ; relative offset = 6
 13a51: mov  [1 + r14 + r15 * 1] 0x24
 13a57: lea  rsi 
 13a5b: UNKNOWN-INSTRUCTION
 13a5d: jna 13a66 ; relative offset = 6
 13a60: mov  [2 + r14 + r15 * 1] 0x27
 13a66: add  r15 0x03
 13a6a: mov  r11d eax
 13a6d: UNKNOWN-INSTRUCTION
 13a70: jna 13a77 ; relative offset = 5
 13a72: mov  [r14 + r15 * 1] 0x5c
 13a77: lea  rax 
 13a7b: UNKNOWN-INSTRUCTION
 13a7d: ret  0x0d76
 13a80: mov  eax ebx
 13a82: shr  al 0x06
 13a85: add  eax 0x30
 13a88: mov  [1 + r14 + r15 * 1] al
 13a8d: lea  rax 
 13a91: UNKNOWN-INSTRUCTION
 13a93: ret  0x1076
 13a96: mov  eax ebx
 13a98: shr  al 0x03
 13a9b: and  eax 0x07
 13a9e: add  eax 0x30
 13aa1: mov  [2 + r14 + r15 * 1] al
 13aa6: and  ebx 0x07
 13aa9: add  r9 0x01
 13aad: add  r15 0x03
 13ab1: add  ebx 0x30
 13ab4: UNKNOWN-INSTRUCTION
 13ab6: leave 
 13ab7: jna 1404f ; relative offset = 1426
 13abd: mov  esi edx
 13abf: UNKNOWN-INSTRUCTION
 13ac2: jna 13ac8 ; relative offset = 4
 13ac4: mov  [r14 + r15 * 1] bpl
 13ac8: movzx  rbx [rdi + r9 * 1]
 13acd: add  r15 0x01
 13ad1: UNKNOWN-INSTRUCTION
 13ad2: ror  [rdi] cl
 13ad4: UNKNOWN-INSTRUCTION
 13ad8: dec  [rcx + 0x01f083f0]
 13ade: and  eax r11d
 13ae1: UNKNOWN-INSTRUCTION
 13ae4: jz 13af4 ; relative offset = 14
 13ae6: UNKNOWN-INSTRUCTION
 13ae9: jna 13af0 ; relative offset = 5
 13aeb: mov  [r14 + r15 * 1] 0x5c
 13af0: add  r15 0x01
 13af4: add  r9 0x01
 13af8: UNKNOWN-INSTRUCTION
 13afa: leave 
 13afb: jna 14026 ; relative offset = 1317
 13b01: UNKNOWN-INSTRUCTION
 13b02: ror  [rdi] 0x84
 13b05: imul  eax [RIP + 0x394d0000] 0x430576fa
 13b0f: mov  [rsi + rdi * 1] 0x27
 13b13: lea  rax 
 13b17: UNKNOWN-INSTRUCTION
 13b19: ret  0x0676
 13b1c: mov  [1 + r14 + r15 * 1] 0x27
 13b22: add  r15 0x02
 13b26: xor  r8d r8d
 13b29: xor  r11d r11d
 13b2c: jmp 13abf ; relative offset = -111
 13b2e: mov  ecx 0x0000007b
 13b33: UNKNOWN-INSTRUCTION
 13b35: jpo 13b46 ; relative offset = 15
 13b37: UNKNOWN-INSTRUCTION
 13b39: idiv  edi
 13b3b: dec  [rcx + 131]
 13b3e: cld 
 13b3f: dec  [rdi]
 13b41: UNKNOWN-INSTRUCTION
 13b43: add  [rax] eax
 13b45: UNKNOWN-INSTRUCTION
 13b48: nop  [0x00000000 + rax + rax * 1]
 13b50: cmp  r12 0x01
 13b54: jz 13690 ; relative offset = -1226
 13b5a: UNKNOWN-INSTRUCTION
 13b5b: nop  [0 + rax + rax * 1]
 13b60: cmp  r13d 0x02
 13b64: UNKNOWN-INSTRUCTION
 13b66: ret  0xed31
 13b69: jmp 13371 ; relative offset = -2045
 13b6e: UNKNOWN-INSTRUCTION
 13b6f: nop 
 13b70: movzx  ebx [rbx]
 13b73: UNKNOWN-INSTRUCTION
 13b76: jnle 13bd0 ; relative offset = 88
 13b78: UNKNOWN-INSTRUCTION
 13b7a: js 132f8 ; relative offset = -2184
 13b80: UNKNOWN-INSTRUCTION
 13b85: outsw 
 13b86: idiv  edi
 13b88: dec  [rax + 141]
 13b8b: adc  eax 0x00008bcc
 13b90: movzx  eax bpl
 13b93: movsxd  rax [rdx + rax * 4]
 13b97: add  rax rdx
 13b9a: UNKNOWN-INSTRUCTION
 13b9b: jmp  rax
 13b9d: nop  [rax]
 13ba0: xor  ecx ecx
 13ba2: jmp 131e0 ; relative offset = -2503
 13ba7: UNKNOWN-INSTRUCTION
 13ba8: nop  [0x00000000 + rax + rax * 1]
 13bb0: xor  r8d r8d
 13bb3: xor  ebp ebp
 13bb5: jmp 132a7 ; relative offset = -2323
 13bba: xor  r8d r8d
 13bbd: mov  ecx 0x00000023
 13bc2: jmp 13690 ; relative offset = -1335
 13bc7: xor  ecx ecx
 13bc9: jmp 136e6 ; relative offset = -1256
 13bce: UNKNOWN-INSTRUCTION
 13bcf: nop 
 13bd0: UNKNOWN-INSTRUCTION
 13bd2: jp 13be3 ; relative offset = 15
 13bd4: UNKNOWN-INSTRUCTION
 13bdb: jz 132f8 ; relative offset = -2282
 13be2: lea  ecx 
 13be5: mov  eax 0x00000001
 13bea: mov  rdx 0x03ffffff53ffffff
 13bf4: sal  rax cl
 13bf7: xor  ecx ecx
 13bf9: UNKNOWN-INSTRUCTION
 13bfb: ror  [rdi] 
 13bfd: UNKNOWN-INSTRUCTION
 13c01: dec  [rcx + 0xc03145d9]
 13c07: test  unknown 0xa4000000
 13c0c: jnz 13b60 ; relative offset = -178
 13c12: UNKNOWN-INSTRUCTION
 13c14: pop  esp
 13c15: jnz 132fb ; relative offset = -2336
 13c1b: movzx  esi [38 + rsp]
 13c20: UNKNOWN-INSTRUCTION
 13c22: jz 13c48 ; relative offset = 36
 13c24: and  eax 0x0769840f
 13c29: UNKNOWN-INSTRUCTION
 13c2b: cmp  [24 + rsp] 0x00
 13c31: jz 14394 ; relative offset = 1885
 13c37: add  r9 0x01
 13c3b: mov  eax r11d
 13c3e: xor  ebp ebp
 13c40: mov  ecx 0x0000005c
 13c45: nop  [rax]
 13c48: UNKNOWN-INSTRUCTION
 13c49: ror  [rdi] 0x84
 13c4c: and  unknown 0xf6
 13c4e: UNKNOWN-INSTRUCTION
 13c4f: dec  [rbp + 57]
 13c52: UNKNOWN-INSTRUCTION
 13c53: jna 13c5a ; relative offset = 5
 13c55: mov  [r14 + r15 * 1] 0x27
 13c5a: lea  rax 
 13c5e: UNKNOWN-INSTRUCTION
 13c60: ret  0x0676
 13c63: mov  [1 + r14 + r15 * 1] 0x27
 13c69: add  r15 0x02
 13c6d: xor  r11d r11d
 13c70: jmp 13274 ; relative offset = -2561
 13c75: nop  [rax]
 13c78: UNKNOWN-INSTRUCTION
 13c7a: jnl 13cf0 ; relative offset = 116
 13c7c: jpo 13cfc ; relative offset = 126
 13c7e: sub  sil [rcx]
 13c80: rol  [rax + 0x850f7efb] 0x6e
 13c87: idiv  dil
 13c89: dec  [rbp + 133]
 13c8c: leave 
 13c8d: jz 143ac ; relative offset = 1817
 13c93: mov  ecx 0x0000007e
 13c98: cmp  r13d 0x02
 13c9c: mov  r8d eax
 13c9f: UNKNOWN-INSTRUCTION
 13ca1: ret  0xed31
 13ca4: jmp 13371 ; relative offset = -2360
 13ca9: xor  r8d r8d
 13cac: mov  ecx 0x0000007b
 13cb1: UNKNOWN-INSTRUCTION
 13cb3: jpo 13cc4 ; relative offset = 15
 13cb5: UNKNOWN-INSTRUCTION
 13cba: mov  ecx 0x0000007c
 13cbf: UNKNOWN-INSTRUCTION
 13cc1: jnge 13cd2 ; relative offset = 15
 13cc3: UNKNOWN-INSTRUCTION
 13cc4: cwde 
 13cc5: UNKNOWN-INSTRUCTION
 13cc7: jmp  rcx
 13cc9: UNKNOWN-INSTRUCTION
 13cca: idiv  dil
 13ccc: dec  [rdi]
 13cce: UNKNOWN-INSTRUCTION
 13cd0: mov  ecx 0x0000007d
 13cd5: cmp  r12 0xff
 13cd9: jnz 13b50 ; relative offset = -399
 13cdf: mov  rax [16 + rsp]
 13ce4: UNKNOWN-INSTRUCTION
 13ce5: js 13ce8 ; relative offset = 1
 13ce7: UNKNOWN-INSTRUCTION
 13ce8: jnz 13b60 ; relative offset = -398
 13cee: jmp 13690 ; relative offset = -1635
 13cf3: nop  [0 + rax + rax * 1]
 13cf8: xor  r8d r8d
 13cfb: mov  ecx 0x0000007d
 13d00: jmp 13b3c ; relative offset = -457
 13d05: nop  [rax]
 13d08: UNKNOWN-INSTRUCTION
 13d0a: jp 13d8b ; relative offset = 127
 13d0c: UNKNOWN-INSTRUCTION
 13d0f: jz 132fb ; relative offset = -2587
 13d16: lea  ecx 
 13d19: mov  eax 0x00000001
 13d1e: mov  rdx 0x03ffffff53ffffff
 13d28: sal  rax cl
 13d2b: mov  ecx r8d
 13d2e: UNKNOWN-INSTRUCTION
 13d30: ror  [rdi] 
 13d32: UNKNOWN-INSTRUCTION
 13d33: test  unknown 0x89fffff4
 13d38: UNKNOWN-INSTRUCTION
 13d39: test  unknown 0xa4000000
 13d3e: jnz 13b60 ; relative offset = -484
 13d44: jmp 13c12 ; relative offset = -311
 13d49: nop  [rax + 0x00000000]
 13d50: UNKNOWN-INSTRUCTION
 13d52: jnl 13d63 ; relative offset = 15
 13d54: UNKNOWN-INSTRUCTION
 13d55: jnbe  0xff
 13d57: UNKNOWN-INSTRUCTION
 13d59: jng 13d6c ; relative offset = 17
 13d5b: mov  eax r8d
 13d5e: UNKNOWN-INSTRUCTION
 13d60: jng 13d71 ; relative offset = 15
 13d62: UNKNOWN-INSTRUCTION
 13d63: and  edi edi
 13d65: UNKNOWN-INSTRUCTION
 13d66: jmp  rcx
 13d68: UNKNOWN-INSTRUCTION
 13d6c: mov  ecx 0x0000007b
 13d71: UNKNOWN-INSTRUCTION
 13d73: jpo 13d84 ; relative offset = 15
 13d75: UNKNOWN-INSTRUCTION
 13d76: ret  0xfffd
 13d79: UNKNOWN-INSTRUCTION
 13d7a: mov  ecx 0x0000007c
 13d7f: UNKNOWN-INSTRUCTION
 13d81: jnge 13d92 ; relative offset = 15
 13d83: UNKNOWN-INSTRUCTION
 13d87: jmp  rcx
 13d89: outsb 
 13d8a: UNKNOWN-INSTRUCTION
 13d8c: dec  [rdi]
 13d8e: mov  sil 0x7c
 13d90: and  unknown 0x26
 13d92: cmp  r13d 0x02
 13d96: UNKNOWN-INSTRUCTION
 13d98: ror  [rbp + 133] 0xff
 13d9c: mov  edx edi
 13d9e: UNKNOWN-INSTRUCTION
 13da0: sal  [rcx] 0xc2
 13da3: UNKNOWN-INSTRUCTION
 13da4: ror  [rdi] 
 13da6: UNKNOWN-INSTRUCTION
 13da7: jnl 13dae ; relative offset = 5
 13da9: UNKNOWN-INSTRUCTION
 13dab: xor  edi 0x01
 13dae: mov  edx edi
 13db0: UNKNOWN-INSTRUCTION
 13db2: clc 
 13db3: jz 141aa ; relative offset = 1009
 13db9: UNKNOWN-INSTRUCTION
 13dba: jnge 13de0 ; relative offset = 36
 13dbc: jnge 13dbe ; relative offset = 0
 13dbe: jz 141a8 ; relative offset = 996
 13dc4: UNKNOWN-INSTRUCTION
 13dc5: jnge 13deb ; relative offset = 36
 13dc7: UNKNOWN-INSTRUCTION
 13dc9: jnz 142e9 ; relative offset = 1306
 13dcf: UNKNOWN-INSTRUCTION
 13dd1: ror  [rbp + 137] cl
 13dd4: UNKNOWN-INSTRUCTION
 13dd5: movzx  ebp [37 + rsp]
 13dda: mov  esi r11d
 13ddd: UNKNOWN-INSTRUCTION
 13ddf: ror  [rax + 131] 0x7c
 13de3: and  unknown 0x50
 13de5: UNKNOWN-INSTRUCTION
 13de6: mov  r14 r12
 13de9: UNKNOWN-INSTRUCTION
 13deb: ret  0xd020
 13dee: jz 142df ; relative offset = 1259
 13df4: mov  r12 [80 + rsp]
 13df9: mov  [124 + rsp] al
 13dfd: lea  rax 
 13e04: mov  edi 0x00000001
 13e0a: mov  ebx 0x00000002
 13e10: mov  [r13 + 0] 0x27
 13e15: mov  [38 + rsp] 0x00
 13e1a: mov  [24 + rsp] 0x00000001
 13e23: mov  [72 + rsp] rax
 13e28: jmp 13091 ; relative offset = -3484
 13e2d: nop  [rax]
 13e30: UNKNOWN-INSTRUCTION
 13e31: jnge 13e57 ; relative offset = 36
 13e33: UNKNOWN-INSTRUCTION
 13e35: jz 13c37 ; relative offset = -516
 13e3b: movzx  ebp [37 + rsp]
 13e40: mov  r11d r13d
 13e43: mov  r13 r14
 13e46: mov  r14 r12
 13e49: mov  r12 r10
 13e4c: mov  eax ebp
 13e4e: jmp 132d9 ; relative offset = -2938
 13e53: nop  [0 + rax + rax * 1]
 13e58: UNKNOWN-INSTRUCTION
 13e59: jnge 13e7f ; relative offset = 36
 13e5b: UNKNOWN-INSTRUCTION
 13e5d: jnz 13e3b ; relative offset = -36
 13e5f: UNKNOWN-INSTRUCTION
 13e61: ror  [rdi] cl
 13e63: UNKNOWN-INSTRUCTION
 13e64: lea  eax 
 13e66: UNKNOWN-INSTRUCTION
 13e68: cmp  [80 + rsp] 0x00
 13e6e: jnz 13ff5 ; relative offset = 385
 13e74: mov  [80 + rsp] r10
 13e79: xor  r10d r10d
 13e7c: mov  [124 + rsp] bpl
 13e81: add  r15 0x03
 13e85: xor  eax eax
 13e87: xor  r11d r11d
 13e8a: mov  ecx 0x00000027
 13e8f: jmp 1320c ; relative offset = -3208
 13e94: nop  [rax + 0]
 13e98: UNKNOWN-INSTRUCTION
 13e99: jnge 13ebf ; relative offset = 36
 13e9b: UNKNOWN-INSTRUCTION
 13e9d: jnz 13e3b ; relative offset = -100
 13e9f: xor  ebp ebp
 13ea1: xor  eax eax
 13ea3: mov  ecx 0x0000003f
 13ea8: jmp 1320c ; relative offset = -3233
 13ead: nop  [rax]
 13eb0: UNKNOWN-INSTRUCTION
 13eb2: in  unknown 0x0f
 13eb4: UNKNOWN-INSTRUCTION
 13eb8: dec  [rcx + 131]
 13ebb: cld 
 13ebc: dec  [rdi]
 13ebe: UNKNOWN-INSTRUCTION
 13ec2: dec  [rax + 137]
 13ec5: UNKNOWN-INSTRUCTION
 13ec6: movzx  r8 [125 + rsp]
 13ecc: mov  r9 [48 + rsp]
 13ed1: xor  ebp ebp
 13ed3: mov  r12 [40 + rsp]
 13ed8: movzx  r11 [127 + rsp]
 13ede: movzx  ebx [126 + rsp]
 13ee3: mov  r15 [0x00000080 + rsp]
 13eeb: mov  r14 [104 + rsp]
 13ef0: mov  r10 [112 + rsp]
 13ef5: mov  r13d [64 + rsp]
 13efa: movzx  edx [37 + rsp]
 13eff: jmp 139f7 ; relative offset = -1293
 13f04: nop  [rax + 0]
 13f08: cmp  r12 0x01
 13f0c: jna 13982 ; relative offset = -1424
 13f12: mov  rax [16 + rsp]
 13f17: lea  rsi 
 13f1b: lea  rdx 
 13f20: add  rsi r15
 13f23: jmp 13f35 ; relative offset = 16
 13f25: nop  [rax]
 13f28: add  rdx 0x01
 13f2c: UNKNOWN-INSTRUCTION
 13f2f: jz 13982 ; relative offset = -1459
 13f35: movzx  eax [rdx]
 13f38: sub  eax 0x5b
 13f3b: cmp  unknown 0x21
 13f3d: jnbe  0xe9
 13f3f: mov  rdi 0x000000020000002b
 13f49: UNKNOWN-INSTRUCTION
 13f4d: jnb 13f28 ; relative offset = -39
 13f4f: movzx  ebp [37 + rsp]
 13f54: mov  r14 [40 + rsp]
 13f59: mov  r13 [104 + rsp]
 13f5e: mov  r12 [112 + rsp]
 13f63: UNKNOWN-INSTRUCTION
 13f65: in  eax dx
 13f66: jnz 1355b ; relative offset = -2577
 13f6c: and  [120 + rsp] 0xfd
 13f71: xor  ebp ebp
 13f73: call 4870 ; relative offset = -63240
 13f78: mov  [8 + rsp] 0x00000000
 13f81: mov  [88 + rsp] rax
 13f86: jmp 13578 ; relative offset = -2579
 13f8b: nop  [0 + rax + rax * 1]
 13f90: mov  rsi r15
 13f93: UNKNOWN-INSTRUCTION
 13f96: jna 13fa3 ; relative offset = 11
 13f98: mov  eax r11d
 13f9b: mov  [r14 + rsi * 1] 0x5c
 13fa0: mov  r11d eax
 13fa3: lea  r15 
 13fa7: cmp  r13d 0x02
 13fab: jz 1407a ; relative offset = 201
 13fb1: lea  rax 
 13fb5: mov  ecx 0x00000030
 13fba: UNKNOWN-INSTRUCTION
 13fbc: loopne 14031 ; relative offset = 115
 13fbe: sbb  cl [rax + 139]
 13fc1: and  unknown 0x10
 13fc4: movzx  rax [1 + rax + r9 * 1]
 13fca: mov  [39 + rsp] al
 13fce: sub  eax 0x30
 13fd1: cmp  unknown 0x09
 13fd3: jna 14088 ; relative offset = 175
 13fd9: movzx  eax [37 + rsp]
 13fde: xor  eax 0x01
 13fe1: UNKNOWN-INSTRUCTION
 13fe2: ror  [rcx + 0x0000bde8] 
 13fe8: UNKNOWN-INSTRUCTION
 13fea: jz 131f0 ; relative offset = -3584
 13ff0: jmp 1320c ; relative offset = -3561
 13ff5: UNKNOWN-INSTRUCTION
 13ff8: jna 13fff ; relative offset = 5
 13ffa: mov  [r14 + r15 * 1] 0x27
 13fff: lea  rax 
 14003: UNKNOWN-INSTRUCTION
 14005: ret  0x0676
 14008: mov  [1 + r14 + r15 * 1] 0x5c
 1400e: lea  rax 
 14012: UNKNOWN-INSTRUCTION
 14014: ret  0x860f
 14017: UNKNOWN-INSTRUCTION
 1401a: inc  [rbx + 198]
 1401d: UNKNOWN-INSTRUCTION
 1401f: add  spl [rdi]
 14021: jmp 13e7c ; relative offset = -426
 14026: movzx  ebp [39 + rsp]
 1402b: mov  ecx ebx
 1402d: jmp 13c48 ; relative offset = -1002
 14032: mov  r11d r13d
 14035: mov  r13 r14
 14038: mov  r14 r12
 1403b: mov  r12 r10
 1403e: jmp 132d9 ; relative offset = -3434
 14043: movzx  edx [37 + rsp]
 14048: xor  ebp ebp
 1404a: jmp 13a01 ; relative offset = -1614
 1404f: movzx  ebp [39 + rsp]
 14054: mov  ecx ebx
 14056: jmp 13274 ; relative offset = -3559
 1405b: movzx  rdi [r13 + 0]
 14060: mov  esp 0x00000001
 14066: mov  [0x000000ac + rsp] edi
 1406d: jmp 13989 ; relative offset = -1769
 14072: xor  r8d r8d
 14075: jmp 13abf ; relative offset = -1467
 1407a: mov  eax ebp
 1407c: mov  ecx 0x00000030
 14081: xor  ebp ebp
 14083: jmp 1320c ; relative offset = -3708
 14088: UNKNOWN-INSTRUCTION
 1408b: jna 14092 ; relative offset = 5
 1408d: mov  [r14 + r15 * 1] 0x30
 14092: lea  rax 
 14096: UNKNOWN-INSTRUCTION
 14098: ret  0x0676
 1409b: mov  [2 + r14 + rsi * 1] 0x30
 140a1: lea  r15 
 140a5: mov  ecx 0x00000030
 140aa: jmp 13fd9 ; relative offset = -214
 140af: mov  rdx [0x00000090 + rsp]
 140b7: movzx  eax [rdx]
 140ba: UNKNOWN-INSTRUCTION
 140bb: ror  [rdi] 0x84
 140be: mov  bpl dil
 140c0: UNKNOWN-INSTRUCTION
 140c1: jmp  [rsi + 15]
 140c4: UNKNOWN-INSTRUCTION
 140ca: cld 
 140cb: jna 140d2 ; relative offset = 5
 140cd: mov  [R13 + 0 + r15 * 1] al
 140d2: add  r15 0x01
 140d6: movzx  rax [rdx + r15 * 1]
 140db: UNKNOWN-INSTRUCTION
 140dd: jnz 140c8 ; relative offset = -23
 140df: jmp 1304c ; relative offset = -4248
 140e4: mov  r12 [40 + rsp]
 140e9: mov  rdi rbx
 140ec: mov  rax r15
 140ef: mov  r9 [48 + rsp]
 140f4: movzx  r8 [125 + rsp]
 140fa: movzx  ebx [126 + rsp]
 140ff: mov  rdx rdi
 14102: movzx  r11 [127 + rsp]
 14108: mov  r15 [0x00000080 + rsp]
 14110: mov  r14 [104 + rsp]
 14115: mov  r10 [112 + rsp]
 1411a: mov  r13d [64 + rsp]
 1411f: mov  rcx [16 + rsp]
 14124: UNKNOWN-INSTRUCTION
 14126: loopne 1419a ; relative offset = 114
 14128: adc  unknown 0xeb
 1412a: sbb  ecx [rdi]
 1412c: UNKNOWN-INSTRUCTION
 14130: add  rdx 0x01
 14134: lea  rax 
 14138: UNKNOWN-INSTRUCTION
 1413b: jna 14143 ; relative offset = 6
 1413d: UNKNOWN-INSTRUCTION
 1413e: cmp  unknown 0x01
 14140: UNKNOWN-INSTRUCTION
 14141: jnz 14130 ; relative offset = -19
 14143: mov  rdi rdx
 14146: movzx  edx [37 + rsp]
 1414b: xor  ebp ebp
 1414d: jmp 139f7 ; relative offset = -1883
 14152: movzx  ecx [rdi + rax * 1]
 14156: UNKNOWN-INSTRUCTION
 14157: stc 
 14158: UNKNOWN-INSTRUCTION
 1415e: dec  [rax + 186]
 14161: UNKNOWN-INSTRUCTION
 14168: jo 141b2 ; relative offset = 72
 1416a: shr  edx cl
 1416c: and  edx 0x01
 1416f: jnz 14264 ; relative offset = 239
 14175: xor  ebp ebp
 14177: mov  ecx 0x0000003f
 1417c: jmp 13371 ; relative offset = -3600
 14181: lea  rax 
 14188: mov  [38 + rsp] 0x01
 1418d: mov  ebp 0x00000001
 14192: xor  r15d r15d
 14195: mov  [24 + rsp] 0x00000001
 1419e: mov  [72 + rsp] rax
 141a3: jmp 1307c ; relative offset = -4396
 141a8: mov  edx eax
 141aa: mov  rax [72 + rsp]
 141af: UNKNOWN-INSTRUCTION
 141b2: jz 141e4 ; relative offset = 48
 141b4: UNKNOWN-INSTRUCTION
 141b6: jz 141e4 ; relative offset = 44
 141b8: movzx  ecx [rax]
 141bb: UNKNOWN-INSTRUCTION
 141bc: leave 
 141bd: jz 141e4 ; relative offset = 37
 141bf: mov  rsi [0x00000098 + rsp]
 141c7: mov  rdx r15
 141ca: sub  rax r15
 141cd: UNKNOWN-INSTRUCTION
 141d0: jna 141d5 ; relative offset = 3
 141d2: mov  [rsi + rdx * 1] cl
 141d5: add  rdx 0x01
 141d9: movzx  ecx [rax + rdx * 1]
 141dd: UNKNOWN-INSTRUCTION
 141de: leave 
 141df: jnz 141cd ; relative offset = -20
 141e1: mov  r15 rdx
 141e4: UNKNOWN-INSTRUCTION
 141ed: mov  rax [0x000000b8 + rsp]
 141f5: UNKNOWN-INSTRUCTION
 141f6: sub  rax 0x00000028
 141fe: jnz 143a7 ; relative offset = 419
 14204: add  esp 0x000000c8
 1420b: mov  rax r15
 1420e: pop  ebx
 1420f: pop  ebp
 14210: pop  esp
 14212: pop  ebp
 14214: pop  esi
 14216: pop  edi
 14218: ret 
 14219: mov  r11d r13d
 1421c: mov  r13 r14
 1421f: mov  r14 r12
 14222: mov  r12 r10
 14225: jmp 132e1 ; relative offset = -3913
 1422a: mov  esi r11d
 1422d: mov  rdi rax
 14230: call dce0 ; relative offset = -25941
 14235: mov  r11d [32 + rsp]
 1423a: mov  [0x00000088 + rsp] rax
 14242: jmp 13041 ; relative offset = -4614
 14247: mov  esi r11d
 1424a: mov  rdi rax
 1424d: call dce0 ; relative offset = -25970
 14252: mov  r11d [32 + rsp]
 14257: mov  [0x00000090 + rsp] rax
 1425f: jmp 13010 ; relative offset = -4692
 14264: UNKNOWN-INSTRUCTION
 14265: jnge 1428b ; relative offset = 36
 14267: UNKNOWN-INSTRUCTION
 14269: jnz 14219 ; relative offset = -82
 1426b: UNKNOWN-INSTRUCTION
 1426e: jna 14275 ; relative offset = 5
 14270: mov  [r14 + r15 * 1] 0x3f
 14275: lea  rdx 
 14279: UNKNOWN-INSTRUCTION
 1427c: jna 14284 ; relative offset = 6
 1427e: mov  [1 + r14 + r15 * 1] 0x22
 14284: lea  rdx 
 14288: UNKNOWN-INSTRUCTION
 1428b: jna 14293 ; relative offset = 6
 1428d: mov  [2 + r14 + r15 * 1] 0x22
 14293: lea  rdx 
 14297: UNKNOWN-INSTRUCTION
 1429a: jna 142a2 ; relative offset = 6
 1429c: mov  [3 + r14 + r15 * 1] 0x3f
 142a2: add  r15 0x04
 142a6: xor  edx edx
 142a8: xor  ebp ebp
 142aa: mov  r9 rax
 142ad: jmp 13fd9 ; relative offset = -729
 142b2: mov  rax [0x00000098 + rsp]
 142ba: mov  [rax + r15 * 1] 0x00
 142bf: jmp 141ed ; relative offset = -215
 142c4: mov  r11d r13d
 142c7: mov  r13 r14
 142ca: mov  r14 r12
 142cd: mov  r12 r10
 142d0: cmp  r11d 0x02
 142d4: jz 1355b ; relative offset = -3455
 142da: jmp 132e1 ; relative offset = -4094
 142df: movzx  edx [124 + rsp]
 142e4: jmp 141aa ; relative offset = -319
 142e9: call 4870 ; relative offset = -64126
 142ee: mov  ebp 0x00000005
 142f4: xor  r15d r15d
 142f7: mov  [24 + rsp] 0x00000001
 14300: mov  [88 + rsp] rax
 14305: lea  rax 
 1430c: mov  [72 + rsp] rax
 14311: test  [120 + rsp] 0x02
 14316: jnz 14344 ; relative offset = 44
 14318: mov  r13 r14
 1431b: mov  r14 r12
 1431e: mov  r12 [80 + rsp]
 14323: jmp 133b0 ; relative offset = -3960
 14328: movzx  ebp [37 + rsp]
 1432d: mov  r13 r14
 14330: mov  r14 r12
 14333: mov  r12 r10
 14336: UNKNOWN-INSTRUCTION
 14338: in  eax dx
 14339: jnz 1355b ; relative offset = -3556
 1433f: jmp 13f6c ; relative offset = -984
 14344: movzx  eax [32 + rsp]
 14349: mov  r10 [80 + rsp]
 1434e: mov  [124 + rsp] 0x00
 14353: xor  r11d r11d
 14356: mov  [80 + rsp] 0x00000000
 1435f: mov  [38 + rsp] al
 14363: mov  [37 + rsp] al
 14367: jmp 130a5 ; relative offset = -4807
 1436c: UNKNOWN-INSTRUCTION
 1436e: jz 143a0 ; relative offset = 48
 14370: lea  rax 
 14377: mov  [38 + rsp] 0x01
 1437c: xor  ebp ebp
 1437e: xor  r15d r15d
 14381: mov  [24 + rsp] 0x00000001
 1438a: mov  [72 + rsp] rax
 1438f: jmp 1307c ; relative offset = -4888
 14394: mov  ecx 0x0000005c
 14399: xor  ebp ebp
 1439b: jmp 13523 ; relative offset = -3709
 143a0: xor  ebp ebp
 143a2: jmp 13578 ; relative offset = -3631
 143a7: call 4890 ; relative offset = -64284
 143ac: cmp  r13d 0x02
 143b0: mov  ebp r8d
 143b3: mov  ecx 0x0000007e
 143b8: mov  r8d eax
 143bb: UNKNOWN-INSTRUCTION
 143bd: ret  0xaee9
 143c0: out  dx eax
 143c1: UNKNOWN-INSTRUCTION
 143c2: dec  [rcx + 0xe9ed31d9]
 143c8: push  edi
 143c9: UNKNOWN-INSTRUCTION
 143cb: dec  [rdi]
 143cd: UNKNOWN-INSTRUCTION
 143d4: push  edi
 143d6: push  esi
 143d8: push  ebp
 143da: mov  r13 rsi
 143dd: push  esp
 143df: push  ebp
 143e0: mov  rbp rdx
 143e3: push  ebx
 143e4: sub  rsp 0x68
 143e8: mov  rsi [rdi]
 143eb: mov  [48 + rsp] rdi
 143f0: mov  [32 + rsp] r8
 143f5: mov  [56 + rsp] r9
 143fa: UNKNOWN-INSTRUCTION
 143fb: mov  rdx 0x00000028
 14403: mov  [88 + rsp] rdx
 14408: xor  edx edx
 1440a: UNKNOWN-INSTRUCTION
 1440c: in  eax dx
 1440d: lea  rdx 
 14414: mov  [16 + rsp] rsi
 14419: UNKNOWN-INSTRUCTION
 1441d: mov  r12d [rbp + 0]
 14421: cmp  r12d 0x02
 14425: UNKNOWN-INSTRUCTION
 14427: ret  0x1522
 1442a: mov   si
 1442c: UNKNOWN-INSTRUCTION
 1442e: mov  [47 + rsp] dl
 14432: jnz 14580 ; relative offset = 328
 14438: xor  r15d r15d
 1443b: UNKNOWN-INSTRUCTION
 1443c: leave 
 1443d: jz 144d0 ; relative offset = 141
 14443: call 4710 ; relative offset = -64824
 14448: mov  r8d [rbp + 4]
 1444c: lea  r9 
 14450: mov  ecx r12d
 14453: mov  r10d [rax]
 14456: mov  esi 0x00002000
 1445b: mov  rdx r13
 1445e: mov  r14 rax
 14461: mov  [8 + rsp] r10d
 14466: push  [rbp + 48]
 14469: push  [rbp + 40]
 1446c: mov  rdi [32 + rsp]
 14471: mov  [16 + rsp] r9
 14476: call 12f30 ; relative offset = -5451
 1447b: mov  r10d [24 + rsp]
 14480: UNKNOWN-INSTRUCTION
 14486: mov  r12 rax
 14489: mov  [r14] r10d
 1448c: pop  ecx
 1448d: pop  esi
 1448e: mov  r9 [rsp]
 14492: UNKNOWN-INSTRUCTION
 14494: call 4801449c ; relative offset = 1207959555
 14499: mov  eax [16 + rsp]
 1449d: mov  [47 + rsp] 0x01
 144a2: movzx  eax [rax]
 144a5: UNKNOWN-INSTRUCTION
 144a9: jnz 144bb ; relative offset = 16
 144ab: mov  rdi r13
 144ae: call 4880 ; relative offset = -64563
 144b3: UNKNOWN-INSTRUCTION
 144b5: loopne 144c6 ; relative offset = 15
 144b7: UNKNOWN-INSTRUCTION
 144b8: and  unknown 0x2f
 144bb: UNKNOWN-INSTRUCTION
 144bd: push  [76 + rax]
 144c1: mov  ebx esp
 144c3: jmp 145b8 ; relative offset = 240
 144c8: nop  [0x00000000 + rax + rax * 1]
 144d0: mov  rdi r13
 144d3: call 4880 ; relative offset = -64600
 144d8: mov  [16 + rsp] r13
 144dd: mov  r12 rax
 144e0: cmp  [32 + rsp] 0x00
 144e6: jz 14560 ; relative offset = 120
 144e8: call 4870 ; relative offset = -64637
 144ed: cmp  rax 0x01
 144f1: UNKNOWN-INSTRUCTION
 144f3: and  [rbx] eax
 144f5: UNKNOWN-INSTRUCTION
 144f7: mov  rbx [16 + rsp]
 144fc: lea  rbp 
 14500: UNKNOWN-INSTRUCTION
 14503: jna 148dd ; relative offset = 980
 14509: call 4cd0 ; relative offset = -63550
 1450e: mov  rcx [rax]
 14511: mov  rax rbx
 14514: xor  ebx ebx
 14516: UNKNOWN-INSTRUCTION
 14518: nop  [0x00000000 + rax + rax * 1]
 14520: movzx  edx [rax]
 14523: movzx  edx [rcx + rdx * 2]
 14527: UNKNOWN-INSTRUCTION
 14528: and  edx 0x83664000
 1452e: UNKNOWN-INSTRUCTION
 1452f: add  [rax + 131] ecx
 14532: UNKNOWN-INSTRUCTION
 14533: dec  [rax + 131]
 14536: rol  [rcx] 0x48
 14539: UNKNOWN-INSTRUCTION
 1453b: jnz 14520 ; relative offset = -29
 1453d: UNKNOWN-INSTRUCTION
 1453f: imul  ebx ebp 0x0f000000
 14545: UNKNOWN-INSTRUCTION
 1454a: mov  rax [56 + rsp]
 1454f: mov  [rax] 0x00
 14552: jmp 14634 ; relative offset = 221
 14557: UNKNOWN-INSTRUCTION
 14558: nop  [0x00000000 + rax + rax * 1]
 14560: UNKNOWN-INSTRUCTION
 14567: jnz 14617 ; relative offset = 170
 1456d: mov  rax [56 + rsp]
 14572: mov  [rax] 0x00
 14575: jmp 1463c ; relative offset = 194
 1457a: UNKNOWN-INSTRUCTION
 1457b: nop  [0 + rax + rax * 1]
 14580: UNKNOWN-INSTRUCTION
 14581: leave 
 14582: jnz 148ee ; relative offset = 870
 14588: mov  rdi r13
 1458b: call 4880 ; relative offset = -64784
 14590: mov  rbx rax
 14593: lea  r12 
 14597: UNKNOWN-INSTRUCTION
 1459f: mov  eax 0x48000002
 145a4: mov  edi [16 + rsp]
 145a8: mov  rdx r12
 145ab: mov  rsi r13
 145ae: call 4a50 ; relative offset = -64355
 145b3: mov  [47 + rsp] 0x00
 145b8: call 4870 ; relative offset = -64845
 145bd: mov  rsi [16 + rsp]
 145c2: lea  rdi 
 145c6: mov  [8 + rsp] rdi
 145cb: cmp  rax 0x01
 145cf: UNKNOWN-INSTRUCTION
 145d5: mov  r15 [16 + rsp]
 145da: mov  r14 [8 + rsp]
 145df: UNKNOWN-INSTRUCTION
 145e1: div  [rbx + 37]
 145e4: call 4cd0 ; relative offset = -63769
 145e9: mov  rdx r15
 145ec: mov  rdi r14
 145ef: nop 
 145f0: movzx  esi [rdx]
 145f3: mov  rcx [rax]
 145f6: test  [1 + rcx + rsi * 2] 0x40
 145fb: jnz 14600 ; relative offset = 3
 145fd: mov  [rdx] 0x3f
 14600: add  rdx 0x01
 14604: UNKNOWN-INSTRUCTION
 14607: jnz 145f0 ; relative offset = -25
 14609: mov  r12 rbx
 1460c: movzx  eax [RIP + 0x0000dc9a]
 14613: UNKNOWN-INSTRUCTION
 14615: jz 14625 ; relative offset = 14
 14617: movzx  eax [47 + rsp]
 1461c: xor  eax 0x01
 1461f: UNKNOWN-INSTRUCTION
 14620: add  eax 0x0000dc87
 14625: mov  rsi [56 + rsp]
 1462a: cmp  [32 + rsp] 0x00
 14630: mov  [rsi] al
 14632: jz 1463c ; relative offset = 8
 14634: mov  rax [32 + rsp]
 14639: mov  [rax] rbx
 1463c: mov  rax [48 + rsp]
 14641: mov  rsi [16 + rsp]
 14646: mov  [rax] rsi
 14649: mov  rax [88 + rsp]
 1464e: UNKNOWN-INSTRUCTION
 1464f: sub  rax 0x00000028
 14657: jnz 148f9 ; relative offset = 668
 1465d: add  rsp 0x68
 14661: mov  rax r12
 14664: pop  ebx
 14665: pop  ebp
 14666: pop  esp
 14668: pop  ebp
 1466a: pop  esi
 1466c: pop  edi
 1466e: ret 
 1466f: nop 
 14670: UNKNOWN-INSTRUCTION
 14672: dec  [rdi]
 14674: sub  [rbx + 2] 0x00
 14678: UNKNOWN-INSTRUCTION
 14679: lea  rax 
 1467e: mov  r12 rsi
 14681: xor  ebx ebx
 14683: mov  r15 rsi
 14686: mov  [24 + rsp] rax
 1468b: lea  rbp 
 14690: movzx  rax [r15]
 14694: cmp  unknown 0x5f
 14696: jnle 147d0 ; relative offset = 308
 1469c: cmp  unknown 0x40
 1469e: jnle 147a4 ; relative offset = 256
 146a4: cmp  unknown 0x23
 146a6: jnle 14798 ; relative offset = 236
 146ac: cmp  unknown 0x1f
 146ae: jnle 147a4 ; relative offset = 240
 146b4: mov  [80 + rsp] 0x00000000
 146bd: mov  r13 r15
 146c0: jmp 146e8 ; relative offset = 38
 146c2: UNKNOWN-INSTRUCTION
 146c3: nop  [0 + rax + rax * 1]
 146c8: mov  [r12] 0x3f
 146cd: mov  rdi rbp
 146d0: add  r13 r14
 146d3: add  rbx 0x01
 146d7: mov  r12 [rsp]
 146db: call 4c80 ; relative offset = -64096
 146e0: UNKNOWN-INSTRUCTION
 146e1: ror  [rdi] 0x85
 146e4: cmpsb 
 146e5: UNKNOWN-INSTRUCTION
 146e8: mov  r15 [8 + rsp]
 146ed: mov  rdi [24 + rsp]
 146f2: mov  rcx rbp
 146f5: mov  rsi r13
 146f8: sub  r15 r13
 146fb: mov  rdx r15
 146fe: call 48b0 ; relative offset = -65107
 14703: mov  r14 rax
 14706: lea  rax 
 1470b: mov  [rsp] rax
 1470f: cmp  r14 0xfd
 14713: jna 14729 ; relative offset = 20
 14715: UNKNOWN-INSTRUCTION
 14717: push  [49 + rdi + rcx * 1]
 1471b: jmp  rax
 1471d: UNKNOWN-INSTRUCTION
 1471e: jng 1471f ; relative offset = -1
 14720: inc  [0x00b7840f + rax + rax * 8]
 14727: UNKNOWN-INSTRUCTION
 14729: cmp  r14 0xff
 1472d: jz 14830 ; relative offset = 253
 14733: cmp  r14 0xfe
 14737: jz 14850 ; relative offset = 275
 1473d: mov  edi [76 + rsp]
 14741: UNKNOWN-INSTRUCTION
 14743: idiv  [rax + 0x00000001]
 14749: UNKNOWN-INSTRUCTION
 1474c: call 4aa0 ; relative offset = -64690
 14752: UNKNOWN-INSTRUCTION
 14753: ror  [rdi] 0x88
 14756: outsb 
 14757: UNKNOWN-INSTRUCTION
 14759: push  [rcx]
 1475b: ror  [rdi] cl
 1475d: UNKNOWN-INSTRUCTION
 14760: movzx  rcx [R13 + 0 + rdx * 1]
 14766: mov  [r12 + rdx * 1] cl
 1476a: add  rdx 0x01
 1476e: UNKNOWN-INSTRUCTION
 14771: jnz 14760 ; relative offset = -19
 14773: add  r13 r14
 14776: add  r12 r14
 14779: cdqe 
 1477b: mov  rdi rbp
 1477e: add  rbx rax
 14781: call 4c80 ; relative offset = -64262
 14786: UNKNOWN-INSTRUCTION
 14787: ror  [rdi] 0x84
 1478a: pop  edx
 1478b: UNKNOWN-INSTRUCTION
 1478d: dec  [rbp + 137]
 14790: out  dx eax
 14791: jmp 147b4 ; relative offset = 33
 14793: nop  [0 + rax + rax * 1]
 14798: lea  edx 
 1479b: UNKNOWN-INSTRUCTION
 1479d: sbb  cl [rdi]
 1479f: UNKNOWN-INSTRUCTION
 147a3: inc  [rcx + 136]
 147a6: add  unknown 0x24
 147a8: add  r15 0x01
 147ac: add  rbx 0x01
 147b0: add  r12 0x01
 147b4: UNKNOWN-INSTRUCTION
 147b6: jnge 147dc ; relative offset = 36
 147b8: UNKNOWN-INSTRUCTION
 147b9: jnae 14690 ; relative offset = -303
 147bf: sub  r12 [16 + rsp]
 147c4: jmp 1460c ; relative offset = -445
 147c9: nop  [rax + 0x00000000]
 147d0: lea  edx 
 147d3: UNKNOWN-INSTRUCTION
 147d5: sbb  eax 0xd7e9cc76
 147da: UNKNOWN-INSTRUCTION
 147dc: dec  [rdi]
 147de: UNKNOWN-INSTRUCTION
 147e0: movzx  rdi [r13 + 0]
 147e5: mov  esi 0x00000001
 147eb: mov  [76 + rsp] edi
 147ef: call 4aa0 ; relative offset = -64852
 147f4: UNKNOWN-INSTRUCTION
 147f5: ror  [rdi] 0x88
 147f8: UNKNOWN-INSTRUCTION
 147fb: inc  [rcx + 15]
 147fe: mov  sil 0x55
 14800: UNKNOWN-INSTRUCTION
 14801: add  r13 0x01
 14805: mov  [r12] dl
 14809: mov  r12 [rsp]
 1480d: jmp 14779 ; relative offset = -153
 14812: UNKNOWN-INSTRUCTION
 14813: nop  [0 + rax + rax * 1]
 14818: mov  rdi [16 + rsp]
 1481d: mov  rsi r12
 14820: call 12c20 ; relative offset = -7173
 14825: movsxd  rbx eax
 14828: jmp 1453d ; relative offset = -752
 1482d: nop  [rax]
 14830: mov  r15 r13
 14833: add  rbx 0x01
 14837: add  r15 0x01
 1483b: mov  [r12] 0x3f
 14840: mov  r12 [rsp]
 14844: jmp 147b4 ; relative offset = -149
 14849: nop  [rax + 0x00000000]
 14850: mov  r15 [8 + rsp]
 14855: add  rbx 0x01
 14859: jmp 1483b ; relative offset = -32
 1485b: mov  rdi r12
 1485e: call 4690 ; relative offset = -66003
 14863: mov  [16 + rsp] rax
 14868: UNKNOWN-INSTRUCTION
 1486a: ror  [rdi] 0x85
 1486d: UNKNOWN-INSTRUCTION
 14870: jmp  rax
 14872: pop  edx
 14873: UNKNOWN-INSTRUCTION
 14875: jmp  [rsi + 46]
 14878: nop  [0x00000000 + rax + rax * 1]
 14880: lea  rsi 
 14884: mov  [8 + rsp] r9
 14889: mov  rdi rsi
 1488c: mov  [rsp] rsi
 14890: call 4690 ; relative offset = -66053
 14895: mov  rsi [rsp]
 14899: mov  r9 [8 + rsp]
 1489e: UNKNOWN-INSTRUCTION
 148a0: ror  [rax + 137] 0x44
 148a4: and  unknown 0x10
 148a6: jnz 148ad ; relative offset = 5
 148a8: UNKNOWN-INSTRUCTION
 148aa: div  [rbp + 196]
 148ad: mov  r10d [r14]
 148b0: mov  r8d [rbp + 4]
 148b4: mov  rdx r13
 148b7: mov  ecx [rbp + 0]
 148ba: mov  [rsp] r10d
 148be: push  [rbp + 48]
 148c1: push  [rbp + 40]
 148c4: mov  rdi [32 + rsp]
 148c9: call 12f30 ; relative offset = -6558
 148ce: mov  r10d [16 + rsp]
 148d3: mov  [r14] r10d
 148d6: pop  eax
 148d7: pop  edx
 148d8: jmp 14498 ; relative offset = -1093
 148dd: xor  ebx ebx
 148df: jmp 1453d ; relative offset = -935
 148e4: xor  r12d r12d
 148e7: xor  ebx ebx
 148e9: jmp 1460c ; relative offset = -738
 148ee: mov  edi 0x00000001
 148f4: jmp 14443 ; relative offset = -1206
 148f9: call 4890 ; relative offset = -65646
 148fe: UNKNOWN-INSTRUCTION
 148ff: nop 
 14900: UNKNOWN-INSTRUCTION
 14904: push  edi
 14906: push  esi
 14908: push  ebp
 1490a: mov  r13 rsi
 1490d: push  esp
 1490f: mov  r12 rdx
 14912: push  ebp
 14913: push  ebx
 14914: movsxd  rbx edi
 14917: sub  rsp 0x28
 1491b: call 4710 ; relative offset = -66064
 14920: mov  r14d [RIP + 0x0000d929]
 14927: mov  rbp [RIP + 0x0000d942]
 1492e: mov  [8 + rsp] rax
 14933: mov  eax [rax]
 14935: mov  [20 + rsp] eax
 14939: UNKNOWN-INSTRUCTION
 1493b: jnge 1499e ; relative offset = 96
 1493e: lea  r15d 
 14942: lea  rax 
 14949: movsxd  rsi r15d
 1494c: sal  rsi 0x04
 14950: UNKNOWN-INSTRUCTION
 14953: jz 14a78 ; relative offset = 287
 14959: mov  rdi rbp
 1495c: call 4b10 ; relative offset = -65105
 14961: mov  rbp rax
 14964: UNKNOWN-INSTRUCTION
 14966: ror  [rdi] 0x84
 14969: xor  eax [rcx]
 1496b: UNKNOWN-INSTRUCTION
 1496d: mov  [RIP + 0x0000d8fc] rax
 14974: movsxd  rdi r14d
 14977: mov  edx r15d
 1497a: xor  esi esi
 1497c: mov  rcx rdi
 1497f: sub  edx r14d
 14982: sal  rcx 0x04
 14986: movsxd  rdx edx
 14989: sal  rdx 0x04
 1498d: lea  rdi 
 14992: call 4960 ; relative offset = -65591
 14997: mov  [RIP + 0x0000d8b2] r15d
 1499e: sal  rbx 0x04
 149a2: mov  ecx [r12]
 149a6: lea  r15 
 149ab: mov  rdx r13
 149ae: add  rbp rbx
 149b1: mov  ebx [4 + r12]
 149b6: mov  r9 r15
 149b9: mov  rsi [rbp + 0]
 149bd: mov  r14 [rbp + 8]
 149c1: push  [48 + r12]
 149c6: push  [40 + r12]
 149cb: or  ebx 0x01
 149ce: mov  r8d ebx
 149d1: mov  rdi r14
 149d4: mov  [40 + rsp] rsi
 149d9: call 12f30 ; relative offset = -6830
 149de: pop  ecx
 149df: pop  esi
 149e0: mov  rsi [24 + rsp]
 149e5: UNKNOWN-INSTRUCTION
 149e8: jnbe  0x6a
 149ea: lea  rsi 
 149ee: lea  rax 
 149f5: mov  [rbp + 0] rsi
 149f9: UNKNOWN-INSTRUCTION
 149fc: jz 14a10 ; relative offset = 18
 149fe: mov  rdi r14
 14a01: mov  [24 + rsp] rsi
 14a06: call 4680 ; relative offset = -66443
 14a0b: mov  rsi [24 + rsp]
 14a10: mov  rdi rsi
 14a13: mov  [24 + rsp] rsi
 14a18: call 4690 ; relative offset = -66445
 14a1d: mov  rsi [24 + rsp]
 14a22: UNKNOWN-INSTRUCTION
 14a24: ror  [rcx + 137] 0xc6
 14a28: jnz 14a2f ; relative offset = 5
 14a2a: UNKNOWN-INSTRUCTION
 14a2c: div  [rbp + 113]
 14a2f: mov  [rbp + 8] r14
 14a33: mov  ecx [r12]
 14a37: mov  rdx r13
 14a3a: mov  r9 r15
 14a3d: push  [48 + r12]
 14a42: mov  r8d ebx
 14a45: mov  rdi r14
 14a48: push  [40 + r12]
 14a4d: call 12f30 ; relative offset = -6946
 14a52: pop  eax
 14a53: pop  edx
 14a54: mov  rax [8 + rsp]
 14a59: mov  ecx [20 + rsp]
 14a5d: mov  [rax] ecx
 14a5f: add  rsp 0x28
 14a63: mov  rax r14
 14a66: pop  ebx
 14a67: pop  ebp
 14a68: pop  esp
 14a6a: pop  ebp
 14a6c: pop  esi
 14a6e: pop  edi
 14a70: ret 
 14a71: nop  [rax + 0x00000000]
 14a78: mov  rdi rsi
 14a7b: call 4690 ; relative offset = -66544
 14a80: mov  rbp rax
 14a83: UNKNOWN-INSTRUCTION
 14a86: jz 14aa0 ; relative offset = 24
 14a88: UNKNOWN-INSTRUCTION
 14a8a: outsw 
 14a8b: add  eax 0x0000d7d0
 14a90: mov  [RIP + 0x0000d7d9] rbp
 14a97: UNKNOWN-INSTRUCTION
 14a98: adc  [rbp + 0] eax
 14a9b: jmp 14974 ; relative offset = -300
 14aa0: call ddd0 ; relative offset = -27861
 14aa5: UNKNOWN-INSTRUCTION
 14aa8: nop  [0x00000000 + rax + rax * 1]
 14ab0: UNKNOWN-INSTRUCTION
 14ab4: push  edi
 14ab6: mov  r15 rsi
 14ab9: push  esi
 14abb: mov  r14 rcx
 14abe: push  ebp
 14ac0: mov  r13 rdx
 14ac3: push  esp
 14ac5: push  ebp
 14ac6: mov  rbp rdi
 14ac9: push  ebx
 14aca: sub  rsp 0x38
 14ace: UNKNOWN-INSTRUCTION
 14acf: mov  rax 0x00000028
 14ad7: mov  [40 + rsp] rax
 14adc: xor  eax eax
 14ade: UNKNOWN-INSTRUCTION
 14ae1: lea  rax 
 14ae6: UNKNOWN-INSTRUCTION
 14ae8: clc 
 14aea: call 4710 ; relative offset = -66527
 14aef: mov  [rax] 0x00000000
 14af5: mov  r12 rax
 14af8: movzx  ebx [rbp + 0]
 14afc: call 4cd0 ; relative offset = -65073
 14b01: mov  rcx [rax]
 14b04: mov  rax rbp
 14b07: jmp 14b18 ; relative offset = 15
 14b09: nop  [rax + 0x00000000]
 14b10: movzx  ebx [rax + 1]
 14b14: add  rax 0x01
 14b18: movzx  edx bpl
 14b1b: test  [1 + rcx + rdx * 2] 0x20
 14b20: jnz 14b10 ; relative offset = -18
 14b22: UNKNOWN-INSTRUCTION
 14b24: sub  eax 0xd2316474
 14b29: mov  rsi r15
 14b2c: mov  rdi rbp
 14b2f: call 4bc0 ; relative offset = -65396
 14b34: mov  rcx [r15]
 14b37: mov  rbx rax
 14b3a: UNKNOWN-INSTRUCTION
 14b3d: jz 14b98 ; relative offset = 89
 14b3f: mov  eax [r12]
 14b43: UNKNOWN-INSTRUCTION
 14b45: jnz 14b80 ; relative offset = 57
 14b47: xor  r12d r12d
 14b4a: movzx  ebp [rcx]
 14b4d: UNKNOWN-INSTRUCTION
 14b4f: in  eax dx
 14b50: jnz 14c10 ; relative offset = 186
 14b56: mov  [r13 + 0] rbx
 14b5a: mov  rax [40 + rsp]
 14b5f: UNKNOWN-INSTRUCTION
 14b60: sub  rax 0x00000028
 14b68: jnz 14f3a ; relative offset = 972
 14b6e: add  rsp 0x38
 14b72: mov  eax r12d
 14b75: pop  ebx
 14b76: pop  ebp
 14b77: pop  esp
 14b79: pop  ebp
 14b7b: pop  esi
 14b7d: pop  edi
 14b7f: ret 
 14b80: mov  esp 0x00000001
 14b86: cmp  eax 0x22
 14b89: jz 14b4a ; relative offset = -65
 14b8b: mov  esp 0x00000004
 14b91: jmp 14b5a ; relative offset = -57
 14b93: nop  [0 + rax + rax * 1]
 14b98: movzx  ebp [rcx]
 14b9b: mov  [8 + rsp] rcx
 14ba0: UNKNOWN-INSTRUCTION
 14ba2: in  eax dx
 14ba3: jz 14b8b ; relative offset = -26
 14ba5: movsx  rsi bpl
 14ba9: mov  rdi r14
 14bac: xor  r12d r12d
 14baf: mov  ebx 0x00000001
 14bb4: call 48d0 ; relative offset = -66281
 14bb9: mov  rcx [8 + rsp]
 14bbe: UNKNOWN-INSTRUCTION
 14bc1: jz 14b8b ; relative offset = -56
 14bc3: lea  eax 
 14bc6: cmp  unknown 0x2f
 14bc8: UNKNOWN-INSTRUCTION
 14bca: adc  al [rbx]
 14bcc: UNKNOWN-INSTRUCTION
 14bce: movzx  edi al
 14bd1: mov  ecx 0x00000001
 14bd7: mov  rsi 0x0000814400308945
 14be1: mov  eax 0x00000400
 14be7: UNKNOWN-INSTRUCTION
 14beb: mov  [24 + rsp] rdi
 14bf0: jnae 14c38 ; relative offset = 70
 14bf2: lea  edx 
 14bf5: UNKNOWN-INSTRUCTION
 14bf7: xor  eax 0x8d483177
 14bfc: xor  eax 0x00007c5b
 14c01: movzx  edx dl
 14c04: movsxd  rax [rsi + rdx * 4]
 14c08: add  rax rsi
 14c0b: UNKNOWN-INSTRUCTION
 14c0c: jmp  rax
 14c0e: UNKNOWN-INSTRUCTION
 14c0f: nop 
 14c10: movsx  rsi bpl
 14c14: mov  rdi r14
 14c17: mov  [8 + rsp] rcx
 14c1c: call 48d0 ; relative offset = -66385
 14c21: mov  rcx [8 + rsp]
 14c26: UNKNOWN-INSTRUCTION
 14c29: jnz 14bc3 ; relative offset = -104
 14c2b: mov  [r13 + 0] rbx
 14c2f: or  r12d 0x02
 14c33: jmp 14b5a ; relative offset = -222
 14c38: mov  esi 0x00000030
 14c3d: mov  rdi r14
 14c40: mov  [20 + rsp] r9d
 14c45: mov  [16 + rsp] r8d
 14c4a: mov  [8 + rsp] rcx
 14c4f: call 48d0 ; relative offset = -66436
 14c54: mov  rcx [8 + rsp]
 14c59: mov  eax 0x00000400
 14c5f: mov  ecx 0x00000001
 14c65: UNKNOWN-INSTRUCTION
 14c68: jz 14bf2 ; relative offset = -120
 14c6a: movzx  eax [rcx + 1]
 14c6e: cmp  unknown 0x44
 14c70: jz 14ef1 ; relative offset = 635
 14c76: cmp  unknown 0x69
 14c78: jz 14c98 ; relative offset = 30
 14c7a: cmp  unknown 0x42
 14c7c: jz 14ef1 ; relative offset = 623
 14c82: mov  rax [24 + rsp]
 14c87: lea  rdx 
 14c8e: movsxd  rax [rdx + rax * 4]
 14c92: add  rax rdx
 14c95: UNKNOWN-INSTRUCTION
 14c96: jmp  rax
 14c98: xor  r9d r9d
 14c9b: UNKNOWN-INSTRUCTION
 14c9c: jns 14ca0 ; relative offset = 2
 14c9e: UNKNOWN-INSTRUCTION
 14ca2: rol  [rdi + 141] 0x4c
 14ca6: or  [rcx] eax
 14ca8: jmp 14bf2 ; relative offset = -187
 14cad: movsxd  rbp r8d
 14cb0: movsxd  r9 r9d
 14cb3: mov  esi 0x00000004
 14cb8: xor  edi edi
 14cba: UNKNOWN-INSTRUCTION
 14cbb: nop  [0 + rax + rax * 1]
 14cc0: mov  rax rbx
 14cc3: mul  rsp
 14cc6: mov  rbx rax
 14cc9: jo 14f10 ; relative offset = 577
 14ccf: sub  esi 0x01
 14cd2: jnz 14cc0 ; relative offset = -20
 14cd4: or  r12d edi
 14cd7: add  r9 rcx
 14cda: mov  eax r12d
 14cdd: or  eax 0x02
 14ce0: mov  [r15] r9
 14ce3: UNKNOWN-INSTRUCTION
 14ce9: loopne 14cd5 ; relative offset = -23
 14cec: UNKNOWN-INSTRUCTION
 14cef: dec  [rcx + 99]
 14cf2: call 48cab044 ; relative offset = 1221157709
 14cf7: mov  eax ebx
 14cf9: mul  rsp
 14cfc: jo 14d19 ; relative offset = 27
 14cfe: mul  rsp
 14d01: jo 14d19 ; relative offset = 22
 14d03: mov  rbx rax
 14d06: jmp 14cd7 ; relative offset = -49
 14d08: movsxd  rbp r8d
 14d0b: movsxd  r9 r9d
 14d0e: mov  rax rbx
 14d11: mul  rsp
 14d14: mov  rbx rax
 14d17: jno 14cd7 ; relative offset = -66
 14d19: mov  esp 0x00000001
 14d1f: or  rbx 0xff
 14d23: jmp 14cd7 ; relative offset = -78
 14d25: nop  [rax]
 14d28: movsxd  rbp r8d
 14d2b: movsxd  r9 r9d
 14d2e: mov  rax rbx
 14d31: mul  rsp
 14d34: jo 14f3f ; relative offset = 517
 14d3a: mul  rsp
 14d3d: jo 14f3f ; relative offset = 508
 14d43: mul  rsp
 14d46: jo 14f3f ; relative offset = 499
 14d4c: mov  rbx rax
 14d4f: xor  eax eax
 14d51: or  r12d eax
 14d54: jmp 14cd7 ; relative offset = -127
 14d56: mov  rax rbx
 14d59: movsxd  r9 r9d
 14d5c: shr  rax 0x36
 14d60: jnz 14d19 ; relative offset = -73
 14d62: sal  rbx 0x0a
 14d66: jmp 14cd7 ; relative offset = -148
 14d6b: movsxd  r9 r9d
 14d6e: UNKNOWN-INSTRUCTION
 14d71: js 14d19 ; relative offset = -90
 14d73: add  rbx rbx
 14d76: jmp 14cd7 ; relative offset = -164
 14d7b: movsxd  r9 r9d
 14d7e: jmp 14cd7 ; relative offset = -172
 14d83: movsxd  rbp r8d
 14d86: movsxd  r9 r9d
 14d89: mov  esi 0x00000006
 14d8e: xor  edi edi
 14d90: mov  rax rbx
 14d93: mul  rsp
 14d96: mov  rbx rax
 14d99: jo 14f4d ; relative offset = 430
 14d9f: sub  esi 0x01
 14da2: jnz 14d90 ; relative offset = -20
 14da4: jmp 14cd4 ; relative offset = -213
 14da9: movsxd  r9 r9d
 14dac: mov  rax rbx
 14daf: shr  rax 0x37
 14db3: jnz 14d19 ; relative offset = -160
 14db9: sal  rbx 0x09
 14dbd: jmp 14cd7 ; relative offset = -235
 14dc2: movsxd  rbp r8d
 14dc5: movsxd  r9 r9d
 14dc8: mov  esi 0x00000007
 14dcd: xor  edi edi
 14dcf: nop 
 14dd0: mov  rax rbx
 14dd3: mul  rsp
 14dd6: mov  rbx rax
 14dd9: jo 14f1e ; relative offset = 319
 14ddf: sub  esi 0x01
 14de2: jnz 14dd0 ; relative offset = -20
 14de4: jmp 14cd4 ; relative offset = -277
 14de9: movsxd  rbp r8d
 14dec: movsxd  r9 r9d
 14def: mov  esi 0x00000005
 14df4: xor  edi edi
 14df6: UNKNOWN-INSTRUCTION
 14df8: nop  [0x00000000 + rax + rax * 1]
 14e00: mov  rax rbx
 14e03: mul  rsp
 14e06: mov  rbx rax
 14e09: jo 14f02 ; relative offset = 243
 14e0f: sub  esi 0x01
 14e12: jnz 14e00 ; relative offset = -20
 14e14: jmp 14cd4 ; relative offset = -325
 14e19: movsxd  rbp r8d
 14e1c: movsxd  r9 r9d
 14e1f: mov  esi 0x00000008
 14e24: xor  edi edi
 14e26: UNKNOWN-INSTRUCTION
 14e28: nop  [0x00000000 + rax + rax * 1]
 14e30: mov  rax rbx
 14e33: mul  rsp
 14e36: mov  rbx rax
 14e39: jo 14f2c ; relative offset = 237
 14e3f: sub  esi 0x01
 14e42: jnz 14e30 ; relative offset = -20
 14e44: jmp 14cd4 ; relative offset = -373
 14e49: mov  ecx 0x00000001
 14e4f: mov  ebp 0x00000400
 14e54: jmp 14cb3 ; relative offset = -422
 14e59: mov  ecx 0x00000001
 14e5f: mov  ebp 0x00000400
 14e64: jmp 14d0e ; relative offset = -347
 14e69: mov  ecx 0x00000001
 14e6f: mov  ebp 0x00000400
 14e74: jmp 14d2e ; relative offset = -331
 14e79: mov  ecx 0x00000001
 14e7f: mov  ebp 0x00000400
 14e84: jmp 14cf6 ; relative offset = -403
 14e89: mov  ecx 0x00000001
 14e8f: mov  ebp 0x00000400
 14e94: jmp 14def ; relative offset = -170
 14e99: mov  ecx 0x00000001
 14e9f: mov  ebp 0x00000400
 14ea4: jmp 14e1f ; relative offset = -138
 14ea9: mov  ecx 0x00000001
 14eaf: mov  ebp 0x00000400
 14eb4: jmp 14d89 ; relative offset = -304
 14eb9: mov  ecx 0x00000001
 14ebf: jmp 14cd7 ; relative offset = -493
 14ec4: mov  ecx 0x00000001
 14eca: jmp 14dac ; relative offset = -291
 14ecf: mov  ecx 0x00000001
 14ed5: mov  ebp 0x00000400
 14eda: jmp 14dc8 ; relative offset = -279
 14edf: nop 
 14ee0: mov  ecx 0x00000001
 14ee6: mov  eax 0x00000400
 14eec: jmp 14bf2 ; relative offset = -767
 14ef1: mov  ecx 0x00000002
 14ef7: mov  eax 0x000003e8
 14efd: jmp 14bf2 ; relative offset = -784
 14f02: mov  edi 0x00000001
 14f07: or  rbx 0xff
 14f0b: jmp 14e0f ; relative offset = -257
 14f10: mov  edi 0x00000001
 14f15: or  rbx 0xff
 14f19: jmp 14ccf ; relative offset = -591
 14f1e: mov  edi 0x00000001
 14f23: or  rbx 0xff
 14f27: jmp 14ddf ; relative offset = -333
 14f2c: mov  edi 0x00000001
 14f31: or  rbx 0xff
 14f35: jmp 14e3f ; relative offset = -251
 14f3a: call 4890 ; relative offset = -67247
 14f3f: mov  eax 0x00000001
 14f44: or  rbx 0xff
 14f48: jmp 14d51 ; relative offset = -508
 14f4d: mov  edi 0x00000001
 14f52: or  rbx 0xff
 14f56: jmp 14d9f ; relative offset = -444
 14f5b: nop  [0 + rax + rax * 1]
 14f60: UNKNOWN-INSTRUCTION
 14f64: push  edi
 14f66: mov  r11 rdi
 14f69: push  esi
 14f6b: mov  r14 rcx
 14f6e: push  ebp
 14f70: mov  r13 rdx
 14f73: push  esp
 14f75: push  ebp
 14f76: push  ebx
 14f77: sub  esp 0x00000518
 14f7e: mov  rdi [rcx + 48]
 14f82: mov  r15d [rcx + 8]
 14f86: mov  rax [0x00000558 + rsp]
 14f8e: mov  [8 + rsp] rsi
 14f93: mov  [36 + rsp] r9d
 14f98: mov  r10d [0x00000550 + rsp]
 14fa0: mov  [24 + rsp] rax
 14fa5: mov  [35 + rsp] r8b
 14faa: UNKNOWN-INSTRUCTION
 14fab: mov  rax 0x00000028
 14fb3: mov  [0x00000508 + rsp] rax
 14fbb: xor  eax eax
 14fbd: UNKNOWN-INSTRUCTION
 14fbf: dec  [rax + 141]
 14fc2: add  eax 0x00004bf6
 14fc7: UNKNOWN-INSTRUCTION
 14fcb: mov  [40 + rsp] rax
 14fd0: cmp  r15d 0x0c
 14fd4: jng 150d0 ; relative offset = 246
 14fda: sub  r15d 0x0c
 14fde: movzx  rax [r13 + 0]
 14fe3: xor  r12d r12d
 14fe6: UNKNOWN-INSTRUCTION
 14fe8: jz 1505b ; relative offset = 113
 14fea: mov  [80 + rsp] r15d
 14fef: mov  rbp r11
 14ff2: movsxd  rbx r10d
 14ff5: mov  [16 + rsp] r14
 14ffa: cmp  unknown 0x25
 14ffc: jz 150e8 ; relative offset = 230
 15002: xor  eax eax
 15004: UNKNOWN-INSTRUCTION
 15006: mov  rdx [8 + rsp]
 1500b: mov  esi 0x00000001
 15011: UNKNOWN-INSTRUCTION
 15014: ret 
 15015: UNKNOWN-INSTRUCTION
 15017: ror  [69 + rdi + rcx * 1] 0xf0
 1501c: sub  rdx r12
 1501f: UNKNOWN-INSTRUCTION
 15022: jnb 15078 ; relative offset = 84
 15024: UNKNOWN-INSTRUCTION
 15026: in  eax dx
 15027: jz 1503e ; relative offset = 21
 15029: cmp  ebx 0x01
 1502c: jnle 150b0 ; relative offset = 126
 15032: movzx  rax [r13 + 0]
 15037: add  rbp 0x01
 1503b: mov  [rbp + 255] al
 1503e: add  r12 r14
 15041: mov  r14 r13
 15044: movzx  rax [r14 + 1]
 15049: lea  r13 
 1504d: mov  rbx 0xffffffff
 15054: UNKNOWN-INSTRUCTION
 15056: jnz 14ffa ; relative offset = -94
 15058: mov  r11 rbp
 1505b: UNKNOWN-INSTRUCTION
 1505e: jz 1507b ; relative offset = 27
 15060: cmp  [8 + rsp] 0x00
 15066: jz 1507b ; relative offset = 19
 15068: mov  [r11] 0x00
 1506c: jmp 1507b ; relative offset = 13
 1506e: UNKNOWN-INSTRUCTION
 15071: and  unknown 0x08
 15073: jnz 15044 ; relative offset = -49
 15075: nop  [rax]
 15078: xor  r12d r12d
 1507b: mov  rax [0x00000508 + rsp]
 15083: UNKNOWN-INSTRUCTION
 15084: sub  rax 0x00000028
 1508c: jnz 16e13 ; relative offset = 7553
 15092: add  esp 0x00000518
 15099: mov  rax r12
 1509c: pop  ebx
 1509d: pop  ebp
 1509e: pop  esp
 150a0: pop  ebp
 150a2: pop  esi
 150a4: pop  edi
 150a6: ret 
 150a7: UNKNOWN-INSTRUCTION
 150a8: nop  [0x00000000 + rax + rax * 1]
 150b0: lea  rbx 
 150b4: mov  rdi rbp
 150b7: mov  esi 0x00000020
 150bc: mov  rdx rbx
 150bf: add  rbp rbx
 150c2: call 4960 ; relative offset = -67431
 150c7: jmp 15032 ; relative offset = -154
 150cc: nop  [rax + 0]
 150d0: UNKNOWN-INSTRUCTION
 150d3: mov  eax 0x0000000c
 150d8: UNKNOWN-INSTRUCTION
 150da: clc 
 150dc: jmp 14fde ; relative offset = -259
 150e1: nop  [rax + 0x00000000]
 150e8: movzx  ecx [35 + rsp]
 150ed: xor  r15d r15d
 150f0: xor  r11d r11d
 150f3: mov  [64 + rsp] cl
 150f7: movsx  r8 [r13 + 1]
 150fc: add  r13 0x01
 15100: lea  ecx 
 15104: mov  esi r8d
 15107: mov  edi r8d
 1510a: UNKNOWN-INSTRUCTION
 1510b: stc 
 1510c: cmp  unknown 0x77
 1510e: sub  eax 0x2500ba49
 15113: UNKNOWN-INSTRUCTION
 15119: mov  edx 0x00000001
 1511e: sal  rdx cl
 15121: UNKNOWN-INSTRUCTION
 15123: ror  [rdi] cl
 15125: UNKNOWN-INSTRUCTION
 15127: add  [rax] eax
 15129: UNKNOWN-INSTRUCTION
 1512b: stc 
 1512c: UNKNOWN-INSTRUCTION
 1512d: jz 166ba ; relative offset = 5511
 15133: and  edx 0x01
 15136: jnz 166b2 ; relative offset = 5494
 1513c: sub  r8d 0x30
 15140: cmp  r8d 0x09
 15144: jna 15280 ; relative offset = 310
 1514a: UNKNOWN-INSTRUCTION
 1514c: inc  [rbp + 116]
 1514f: UNKNOWN-INSTRUCTION
 15152: dec  [rdi + 116]
 15155: UNKNOWN-INSTRUCTION
 15159: jp 151d2 ; relative offset = 119
 1515b: UNKNOWN-INSTRUCTION
 1515c: lea  rcx 
 15163: movzx  rdx sil
 15167: movsxd  rdx [rcx + rdx * 4]
 1516b: add  rdx rcx
 1516e: UNKNOWN-INSTRUCTION
 1516f: jmp  rdx
 15171: nop  [rax + 0x00000000]
 15178: movzx  rsi [r13 + 1]
 1517d: lea  r14 
 15181: UNKNOWN-INSTRUCTION
 15184: jp 151fd ; relative offset = 119
 15186: sbb  [rax + 141] ecx
 15189: or  eax 0x00007a52
 1518e: movzx  rdx sil
 15192: movsxd  rdx [rcx + rdx * 4]
 15196: add  rdx rcx
 15199: UNKNOWN-INSTRUCTION
 1519a: jmp  rdx
 1519c: nop  [rax + 0]
 151a0: mov  r13 r14
 151a3: mov  r14 r13
 151a6: UNKNOWN-INSTRUCTION
 151a8: nop  [0x00000000 + rax + rax * 1]
 151b0: lea  rax 
 151b4: lea  edx 
 151b8: mov  r15 rax
 151bb: mov  ecx edx
 151bd: sub  ecx eax
 151bf: UNKNOWN-INSTRUCTION
 151c2: and  eax 0xff408d48
 151c7: jnz 151b8 ; relative offset = -17
 151c9: movsxd  rcx ecx
 151cc: UNKNOWN-INSTRUCTION
 151ce: js 165d8 ; relative offset = 5124
 151d4: cmp  r11d 0x2d
 151d8: jz 165d8 ; relative offset = 5114
 151de: movsxd  rdx ebx
 151e1: UNKNOWN-INSTRUCTION
 151e3: ror  [rax + 137] 
 151e6: ror  [rax + 15] cl
 151e9: UNKNOWN-INSTRUCTION
 151eb: mov  rax [8 + rsp]
 151f0: sub  rax r12
 151f3: UNKNOWN-INSTRUCTION
 151f6: jna 15078 ; relative offset = -388
 151fc: UNKNOWN-INSTRUCTION
 151fe: in  eax dx
 151ff: jz 15589 ; relative offset = 900
 15205: UNKNOWN-INSTRUCTION
 15207: ret  0x3676
 1520a: sub  rdx rcx
 1520d: mov  [48 + rsp] rcx
 15212: lea  r13 
 15217: cmp  r11d 0x30
 1521b: jz 167c9 ; relative offset = 5544
 15221: cmp  r11d 0x2b
 15225: jz 167c9 ; relative offset = 5534
 1522b: mov  rdi rbp
 1522e: mov  esi 0x00000020
 15233: mov  rbp r13
 15236: call 4960 ; relative offset = -67803
 1523b: mov  rcx [48 + rsp]
 15240: UNKNOWN-INSTRUCTION
 15241: jnge 15267 ; relative offset = 36
 15243: UNKNOWN-INSTRUCTION
 15245: jz 16695 ; relative offset = 5194
 1524b: mov  [64 + rsp] rcx
 15250: lea  r13 
 15254: call 46b0 ; relative offset = -68521
 15259: mov  rcx [64 + rsp]
 1525e: UNKNOWN-INSTRUCTION
 1525f: nop 
 15260: movzx  rsi [r15 + r13 * 1]
 15265: mov  rdx [rax]
 15268: mov  edx [rdx + rsi * 4]
 1526b: mov  [RBP + 0 + r13 * 1] dl
 15270: sub  r13 0x01
 15274: jnb 15260 ; relative offset = -22
 15276: add  rbp rcx
 15279: jmp 15589 ; relative offset = 779
 1527e: UNKNOWN-INSTRUCTION
 1527f: nop 
 15280: xor  ebx ebx
 15282: jmp 152ab ; relative offset = 39
 15284: nop  [rax + 0]
 15288: movsx  rdx [r13 + 0]
 1528d: sub  edx 0x30
 15290: add  ebx edx
 15292: jo 152b0 ; relative offset = 28
 15294: movsx  rdi [r13 + 1]
 15299: add  r13 0x01
 1529d: lea  edx 
 152a0: mov  esi edi
 152a2: cmp  edx 0x09
 152a5: UNKNOWN-INSTRUCTION
 152aa: jmp  [rbx + 219]
 152ad: UNKNOWN-INSTRUCTION
 152ae: jno 15288 ; relative offset = -40
 152b0: mov  ebx 0x7fffffff
 152b5: jmp 15294 ; relative offset = -35
 152b7: UNKNOWN-INSTRUCTION
 152b8: nop  [0x00000000 + rax + rax * 1]
 152c0: mov  r11d r8d
 152c3: jmp 150f7 ; relative offset = -465
 152c8: xor  edi edi
 152ca: mov  rdx [16 + rsp]
 152cf: mov  ecx [rdx + 20]
 152d2: mov  r10d [rdx + 28]
 152d6: mov  r14d [rdx + 24]
 152da: mov  eax ecx
 152dc: mov  edx r10d
 152df: sar  eax 0x1f
 152e2: sub  edx r14d
 152e5: add  edx 0x0000017e
 152eb: and  eax 0x00000190
 152f0: lea  r9d 
 152f5: movsxd  rax edx
 152f8: mov  r8d edx
 152fb: imul  rax rax 0x92492493
 15302: sar  r8d 0x1f
 15306: shr  rax 0x20
 1530a: add  eax edx
 1530c: sar  eax 0x02
 1530f: sub  eax r8d
 15312: lea  r8d 
 1531a: sub  r8d eax
 1531d: mov  eax r10d
 15320: sub  eax edx
 15322: lea  eax 
 15327: UNKNOWN-INSTRUCTION
 15328: ror  [rdi] 0x88
 1532b: add  [rsi] edx
 1532d: UNKNOWN-INSTRUCTION
 1532f: mov  eax 0x0000016d
 15335: test  r9b 0x03
 15339: jnz 15375 ; relative offset = 58
 1533b: imul  edx r9d 0xc28f5c29
 15342: mov  eax 0x0000016e
 15348: add  edx 0x051eb850
 1534e: mov  r9d edx
 15351: ror  r9d 0x02
 15355: cmp  r9d 0x028f5c28
 1535c: jnbe  0x17
 1535e: ror  edx 0x04
 15361: xor  r8d r8d
 15364: cmp  edx 0x00a3d70b
 1536a: UNKNOWN-INSTRUCTION
 1536d: rol  [rcx + 129] 0xc0
 15371: insw 
 15372: add  [rax] eax
 15374: UNKNOWN-INSTRUCTION
 15375: sub  r10d r8d
 15378: mov  r8d r10d
 1537b: sub  r8d r14d
 1537e: add  r8d 0x0000017e
 15385: movsxd  rdx r8d
 15388: mov  r9d r8d
 1538b: sub  r10d r8d
 1538e: imul  rdx rdx 0x92492493
 15395: sar  r9d 0x1f
 15399: shr  rdx 0x20
 1539d: add  edx r8d
 153a0: sar  edx 0x02
 153a3: sub  edx r9d
 153a6: lea  r9d 
 153ae: sub  r9d edx
 153b1: lea  r8d 
 153b6: UNKNOWN-INSTRUCTION
 153b8: rol  [rcx + 15] 0x49
 153bc: rol  [rcx + 193] 0xf8
 153c0: UNKNOWN-INSTRUCTION
 153c1: add  r8d 0x01
 153c5: UNKNOWN-INSTRUCTION
 153c7: inc  [rdi + 15]
 153ca: UNKNOWN-INSTRUCTION
 153d3: jnz 16a2a ; relative offset = 5713
 153d9: movsxd  rdx ecx
 153dc: mov  eax ecx
 153de: imul  rdx rdx 0x51eb851f
 153e5: sar  eax 0x1f
 153e8: sar  rdx 0x25
 153ec: sub  edx eax
 153ee: mov  eax ecx
 153f0: imul  edx edx 0x64
 153f3: sub  eax edx
 153f5: add  eax r8d
 153f8: movsxd  rdx eax
 153fb: mov  r9d eax
 153fe: imul  rdx rdx 0x51eb851f
 15405: sar  r9d 0x1f
 15409: sar  rdx 0x25
 1540d: sub  edx r9d
 15410: imul  r9d edx 0x64
 15414: sub  eax r9d
 15417: mov  edx eax
 15419: js 16cba ; relative offset = 6299
 1541f: UNKNOWN-INSTRUCTION
 15422: jz 16cd5 ; relative offset = 6317
 15428: mov  r14 r13
 1542b: cmp  r11d 0x2b
 1542f: jz 16ce7 ; relative offset = 6322
 15435: mov  [72 + rsp] 0x00
 1543a: mov  eax 0x00000001
 1543f: xor  r15d r15d
 15442: mov  [48 + rsp] 0x00000002
 1544a: xor  ecx ecx
 1544c: nop  [rax + 0]
 15450: cmp  edi 0x4f
 15453: jnz 161c8 ; relative offset = 3439
 15459: UNKNOWN-INSTRUCTION
 1545a: ror  [rdi] 0x84
 1545d: UNKNOWN-INSTRUCTION
 1545e: or  eax 0x20ba0000
 15463: and  eax 0x31450000
 15468: in  eax dx
 15469: mov  [0x000000fb + rsp] dx
 15471: mov  [0x000000fd + rsp] dil
 15479: lea  rax 
 15481: mov  [rax] sil
 15484: mov  rcx [16 + rsp]
 15489: lea  rdx 
 15491: lea  rdi 
 15499: mov  [rax + 1] 0x00
 1549d: mov  esi 0x00000400
 154a2: mov  [48 + rsp] r11d
 154a7: call 4b70 ; relative offset = -67900
 154ac: mov  rcx rax
 154af: UNKNOWN-INSTRUCTION
 154b1: ror  [rdi] 0x84
 154b4: mov  bx 
 154b6: UNKNOWN-INSTRUCTION
 154b7: inc  [92 + rbx + rcx * 4]
 154bb: and  unknown 0x30
 154bd: lea  r15 
 154c1: cmp  r11d 0x2d
 154c5: jz 165c8 ; relative offset = 4349
 154cb: UNKNOWN-INSTRUCTION
 154cd: js 165c8 ; relative offset = 4341
 154d3: movsxd  rdx ebx
 154d6: UNKNOWN-INSTRUCTION
 154d9: mov  rbx rdx
 154dc: UNKNOWN-INSTRUCTION
 154e0: mov  rax [8 + rsp]
 154e5: sub  rax r12
 154e8: UNKNOWN-INSTRUCTION
 154eb: jna 15078 ; relative offset = -1145
 154f1: UNKNOWN-INSTRUCTION
 154f3: in  eax dx
 154f4: jz 15589 ; relative offset = 143
 154fa: UNKNOWN-INSTRUCTION
 154fd: jnb 1553c ; relative offset = 61
 154ff: sub  rdx r15
 15502: mov  [72 + rsp] rcx
 15507: lea  rax 
 1550c: mov  [48 + rsp] rax
 15511: cmp  r11d 0x30
 15515: jz 16730 ; relative offset = 4629
 1551b: cmp  r11d 0x2b
 1551f: jz 16730 ; relative offset = 4619
 15525: mov  rdi rbp
 15528: mov  esi 0x00000020
 1552d: call 4960 ; relative offset = -68562
 15532: mov  rbp [48 + rsp]
 15537: mov  rcx [72 + rsp]
 1553c: UNKNOWN-INSTRUCTION
 1553e: in  eax dx
 1553f: jnz 166dc ; relative offset = 4503
 15545: UNKNOWN-INSTRUCTION
 15546: jnge 1556c ; relative offset = 36
 15548: UNKNOWN-INSTRUCTION
 1554a: jz 166c4 ; relative offset = 4468
 15550: lea  r13 
 15554: UNKNOWN-INSTRUCTION
 15556: push  [RBP + 232 + rbp * 1]
 1555a: push  edx
 1555b: UNKNOWN-INSTRUCTION
 1555d: dec  [rax + 141]
 15560: mov  spl 0x24
 15562: add  [rcx] eax
 15564: UNKNOWN-INSTRUCTION
 15568: nop  [0x00000000 + rax + rax * 1]
 15570: movzx  rcx [rsi + r13 * 1]
 15575: mov  rdx [rax]
 15578: mov  edx [rdx + rcx * 4]
 1557b: mov  [RBP + 0 + r13 * 1] dl
 15580: sub  r13 0x01
 15584: jnb 15570 ; relative offset = -22
 15586: add  rbp r15
 15589: add  r12 rbx
 1558c: jmp 15044 ; relative offset = -1357
 15591: mov  r13 r14
 15594: cmp  edi 0x45
 15597: jnz 152ca ; relative offset = -723
 1559d: jmp 151a3 ; relative offset = -1023
 155a2: mov  r14 r13
 155a5: xor  edi edi
 155a7: movzx  eax [64 + rsp]
 155ac: UNKNOWN-INSTRUCTION
 155ae: inc  [rcx + 15]
 155b1: UNKNOWN-INSTRUCTION
 155b3: mov  [64 + rsp] al
 155b7: cmp  edi 0x45
 155ba: jz 151a0 ; relative offset = -1056
 155c0: xor  r13d r13d
 155c3: mov  eax 0x00002520
 155c9: mov  [0x000000fb + rsp] r8d
 155d2: UNKNOWN-INSTRUCTION
 155d3: dec  [rdi]
 155d5: UNKNOWN-INSTRUCTION
 155d9: dec  [rax + 141]
 155dc: UNKNOWN-INSTRUCTION
 155dd: and  unknown 0xfd
 155df: UNKNOWN-INSTRUCTION
 155e2: jmp 15481 ; relative offset = -358
 155e7: mov  r13 r14
 155ea: movzx  rax [r13 + 255]
 155ef: lea  r15 
 155f3: mov  r14 r15
 155f6: cmp  unknown 0x25
 155f8: jnz 151b0 ; relative offset = -1102
 155fe: mov  ecx 0x00000001
 15603: jmp 151cc ; relative offset = -1084
 15608: mov  r14 r13
 1560b: mov  rax [8 + rsp]
 15610: sub  rax r12
 15613: cmp  r11d 0x2d
 15617: jz 1687d ; relative offset = 4704
 1561d: UNKNOWN-INSTRUCTION
 1561f: js 1687d ; relative offset = 4696
 15625: movsxd  rdx ebx
 15628: mov  ebp 0x00000001
 1562e: UNKNOWN-INSTRUCTION
 15630: ror  [69 + rdi + rcx * 1] cl
 15634: UNKNOWN-INSTRUCTION
 15638: jnb 15078 ; relative offset = -1478
 1563e: UNKNOWN-INSTRUCTION
 15640: in  eax dx
 15641: jz 1567d ; relative offset = 58
 15643: cmp  ebx 0x01
 15646: jng 15675 ; relative offset = 45
 15648: sub  rdx 0x01
 1564c: lea  rbx 
 15651: cmp  r11d 0x30
 15655: jz 16c77 ; relative offset = 5660
 1565b: cmp  r11d 0x2b
 1565f: jz 16c77 ; relative offset = 5650
 15665: mov  rdi rbp
 15668: mov  esi 0x00000020
 1566d: mov  rbp rbx
 15670: call 4960 ; relative offset = -68885
 15675: mov  [rbp + 0] 0x09
 15679: add  rbp 0x01
 1567d: add  r12 r13
 15680: jmp 15044 ; relative offset = -1601
 15685: mov  r14 r13
 15688: xor  edi edi
 1568a: mov  rax [16 + rsp]
 1568f: mov  esi 0x0000006b
 15694: mov  edx [rax + 8]
 15697: UNKNOWN-INSTRUCTION
 1569a: mov  eax 0x0000005f
 1569f: mov  [48 + rsp] 0x00000002
 156a7: UNKNOWN-INSTRUCTION
 156ab: mov  eax edx
 156ad: mov  [72 + rsp] 0x00
 156b2: xor  ecx ecx
 156b4: shr  eax 0x1f
 156b7: mov  r15d eax
 156ba: mov  eax edx
 156bc: not  edx
 156be: shr  eax 0x1f
 156c1: jmp 15450 ; relative offset = -630
 156c6: mov  r14 r13
 156c9: xor  edi edi
 156cb: mov  rax [16 + rsp]
 156d0: mov  [72 + rsp] 0x00
 156d5: mov  esi 0x0000006a
 156da: mov  [48 + rsp] 0x00000003
 156e2: mov  eax [rax + 28]
 156e5: cmp  eax 0xff
 156e8: lea  edx 
 156eb: UNKNOWN-INSTRUCTION
 156f2: xor  ecx ecx
 156f4: jmp 15450 ; relative offset = -681
 156f9: mov  r14 r13
 156fc: xor  edi edi
 156fe: mov  rax [16 + rsp]
 15703: mov  esi 0x00000065
 15708: mov  edx [rax + 12]
 1570b: jmp 15697 ; relative offset = -118
 1570d: mov  r14 r13
 15710: xor  edi edi
 15712: mov  rax [16 + rsp]
 15717: mov  [48 + rsp] 0x00000002
 1571f: mov  esi 0x00000064
 15724: mov  edx [rax + 12]
 15727: jmp 156ab ; relative offset = -126
 15729: mov  r14 r13
 1572c: xor  edi edi
 1572e: movzx  eax [64 + rsp]
 15733: UNKNOWN-INSTRUCTION
 15736: mov  esi 0x00000042
 1573b: UNKNOWN-INSTRUCTION
 1573d: mov  [r13 + 49] 0x244488ed
 15745: jmp 155c3 ; relative offset = -392
 1574b: mov  r14 r13
 1574e: movzx  eax [64 + rsp]
 15753: UNKNOWN-INSTRUCTION
 15756: mov  esi 0x00000041
 1575b: UNKNOWN-INSTRUCTION
 1575f: mov  [64 + rsp] al
 15763: mov  eax 0x00002520
 15768: xor  r13d r13d
 1576b: mov  [0x000000fb + rsp] ax
 15773: lea  rax 
 1577b: jmp 15481 ; relative offset = -767
 15780: xor  edi edi
 15782: movzx  rax [r13 + 1]
 15787: lea  r14 
 1578b: mov  ecx 0x00000001
 15791: cmp  unknown 0x3a
 15793: jz 165a9 ; relative offset = 3600
 15799: mov  esi 0x0000003a
 1579e: cmp  unknown 0x7a
 157a0: jnz 151a3 ; relative offset = -1539
 157a6: mov  rax [16 + rsp]
 157ab: mov  ecx [rax + 32]
 157ae: UNKNOWN-INSTRUCTION
 157af: leave 
 157b0: js 15044 ; relative offset = -1906
 157b6: mov  rdx [rax + 40]
 157ba: mov  edi 0x00000001
 157c0: UNKNOWN-INSTRUCTION
 157c1: sar  [rax + 20] cl
 157c4: mov  edi 0x00000000
 157ca: jnz 157d8 ; relative offset = 12
 157cc: mov  rax [40 + rsp]
 157d1: UNKNOWN-INSTRUCTION
 157d3: sub  eax 0xc7940f41
 157d8: movsxd  rax edx
 157db: mov  ecx edx
 157dd: imul  r8 rax 0x91a2b3c5
 157e4: sar  ecx 0x1f
 157e7: imul  rax rax 0x88888889
 157ee: shr  r8 0x20
 157f2: shr  rax 0x20
 157f6: add  r8d edx
 157f9: add  eax edx
 157fb: sar  r8d 0x0b
 157ff: sar  eax 0x05
 15802: mov  r10d r8d
 15805: sub  eax ecx
 15807: sub  r10d ecx
 1580a: movsxd  rcx eax
 1580d: mov  r8d eax
 15810: imul  rcx rcx 0x88888889
 15817: sar  r8d 0x1f
 1581b: shr  rcx 0x20
 1581f: add  ecx eax
 15821: sar  ecx 0x05
 15824: sub  ecx r8d
 15827: imul  r8d ecx 0x3c
 1582b: mov  ecx eax
 1582d: imul  eax eax 0x3c
 15830: sub  ecx r8d
 15833: mov  r8d edx
 15836: sub  r8d eax
 15839: cmp  r9 0x02
 1583d: jz 16ba8 ; relative offset = 4965
 15843: UNKNOWN-INSTRUCTION
 1584b: leave 
 1584c: jz 16c3d ; relative offset = 5099
 15852: imul  edx r10d 0x64
 15856: mov  eax r15d
 15859: mov  [72 + rsp] 0x01
 1585e: mov  [48 + rsp] 0x00000006
 15866: xor  eax 0x01
 15869: add  edx ecx
 1586b: mov  ecx 0x00000004
 15870: jmp 15450 ; relative offset = -1061
 15875: mov  r14 r13
 15878: movzx  eax [64 + rsp]
 1587d: UNKNOWN-INSTRUCTION
 15880: mov  esi 0x00000061
 15885: UNKNOWN-INSTRUCTION
 15889: mov  [64 + rsp] al
 1588d: jmp 15763 ; relative offset = -303
 15892: mov  r14 r13
 15895: xor  edi edi
 15897: xor  r13d r13d
 1589a: movzx  ecx [64 + rsp]
 1589f: UNKNOWN-INSTRUCTION
 158a2: mov  eax 0x00000000
 158a7: mov  esi 0x00000070
 158ac: UNKNOWN-INSTRUCTION
 158ae: out  dx eax
 158b0: UNKNOWN-INSTRUCTION
 158b3: mov  [64 + rsp] cl
 158b7: jmp 155c3 ; relative offset = -761
 158bc: mov  r14 r13
 158bf: mov  rax [8 + rsp]
 158c4: sub  rax r12
 158c7: cmp  r11d 0x2d
 158cb: jz 1685f ; relative offset = 3982
 158d1: UNKNOWN-INSTRUCTION
 158d3: js 1685f ; relative offset = 3974
 158d9: movsxd  rdx ebx
 158dc: mov  ebp 0x00000001
 158e2: UNKNOWN-INSTRUCTION
 158e4: ror  [69 + rdi + rcx * 1] cl
 158e8: UNKNOWN-INSTRUCTION
 158ec: jnb 15078 ; relative offset = -2170
 158f2: UNKNOWN-INSTRUCTION
 158f4: in  eax dx
 158f5: jz 1567d ; relative offset = -638
 158fb: cmp  ebx 0x01
 158fe: jng 1592d ; relative offset = 45
 15900: sub  rdx 0x01
 15904: lea  rbx 
 15909: cmp  r11d 0x30
 1590d: jz 16c28 ; relative offset = 4885
 15913: cmp  r11d 0x2b
 15917: jz 16c28 ; relative offset = 4875
 1591d: mov  rdi rbp
 15920: mov  esi 0x00000020
 15925: mov  rbp rbx
 15928: call 4960 ; relative offset = -69581
 1592d: mov  [rbp + 0] 0x0a
 15931: add  rbp 0x01
 15935: jmp 1567d ; relative offset = -701
 1593a: mov  r14 r13
 1593d: xor  edi edi
 1593f: mov  rax [16 + rsp]
 15944: mov  [72 + rsp] 0x00
 15949: mov  esi 0x0000006d
 1594e: mov  [48 + rsp] 0x00000002
 15956: mov  eax [rax + 16]
 15959: cmp  eax 0xff
 1595c: lea  edx 
 1595f: UNKNOWN-INSTRUCTION
 15966: xor  ecx ecx
 15968: jmp 15450 ; relative offset = -1309
 1596d: mov  r14 r13
 15970: xor  edi edi
 15972: mov  edx [80 + rsp]
 15976: mov  esi 0x0000006c
 1597b: jmp 15697 ; relative offset = -745
 15980: mov  r14 r13
 15983: xor  edi edi
 15985: jmp 155c0 ; relative offset = -970
 1598a: mov  r14 r13
 1598d: mov  rax [16 + rsp]
 15992: mov  [72 + rsp] 0x00
 15997: xor  r15d r15d
 1599a: xor  ecx ecx
 1599c: mov  [48 + rsp] 0x00000001
 159a4: mov  eax [rax + 16]
 159a7: lea  edx 
 159aa: lea  edx 
 159ad: sar  edx 0x05
 159b0: add  edx 0x01
 159b3: nop  [0 + rax + rax * 1]
 159b8: lea  r10 
 159c0: mov  ecx 0xcccccccd
 159c6: mov  r13 r10
 159c9: nop  [rax + 0x00000000]
 159d0: mov  rdi r13
 159d3: test  cl 0x01
 159d6: jz 159e1 ; relative offset = 9
 159d8: mov  [r13 + 255] 0x3a
 159dd: sub  rdi 0x01
 159e1: mov  eax edx
 159e3: mov  esi edx
 159e5: sar  ecx 
 159e7: lea  r13 
 159eb: imul  rax r9
 159ef: shr  rax 0x23
 159f3: lea  r8d 
 159f7: add  r8d r8d
 159fa: sub  esi r8d
 159fd: add  esi 0x30
 15a00: mov  [rdi + 255] sil
 15a04: cmp  edx 0x09
 15a07: jnbe  0x08
 15a09: UNKNOWN-INSTRUCTION
 15a0a: leave 
 15a0b: jz 15b68 ; relative offset = 343
 15a11: mov  edx eax
 15a13: jmp 159d0 ; relative offset = -69
 15a15: mov  r14 r13
 15a18: mov  rax [16 + rsp]
 15a1d: cmp  [24 + rsp] 0x00
 15a23: UNKNOWN-INSTRUCTION
 15a25: outsw 
 15a26: UNKNOWN-INSTRUCTION
 15a2a: outsw 
 15a2b: UNKNOWN-INSTRUCTION
 15a2e: outsw 
 15a2f: push  eax
 15a30: UNKNOWN-INSTRUCTION
 15a31: mov  rax [rax + 48]
 15a35: UNKNOWN-INSTRUCTION
 15a36: sub  [48 + rsp] esp
 15a3a: mov  [0x000000b0 + rsp] rax
 15a42: mov  [48 + rsp] r11d
 15a47: UNKNOWN-INSTRUCTION
 15a48: sub  [0x00000080 + rsp] eax
 15a4f: UNKNOWN-INSTRUCTION
 15a50: sub  [0x00000090 + rsp] edx
 15a57: UNKNOWN-INSTRUCTION
 15a58: sub  [0x000000a0 + rsp] esp
 15a5f: jz 16c5d ; relative offset = 4600
 15a65: mov  rdi [24 + rsp]
 15a6a: call 10940 ; relative offset = -20783
 15a6f: mov  r11d [48 + rsp]
 15a74: UNKNOWN-INSTRUCTION
 15a76: ror  [rcx + 137] 0xc5
 15a7a: jz 16e29 ; relative offset = 5033
 15a80: lea  r15 
 15a88: mov  rdi r15
 15a8b: call 4ae0 ; relative offset = -69552
 15a90: mov  r11d [48 + rsp]
 15a95: cmp  rax 0xff
 15a99: mov  [120 + rsp] rax
 15a9e: jz 16a55 ; relative offset = 4017
 15aa4: mov  rdi [24 + rsp]
 15aa9: mov  rsi r15
 15aac: mov  [48 + rsp] r11d
 15ab1: call 107e0 ; relative offset = -21206
 15ab6: mov  r11d [48 + rsp]
 15abb: UNKNOWN-INSTRUCTION
 15abd: jnz 15ac8 ; relative offset = 9
 15abf: mov  [120 + rsp] 0xffffffff
 15ac8: cmp  r13 0x01
 15acc: jz 15ae8 ; relative offset = 26
 15ace: mov  rdi r13
 15ad1: mov  [48 + rsp] r11d
 15ad6: call 10a40 ; relative offset = -20635
 15adb: mov  r11d [48 + rsp]
 15ae0: UNKNOWN-INSTRUCTION
 15ae1: ror  [rdi] 0x84
 15ae4: adc  eax [r8]
 15ae7: UNKNOWN-INSTRUCTION
 15ae8: mov  rcx [120 + rsp]
 15aed: mov  rax rcx
 15af0: lea  r10 
 15af8: mov  esi 0x00000030
 15afd: shr  rax 0x3f
 15b01: mov  r13 r10
 15b04: mov  r15 rax
 15b07: UNKNOWN-INSTRUCTION
 15b08: nop  [0x00000000 + rax + rax * 1]
 15b10: mov  rax 0x6666666666666667
 15b1a: imul  rcx
 15b1d: mov  rax rcx
 15b20: sar  rax 0x3f
 15b24: sar  rdx 0x02
 15b28: sub  rdx rax
 15b2b: lea  rdi 
 15b2f: mov  rax rdx
 15b32: add  rdi rdi
 15b35: sub  rcx rdi
 15b38: mov  rdx rcx
 15b3b: mov  rcx rax
 15b3e: mov  eax esi
 15b40: sub  eax edx
 15b42: add  edx 0x30
 15b45: UNKNOWN-INSTRUCTION
 15b47: dec  [rdi]
 15b49: ror  [r9 + 131] 
 15b4d: in  eax dx
 15b4e: add  [rcx + 136] eax
 15b51: push  ebp
 15b52: UNKNOWN-INSTRUCTION
 15b55: leave 
 15b56: jnz 15b10 ; relative offset = -72
 15b58: mov  [72 + rsp] 0x00
 15b5d: mov  [48 + rsp] 0x00000001
 15b65: nop  [rax]
 15b68: UNKNOWN-INSTRUCTION
 15b6b: jz 16650 ; relative offset = 2783
 15b71: cmp  r11d 0x2d
 15b75: UNKNOWN-INSTRUCTION
 15b77: rol  [rbp + 0x5c480fdb] 0x24
 15b7e: UNKNOWN-INSTRUCTION
 15b7f: sub  r10 r13
 15b82: UNKNOWN-INSTRUCTION
 15b84: dec  [rdi]
 15b86: UNKNOWN-INSTRUCTION
 15b87: pop  ebp
 15b88: UNKNOWN-INSTRUCTION
 15b8c: jnge 15bb2 ; relative offset = 36
 15b8e: UNKNOWN-INSTRUCTION
 15b90: jnz 16725 ; relative offset = 2959
 15b96: movsxd  rcx r10d
 15b99: UNKNOWN-INSTRUCTION
 15b9b: ror  [rdi] cl
 15b9d: mov   dx
 15b9f: UNKNOWN-INSTRUCTION
 15ba3: ror  [rdi] 0x84
 15ba6: mov  edx 0x4800000a
 15bab: UNKNOWN-INSTRUCTION
 15bac: ror  [rax + 137] cl
 15baf: ret 
 15bb0: UNKNOWN-INSTRUCTION
 15bb2: ret  0x0f48
 15bb5: UNKNOWN-INSTRUCTION
 15bb7: mov  rax [8 + rsp]
 15bbc: sub  rax r12
 15bbf: UNKNOWN-INSTRUCTION
 15bc2: jna 15078 ; relative offset = -2896
 15bc8: UNKNOWN-INSTRUCTION
 15bca: in  eax dx
 15bcb: jz 15589 ; relative offset = -1608
 15bd1: UNKNOWN-INSTRUCTION
 15bd3: ret  0x3676
 15bd6: sub  rdx rcx
 15bd9: mov  [48 + rsp] rcx
 15bde: lea  r15 
 15be3: cmp  r11d 0x30
 15be7: jz 1674c ; relative offset = 2911
 15bed: cmp  r11d 0x2b
 15bf1: jz 1674c ; relative offset = 2901
 15bf7: mov  rdi rbp
 15bfa: mov  esi 0x00000020
 15bff: mov  rbp r15
 15c02: call 4960 ; relative offset = -70311
 15c07: mov  rcx [48 + rsp]
 15c0c: UNKNOWN-INSTRUCTION
 15c0d: jnge 15c33 ; relative offset = 36
 15c0f: UNKNOWN-INSTRUCTION
 15c11: jz 16678 ; relative offset = 2657
 15c17: lea  r15 
 15c1b: UNKNOWN-INSTRUCTION
 15c1d: leave 
 15c1e: jz 15276 ; relative offset = -2478
 15c24: mov  [64 + rsp] rcx
 15c29: call 46b0 ; relative offset = -71038
 15c2e: mov  rcx [64 + rsp]
 15c33: nop  [0 + rax + rax * 1]
 15c38: movzx  rsi [R13 + 0 + r15 * 1]
 15c3e: mov  rdx [rax]
 15c41: mov  edx [rdx + rsi * 4]
 15c44: mov  [RBP + 0 + r15 * 1] dl
 15c49: sub  r15 0x01
 15c4d: jnb 15c38 ; relative offset = -23
 15c4f: jmp 15276 ; relative offset = -2526
 15c54: mov  r14 r13
 15c57: movzx  ecx [64 + rsp]
 15c5c: xor  eax eax
 15c5e: UNKNOWN-INSTRUCTION
 15c60: dec  [rax + 139]
 15c63: jnge 15c89 ; relative offset = 36
 15c65: UNKNOWN-INSTRUCTION
 15c66: mov  [48 + rsp] r11d
 15c6b: UNKNOWN-INSTRUCTION
 15c6e: mov  [64 + rsp] cl
 15c72: call 4880 ; relative offset = -70647
 15c77: mov  r11d [48 + rsp]
 15c7c: mov  r13 rax
 15c7f: cmp  r11d 0x2d
 15c83: jz 1689b ; relative offset = 3090
 15c89: UNKNOWN-INSTRUCTION
 15c8b: js 1689b ; relative offset = 3082
 15c91: movsxd  rbx ebx
 15c94: UNKNOWN-INSTRUCTION
 15c97: mov  rax rbx
 15c9a: UNKNOWN-INSTRUCTION
 15c9e: mov  [48 + rsp] rax
 15ca3: mov  rax [8 + rsp]
 15ca8: sub  rax r12
 15cab: UNKNOWN-INSTRUCTION
 15cad: and  unknown 0x30
 15cb0: jna 15078 ; relative offset = -3134
 15cb6: UNKNOWN-INSTRUCTION
 15cb8: in  eax dx
 15cb9: jz 15d30 ; relative offset = 117
 15cbb: UNKNOWN-INSTRUCTION
 15cbe: jnb 15cef ; relative offset = 47
 15cc0: sub  rbx r13
 15cc3: mov  rdx rbx
 15cc6: lea  rbx 
 15ccb: cmp  r11d 0x30
 15ccf: jz 16c8c ; relative offset = 4023
 15cd5: cmp  r11d 0x2b
 15cd9: jz 16c8c ; relative offset = 4013
 15cdf: mov  rdi rbp
 15ce2: mov  esi 0x00000020
 15ce7: mov  rbp rbx
 15cea: call 4960 ; relative offset = -70543
 15cef: UNKNOWN-INSTRUCTION
 15cf1: dec  [rdi]
 15cf3: UNKNOWN-INSTRUCTION
 15cf9: jnge 15d1f ; relative offset = 36
 15cfb: UNKNOWN-INSTRUCTION
 15cfd: jz 16bd4 ; relative offset = 3793
 15d03: lea  rbx 
 15d07: UNKNOWN-INSTRUCTION
 15d09: in  eax dx
 15d0a: jz 15d2d ; relative offset = 33
 15d0c: call 46b0 ; relative offset = -71265
 15d11: mov  rcx [40 + rsp]
 15d16: mov  rsi rax
 15d19: movzx  edx [rcx + rbx * 1]
 15d1d: mov  rax [rsi]
 15d20: mov  eax [rax + rdx * 4]
 15d23: mov  [RBP + 0 + rbx * 1] al
 15d27: sub  rbx 0x01
 15d2b: jnb 15d19 ; relative offset = -20
 15d2d: add  rbp r13
 15d30: add  r12 [48 + rsp]
 15d35: jmp 15044 ; relative offset = -3318
 15d3a: mov  r14 r13
 15d3d: xor  edi edi
 15d3f: xor  r9d r9d
 15d42: jmp 157a6 ; relative offset = -1441
 15d47: mov  r14 r13
 15d4a: UNKNOWN-INSTRUCTION
 15d4d: jnz 15d57 ; relative offset = 8
 15d4f: UNKNOWN-INSTRUCTION
 15d51: js 16d63 ; relative offset = 4108
 15d57: lea  ecx 
 15d5a: xor  eax eax
 15d5c: lea  r15 
 15d63: UNKNOWN-INSTRUCTION
 15d64: leave 
 15d65: UNKNOWN-INSTRUCTION
 15d66: ror  [r9 + 0x0f302444] 0x1f
 15d6e: UNKNOWN-INSTRUCTION
 15d70: movzx  r8 [64 + rsp]
 15d76: sub  rsp 0x08
 15d7a: mov  r9d r11d
 15d7d: xor  edi edi
 15d7f: mov  eax [0x00000568 + rsp]
 15d86: mov  rdx r15
 15d89: mov  rsi 0xffffffff
 15d90: push  eax
 15d91: push  [40 + rsp]
 15d95: mov  eax [72 + rsp]
 15d99: push  eax
 15d9a: mov  rcx [48 + rsp]
 15d9f: mov  [104 + rsp] r11d
 15da4: mov  [96 + rsp] r8d
 15da9: call 14f60 ; relative offset = -3662
 15dae: mov  r11d [104 + rsp]
 15db3: add  rsp 0x20
 15db7: mov  r8d [64 + rsp]
 15dbc: mov  r13 rax
 15dbf: cmp  r11d 0x2d
 15dc3: jz 1671b ; relative offset = 2386
 15dc9: UNKNOWN-INSTRUCTION
 15dcb: js 1671b ; relative offset = 2378
 15dd1: movsxd  rdx ebx
 15dd4: UNKNOWN-INSTRUCTION
 15dd6: ror  [rcx + 137] 
 15dd9: ror  [67 + rdi + rcx * 1] cl
 15ddd: ror  [rax + 139] 
 15de0: pop  esp
 15de1: and  unknown 0x08
 15de3: sub  rbx r12
 15de6: UNKNOWN-INSTRUCTION
 15de8: ror  [rdi] cl
 15dea: UNKNOWN-INSTRUCTION
 15deb: mov  edx esi
 15ded: UNKNOWN-INSTRUCTION
 15dee: dec  [rax + 133]
 15df1: in  eax dx
 15df2: jz 15e8a ; relative offset = 146
 15df8: UNKNOWN-INSTRUCTION
 15dfb: jna 15e4e ; relative offset = 81
 15dfd: sub  rdx r13
 15e00: mov  [88 + rsp] r10
 15e05: lea  rax 
 15e0a: mov  [84 + rsp] r11d
 15e0f: mov  [64 + rsp] rax
 15e14: mov  [72 + rsp] r8d
 15e19: cmp  r11d 0x30
 15e1d: jz 16839 ; relative offset = 2582
 15e23: cmp  r11d 0x2b
 15e27: jz 16839 ; relative offset = 2572
 15e2d: mov  rdi rbp
 15e30: mov  esi 0x00000020
 15e35: call 4960 ; relative offset = -70874
 15e3a: mov  rbp [64 + rsp]
 15e3f: mov  r10 [88 + rsp]
 15e44: mov  r11d [84 + rsp]
 15e49: mov  r8d [72 + rsp]
 15e4e: mov  [64 + rsp] r10
 15e53: sub  rsp 0x08
 15e57: mov  rdi rbp
 15e5a: mov  r9d r11d
 15e5d: mov  eax [0x00000568 + rsp]
 15e64: mov  rdx r15
 15e67: mov  rsi rbx
 15e6a: add  rbp r13
 15e6d: push  eax
 15e6e: push  [40 + rsp]
 15e72: mov  eax [72 + rsp]
 15e76: push  eax
 15e77: mov  rcx [48 + rsp]
 15e7c: call 14f60 ; relative offset = -3873
 15e81: mov  r10 [96 + rsp]
 15e86: add  rsp 0x20
 15e8a: add  r12 r10
 15e8d: jmp 15044 ; relative offset = -3662
 15e92: mov  r14 r13
 15e95: mov  [48 + rsp] 0xffffffff
 15e9d: lea  r15 
 15ea4: jmp 15d70 ; relative offset = -313
 15ea9: mov  r14 r13
 15eac: xor  edi edi
 15eae: mov  rax [16 + rsp]
 15eb3: mov  ecx [rax + 20]
 15eb6: cmp  ecx 0xfffff894
 15ebc: lea  eax 
 15ec2: UNKNOWN-INSTRUCTION
 15ec7: insb 
 15ec8: UNKNOWN-INSTRUCTION
 15ecb: sbb  eax eax
 15ecd: and  eax 0x9d
 15ed0: add  eax ecx
 15ed2: movsxd  rdx eax
 15ed5: sar  eax 0x1f
 15ed8: imul  rdx rdx 0x51eb851f
 15edf: sar  rdx 0x25
 15ee3: sub  edx eax
 15ee5: add  edx 0x13
 15ee8: cmp  ecx 0xfffff894
 15eee: UNKNOWN-INSTRUCTION
 15ef0: rol  [rbp + 133] 0xdb
 15ef4: jnz 169be ; relative offset = 2756
 15efa: cmp  [36 + rsp] 0x2b
 15eff: mov  r11d [36 + rsp]
 15f04: jz 169c8 ; relative offset = 2750
 15f0a: mov  [72 + rsp] 0x00
 15f0f: mov  esi 0x00000043
 15f14: mov  [48 + rsp] 0x00000002
 15f1c: jmp 1544a ; relative offset = -2775
 15f21: mov  r14 r13
 15f24: UNKNOWN-INSTRUCTION
 15f26: mov  eax 0x00000009
 15f2b: mov  edx [0x00000560 + rsp]
 15f32: mov  ebp 0x00000009
 15f38: UNKNOWN-INSTRUCTION
 15f3b: jmp 15f58 ; relative offset = 27
 15f3d: nop  [rax]
 15f40: imul  rax rax 0x66666667
 15f47: mov  ecx edx
 15f49: sub  r13d 0x01
 15f4d: sar  ecx 0x1f
 15f50: sar  rax 0x22
 15f54: sub  eax ecx
 15f56: mov  edx eax
 15f58: movsxd  rax edx
 15f5b: UNKNOWN-INSTRUCTION
 15f5e: jnle 15f40 ; relative offset = -32
 15f60: imul  rcx rax 0x66666667
 15f67: mov  esi edx
 15f69: sar  esi 0x1f
 15f6c: sar  rcx 0x22
 15f70: sub  ecx esi
 15f72: lea  esi 
 15f75: mov  ecx edx
 15f77: add  esi esi
 15f79: sub  ecx esi
 15f7b: cmp  r13d 0x01
 15f7f: jz 168a7 ; relative offset = 2338
 15f85: UNKNOWN-INSTRUCTION
 15f86: leave 
 15f87: jz 15f40 ; relative offset = -73
 15f89: movsxd  r15 r13d
 15f8c: mov  rsi r15
 15f8f: UNKNOWN-INSTRUCTION
 15f91: in  eax dx
 15f92: jz 16de6 ; relative offset = 3662
 15f98: lea  rcx 
 15fa0: lea  edi 
 15fa4: lea  rsi 
 15fac: sub  rsi rdi
 15faf: jmp 15fba ; relative offset = 9
 15fb1: nop  [rax + 0x00000000]
 15fb8: cdqe 
 15fba: imul  rax rax 0x66666667
 15fc1: mov  edi edx
 15fc3: sub  rcx 0x01
 15fc7: sar  edi 0x1f
 15fca: sar  rax 0x22
 15fce: sub  eax edi
 15fd0: lea  edi 
 15fd3: add  edi edi
 15fd5: sub  edx edi
 15fd7: add  edx 0x30
 15fda: mov  [rcx] dl
 15fdc: mov  edx eax
 15fde: UNKNOWN-INSTRUCTION
 15fe1: jnz 15fb8 ; relative offset = -43
 15fe3: UNKNOWN-INSTRUCTION
 15fe6: mov  eax 0x00000030
 15feb: UNKNOWN-INSTRUCTION
 15fef: mov  rax [8 + rsp]
 15ff4: sub  rax r12
 15ff7: UNKNOWN-INSTRUCTION
 15ff9: clc 
 15ffa: jna 15078 ; relative offset = -3976
 16000: UNKNOWN-INSTRUCTION
 16002: in  eax dx
 16003: jz 16054 ; relative offset = 79
 16005: UNKNOWN-INSTRUCTION
 16006: jnge 1602c ; relative offset = 36
 16008: UNKNOWN-INSTRUCTION
 1600a: jz 16b56 ; relative offset = 2886
 16010: lea  rdx 
 16014: mov  [48 + rsp] rdx
 16019: UNKNOWN-INSTRUCTION
 1601b: push  [68 + rbx + rsi * 1]
 1601f: mov  [64 + rsp] ebx
 16023: call 46b0 ; relative offset = -72056
 16028: mov  rdx [48 + rsp]
 1602d: mov  r11d [64 + rsp]
 16032: lea  rdi 
 1603a: mov  rcx rax
 1603d: movzx  esi [rdi + rdx * 1]
 16041: mov  rax [rcx]
 16044: mov  eax [rax + rsi * 4]
 16047: mov  [RBP + 0 + rdx * 1] al
 1604b: sub  rdx 0x01
 1604f: jnb 1603d ; relative offset = -20
 16051: add  rbp r15
 16054: add  r12 r15
 16057: cmp  r11d 0x2d
 1605b: jz 1506e ; relative offset = -4083
 16061: sub  ebx r13d
 16064: movsxd  rdx ebx
 16067: js 1506e ; relative offset = -4095
 1606d: mov  rax [8 + rsp]
 16072: sub  rax r12
 16075: UNKNOWN-INSTRUCTION
 16077: ret  0x830f
 1607a: UNKNOWN-INSTRUCTION
 1607b: out  dx eax
 1607c: UNKNOWN-INSTRUCTION
 1607d: dec  [rax + 133]
 16080: in  eax dx
 16081: jz 16dde ; relative offset = 3415
 16087: UNKNOWN-INSTRUCTION
 16089: ror  [rdi] cl
 1608b: UNKNOWN-INSTRUCTION
 1608c: mov  spl 0xef
 1608e: UNKNOWN-INSTRUCTION
 1608f: dec  [rax + 141]
 16092: pop  esp
 16093: adc  eax 0xd4014900
 16098: cmp  r11d 0x30
 1609c: jz 16d4e ; relative offset = 3244
 160a2: cmp  r11d 0x2b
 160a6: jz 16d4e ; relative offset = 3234
 160ac: mov  rdi rbp
 160af: mov  esi 0x00000020
 160b4: mov  rbp rbx
 160b7: call 4960 ; relative offset = -71516
 160bc: jmp 15044 ; relative offset = -4221
 160c1: mov  r14 r13
 160c4: xor  edi edi
 160c6: mov  rax [16 + rsp]
 160cb: mov  [48 + rsp] 0x00000002
 160d3: mov  esi 0x0000004d
 160d8: mov  edx [rax + 4]
 160db: jmp 156ab ; relative offset = -2613
 160e0: mov  r14 r13
 160e3: xor  edi edi
 160e5: mov  esi 0x00000063
 160ea: xor  r13d r13d
 160ed: jmp 155c3 ; relative offset = -2863
 160f2: mov  r14 r13
 160f5: xor  edi edi
 160f7: mov  rax [16 + rsp]
 160fc: movsxd  rdx [rax + 20]
 16100: mov  rax rdx
 16103: imul  rdx rdx 0x51eb851f
 1610a: mov  ecx eax
 1610c: sar  ecx 0x1f
 1610f: sar  rdx 0x25
 16113: sub  edx ecx
 16115: imul  ecx edx 0x64
 16118: mov  edx eax
 1611a: sub  edx ecx
 1611c: jns 1612d ; relative offset = 15
 1611e: mov  ecx edx
 16120: add  edx 0x64
 16123: neg  ecx
 16125: UNKNOWN-INSTRUCTION
 16127: clc 
 16128: UNKNOWN-INSTRUCTION
 16129: dec  [rdi]
 1612b: sar  [rsi + 0x00000079] 
 16132: UNKNOWN-INSTRUCTION
 16135: jnz 1542b ; relative offset = -3344
 1613b: mov  eax [36 + rsp]
 1613f: cmp  eax 0x2b
 16142: jz 16906 ; relative offset = 1982
 16148: mov  r11d eax
 1614b: mov  [72 + rsp] 0x00
 16150: mov  esi 0x00000079
 16155: xor  r15d r15d
 16158: mov  [48 + rsp] 0x00000002
 16160: mov  eax 0x00000001
 16165: jmp 1544a ; relative offset = -3360
 1616a: mov  r14 r13
 1616d: xor  edi edi
 1616f: mov  esi 0x00000078
 16174: xor  r13d r13d
 16177: jmp 155c3 ; relative offset = -3001
 1617c: mov  r14 r13
 1617f: xor  edi edi
 16181: mov  rax [16 + rsp]
 16186: mov  esi 0x00000059
 1618b: mov  edx [rax + 20]
 1618e: cmp  edx 0xfffff894
 16194: UNKNOWN-INSTRUCTION
 16197: mov  [rcx + 0x00076cc2] 0xdb854500
 161a1: jnz 168d5 ; relative offset = 1838
 161a7: mov  r11d [36 + rsp]
 161ac: cmp  r11d 0x2b
 161b0: jz 16dc7 ; relative offset = 3089
 161b6: mov  [72 + rsp] 0x00
 161bb: xor  ecx ecx
 161bd: mov  [48 + rsp] 0x00000004
 161c5: nop  [rax]
 161c8: mov  eax edx
 161ca: neg  eax
 161cc: UNKNOWN-INSTRUCTION
 161ce: dec  [rdi]
 161d0: shr  r9b 
 161d3: loope 161cc ; relative offset = -9
 161d5: UNKNOWN-INSTRUCTION
 161d6: dec  [rbp + 137]
 161d9: out  dx unknown
 161da: xor  edi edi
 161dc: mov  esi 0x00000058
 161e1: xor  r13d r13d
 161e4: jmp 155c3 ; relative offset = -3110
 161e9: mov  r14 r13
 161ec: xor  edi edi
 161ee: mov  rsi [16 + rsp]
 161f3: mov  [48 + rsp] 0x00000002
 161fb: mov  eax [rsi + 24]
 161fe: mov  esi [rsi + 28]
 16201: lea  edx 
 16204: movsxd  rax edx
 16207: mov  ecx edx
 16209: imul  rax rax 0x92492493
 16210: sar  ecx 0x1f
 16213: shr  rax 0x20
 16217: add  eax edx
 16219: sar  eax 0x02
 1621c: sub  eax ecx
 1621e: lea  ecx 
 16225: sub  ecx eax
 16227: mov  eax ecx
 16229: sub  eax edx
 1622b: lea  eax 
 1622f: mov  esi 0x00000057
 16234: movsxd  rdx eax
 16237: imul  rdx rdx 0x92492493
 1623e: shr  rdx 0x20
 16242: add  edx eax
 16244: sar  eax 0x1f
 16247: sar  edx 0x02
 1624a: sub  edx eax
 1624c: jmp 156ab ; relative offset = -2982
 16251: mov  r14 r13
 16254: xor  edi edi
 16256: mov  rcx [16 + rsp]
 1625b: mov  [48 + rsp] 0x00000002
 16263: mov  esi 0x00000055
 16268: mov  eax [rcx + 28]
 1626b: sub  eax [rcx + 24]
 1626e: add  eax 0x07
 16271: movsxd  rdx eax
 16274: imul  rdx rdx 0x92492493
 1627b: shr  rdx 0x20
 1627f: add  edx eax
 16281: sar  eax 0x1f
 16284: sar  edx 0x02
 16287: sub  edx eax
 16289: jmp 156ab ; relative offset = -3043
 1628e: mov  r14 r13
 16291: mov  [48 + rsp] 0xffffffff
 16299: lea  r15 
 162a0: jmp 15d70 ; relative offset = -1333
 162a5: mov  r14 r13
 162a8: xor  edi edi
 162aa: mov  rax [16 + rsp]
 162af: mov  [48 + rsp] 0x00000002
 162b7: mov  esi 0x00000053
 162bc: mov  edx [rax]
 162be: jmp 156ab ; relative offset = -3096
 162c3: mov  r14 r13
 162c6: mov  [48 + rsp] 0xffffffff
 162ce: lea  r15 
 162d5: jmp 15d70 ; relative offset = -1386
 162da: mov  r14 r13
 162dd: xor  edi edi
 162df: mov  ebp 0x00000001
 162e5: jmp 1589a ; relative offset = -2640
 162ea: mov  r14 r13
 162ed: xor  edi edi
 162ef: mov  [48 + rsp] 0x00000002
 162f7: mov  edx [80 + rsp]
 162fb: mov  esi 0x00000049
 16300: jmp 156ab ; relative offset = -3162
 16305: mov  r14 r13
 16308: xor  edi edi
 1630a: mov  rax [16 + rsp]
 1630f: mov  [48 + rsp] 0x00000002
 16317: mov  esi 0x00000048
 1631c: mov  edx [rax + 8]
 1631f: jmp 156ab ; relative offset = -3193
 16324: mov  r14 r13
 16327: xor  edi edi
 16329: mov  rax [16 + rsp]
 1632e: mov  [48 + rsp] 0x00000001
 16336: mov  esi 0x00000077
 1633b: mov  edx [rax + 24]
 1633e: jmp 156ab ; relative offset = -3224
 16343: mov  r14 r13
 16346: xor  edi edi
 16348: mov  rax [16 + rsp]
 1634d: mov  [48 + rsp] 0x00000001
 16355: mov  esi 0x00000075
 1635a: mov  eax [rax + 24]
 1635d: lea  edx 
 16360: movsxd  rax edx
 16363: mov  ecx edx
 16365: imul  rax rax 0x92492493
 1636c: sar  ecx 0x1f
 1636f: shr  rax 0x20
 16373: add  eax edx
 16375: sar  eax 0x02
 16378: sub  eax ecx
 1637a: lea  ecx 
 16381: sub  ecx eax
 16383: sub  edx ecx
 16385: add  edx 0x01
 16388: jmp 156ab ; relative offset = -3298
 1638d: mov  rcx [8 + rsp]
 16392: mov  r14 r13
 16395: sub  rcx r12
 16398: cmp  r11d 0x2d
 1639c: jz 168b7 ; relative offset = 1301
 163a2: UNKNOWN-INSTRUCTION
 163a4: js 168b7 ; relative offset = 1293
 163aa: movsxd  rdx ebx
 163ad: mov  ebp 0x00000001
 163b3: UNKNOWN-INSTRUCTION
 163b5: ror  [69 + rdi + rcx * 1] cl
 163b9: UNKNOWN-INSTRUCTION
 163bd: jnb 15078 ; relative offset = -4939
 163c3: UNKNOWN-INSTRUCTION
 163c5: in  eax dx
 163c6: jz 1567d ; relative offset = -3407
 163cc: cmp  ebx 0x01
 163cf: jng 16402 ; relative offset = 49
 163d1: sub  rdx 0x01
 163d5: lea  rbx 
 163da: cmp  r11d 0x30
 163de: jz 16ca1 ; relative offset = 2237
 163e4: cmp  r11d 0x2b
 163e8: jz 16ca1 ; relative offset = 2227
 163ee: mov  rdi rbp
 163f1: mov  esi 0x00000020
 163f6: mov  rbp rbx
 163f9: call 4960 ; relative offset = -72350
 163fe: movzx  rax [r14]
 16402: mov  [rbp + 0] al
 16405: add  rbp 0x01
 16409: jmp 1567d ; relative offset = -3473
 1640e: cmp  edi 0x45
 16411: jnz 15f24 ; relative offset = -1267
 16417: jmp 151b0 ; relative offset = -4716
 1641c: UNKNOWN-INSTRUCTION
 1641d: dec  [rdi]
 1641f: UNKNOWN-INSTRUCTION
 16421: stc 
 16422: UNKNOWN-INSTRUCTION
 16423: jmp  rcx
 16425: UNKNOWN-INSTRUCTION
 16426: in  eax dx
 16427: UNKNOWN-INSTRUCTION
 16428: inc  [rbx + 0x850f4fff]
 1642e: mov  bpl 0xfc
 16430: UNKNOWN-INSTRUCTION
 16431: jmp  rcx
 16433: jns 16422 ; relative offset = -19
 16435: UNKNOWN-INSTRUCTION
 16436: inc  [rbp + 0x56840fff]
 1643c: UNKNOWN-INSTRUCTION
 1643e: jmp  rcx
 16440: insb 
 16441: in  eax dx
 16442: UNKNOWN-INSTRUCTION
 16443: inc  [rbx + 0x850f45ff]
 16449: loope 1643d ; relative offset = -14
 1644b: UNKNOWN-INSTRUCTION
 1644c: jmp  rcx
 1644e: pop  esi
 1644f: in  eax dx
 16450: UNKNOWN-INSTRUCTION
 16451: inc  [rbp + 0xf4840fff]
 16457: UNKNOWN-INSTRUCTION
 16459: jmp  rcx
 1645b: push  ecx
 1645c: in  eax dx
 1645d: UNKNOWN-INSTRUCTION
 1645e: inc  [rbp + 0x11840fff]
 16464: UNKNOWN-INSTRUCTION
 16466: jmp  rcx
 16468: in  eax dx
 1646a: UNKNOWN-INSTRUCTION
 1646b: inc  [rbx + 0x850f4fff]
 16471: UNKNOWN-INSTRUCTION
 16474: jmp  rcx
 16476: UNKNOWN-INSTRUCTION
 16477: in  eax dx
 16478: UNKNOWN-INSTRUCTION
 1647a: mov  esi 0x00000071
 1647f: cmp  edi 0x4f
 16482: jz 15461 ; relative offset = -4135
 16488: jmp 1598d ; relative offset = -2816
 1648d: cmp  edi 0x4f
 16490: jnz 1616f ; relative offset = -807
 16496: jmp 151b0 ; relative offset = -4843
 1649b: cmp  edi 0x45
 1649e: jnz 160f7 ; relative offset = -941
 164a4: jmp 15461 ; relative offset = -4168
 164a9: cmp  edi 0x45
 164ac: jnz 15eae ; relative offset = -1540
 164b2: jmp 15461 ; relative offset = -4182
 164b7: cmp  edi 0x45
 164ba: jz 15461 ; relative offset = -4191
 164c0: cmp  edi 0x4f
 164c3: jnz 16181 ; relative offset = -840
 164c9: jmp 151b0 ; relative offset = -4894
 164ce: mov  rcx [8 + rsp]
 164d3: sub  rcx r12
 164d6: UNKNOWN-INSTRUCTION
 164d7: dec  [rdi]
 164d9: UNKNOWN-INSTRUCTION
 164da: mov  edx 0x4dfffffe
 164df: mov  edi esi
 164e1: mov  ecx 0x00000001
 164e6: jmp 151cc ; relative offset = -4895
 164eb: cmp  edi 0x45
 164ee: jnz 16329 ; relative offset = -459
 164f4: jmp 151b0 ; relative offset = -4937
 164f9: cmp  edi 0x45
 164fc: jnz 156fe ; relative offset = -3588
 16502: jmp 151b0 ; relative offset = -4951
 16507: cmp  edi 0x45
 1650a: jnz 15712 ; relative offset = -3582
 16510: jmp 151b0 ; relative offset = -4965
 16515: cmp  edi 0x45
 16518: jnz 1593f ; relative offset = -3039
 1651e: jmp 151b0 ; relative offset = -4979
 16523: cmp  edi 0x45
 16526: jnz 15972 ; relative offset = -3002
 1652c: jmp 151b0 ; relative offset = -4993
 16531: cmp  edi 0x45
 16534: jnz 1568a ; relative offset = -3760
 1653a: jmp 151b0 ; relative offset = -5007
 1653f: cmp  edi 0x45
 16542: jnz 156cb ; relative offset = -3709
 16548: jmp 151b0 ; relative offset = -5021
 1654d: cmp  edi 0x45
 16550: jnz 161ee ; relative offset = -872
 16556: jmp 151b0 ; relative offset = -5035
 1655b: cmp  edi 0x45
 1655e: jnz 162aa ; relative offset = -698
 16564: jmp 151b0 ; relative offset = -5049
 16569: cmp  edi 0x45
 1656c: jnz 16256 ; relative offset = -796
 16572: jmp 151b0 ; relative offset = -5063
 16577: cmp  edi 0x45
 1657a: jnz 160c6 ; relative offset = -1210
 16580: jmp 151b0 ; relative offset = -5077
 16585: cmp  edi 0x45
 16588: jnz 162ef ; relative offset = -671
 1658e: jmp 151b0 ; relative offset = -5091
 16593: cmp  edi 0x45
 16596: jnz 1630a ; relative offset = -658
 1659c: jmp 151b0 ; relative offset = -5105
 165a1: mov  r13 r14
 165a4: jmp 15782 ; relative offset = -3623
 165a9: add  r9 0x01
 165ad: movzx  rax [R13 + 0 + r9 * 1]
 165b3: lea  r14 
 165b8: cmp  unknown 0x3a
 165ba: jnz 15799 ; relative offset = -3623
 165c0: jmp 165a9 ; relative offset = -25
 165c2: UNKNOWN-INSTRUCTION
 165c3: nop  [0 + rax + rax * 1]
 165c8: mov  rbx r15
 165cb: xor  edx edx
 165cd: jmp 154e0 ; relative offset = -4338
 165d2: UNKNOWN-INSTRUCTION
 165d3: nop  [0 + rax + rax * 1]
 165d8: mov  rbx rcx
 165db: xor  edx edx
 165dd: jmp 151eb ; relative offset = -5111
 165e2: UNKNOWN-INSTRUCTION
 165e3: nop  [0 + rax + rax * 1]
 165e8: mov  edi 0x0000002d
 165ee: lea  esi 
 165f1: mov  edx esi
 165f3: sub  edx r10d
 165f6: UNKNOWN-INSTRUCTION
 165f7: sar  [rsi + 102] cl
 165fa: UNKNOWN-INSTRUCTION
 165fc: jz 16660 ; relative offset = 98
 165fe: cmp  r11d 0x5f
 16602: jz 16766 ; relative offset = 350
 16608: mov  rax [8 + rsp]
 1660d: sub  rax r12
 16610: cmp  rax 0x01
 16614: jna 15078 ; relative offset = -5538
 1661a: UNKNOWN-INSTRUCTION
 1661c: in  eax dx
 1661d: jz 16627 ; relative offset = 8
 1661f: mov  [rbp + 0] r15b
 16623: add  rbp 0x01
 16627: add  r12 0x01
 1662b: movsxd  rcx r10d
 1662e: cmp  r11d 0x2d
 16632: jz 1666e ; relative offset = 58
 16634: mov  rbx rcx
 16637: xor  edx edx
 16639: UNKNOWN-INSTRUCTION
 1663b: js 15bb7 ; relative offset = -2698
 16641: mov  ebx esi
 16643: jmp 15baa ; relative offset = -2718
 16648: nop  [0x00000000 + rax + rax * 1]
 16650: mov  eax 0x00000001
 16655: mov  ebx 0x00000030
 1665b: jmp 15b78 ; relative offset = -2792
 16660: xor  edx edx
 16662: jmp 165fe ; relative offset = -102
 16664: cmp  r11d 0x2d
 16668: jnz 15baa ; relative offset = -2756
 1666e: mov  rbx rcx
 16671: xor  edx edx
 16673: jmp 15bb7 ; relative offset = -2753
 16678: mov  rdx rcx
 1667b: mov  rsi r13
 1667e: mov  rdi rbp
 16681: mov  [64 + rsp] rcx
 16686: call 4a50 ; relative offset = -72763
 1668b: mov  rcx [64 + rsp]
 16690: jmp 15276 ; relative offset = -5151
 16695: mov  rdx rcx
 16698: mov  rsi r15
 1669b: mov  rdi rbp
 1669e: mov  [64 + rsp] rcx
 166a3: call 4a50 ; relative offset = -72792
 166a8: mov  rcx [64 + rsp]
 166ad: jmp 15276 ; relative offset = -5180
 166b2: mov  r15d edx
 166b5: jmp 150f7 ; relative offset = -5571
 166ba: mov  [64 + rsp] 0x01
 166bf: jmp 150f7 ; relative offset = -5581
 166c4: lea  rsi 
 166cc: mov  rdx r15
 166cf: mov  rdi rbp
 166d2: call 4a50 ; relative offset = -72839
 166d7: jmp 15586 ; relative offset = -4438
 166dc: lea  r13 
 166e0: UNKNOWN-INSTRUCTION
 166e2: dec  [rdi]
 166e4: UNKNOWN-INSTRUCTION
 166e6: out  dx unknown
 166e7: UNKNOWN-INSTRUCTION
 166e8: jmp  rax
 166ea: sal  bpl cl
 166ec: UNKNOWN-INSTRUCTION
 166ed: dec  [rax + 141]
 166f0: mov  spl 0x24
 166f2: add  [rcx] eax
 166f4: UNKNOWN-INSTRUCTION
 166f8: nop  [0x00000000 + rax + rax * 1]
 16700: movzx  rcx [rsi + r13 * 1]
 16705: mov  rdx [rax]
 16708: mov  edx [rdx + rcx * 4]
 1670b: mov  [RBP + 0 + r13 * 1] dl
 16710: sub  r13 0x01
 16714: jnb 16700 ; relative offset = -22
 16716: jmp 15586 ; relative offset = -4501
 1671b: mov  r10 r13
 1671e: xor  edx edx
 16720: jmp 15dde ; relative offset = -2375
 16725: mov  edi 0x0000002b
 1672b: jmp 165ee ; relative offset = -322
 16730: mov  rdi rbp
 16733: mov  esi 0x00000030
 16738: call 4960 ; relative offset = -73181
 1673d: mov  rbp [48 + rsp]
 16742: mov  rcx [72 + rsp]
 16747: jmp 1553c ; relative offset = -4624
 1674c: mov  rdi rbp
 1674f: mov  esi 0x00000030
 16754: mov  rbp r15
 16757: call 4960 ; relative offset = -73212
 1675c: mov  rcx [48 + rsp]
 16761: jmp 15c0c ; relative offset = -2906
 16766: mov  ecx ebx
 16768: mov  rbx [8 + rsp]
 1676d: sub  ecx edx
 1676f: movsxd  rdx edx
 16772: add  r12 rdx
 16775: sub  rbx r12
 16778: UNKNOWN-INSTRUCTION
 1677a: in  eax dx
 1677b: jz 16820 ; relative offset = 159
 16781: mov  rdi rbp
 16784: mov  esi 0x00000020
 16789: mov  [48 + rsp] rdx
 1678e: mov  [88 + rsp] r10
 16793: mov  [84 + rsp] ecx
 16797: mov  [72 + rsp] r11d
 1679c: call 4960 ; relative offset = -73281
 167a1: mov  rdx [48 + rsp]
 167a6: add  rbp rdx
 167a9: cmp  rbx 0x01
 167ad: jna 15078 ; relative offset = -5947
 167b3: mov  ecx [84 + rsp]
 167b7: mov  r11d [72 + rsp]
 167bc: mov  r10 [88 + rsp]
 167c1: lea  esi 
 167c4: jmp 1661f ; relative offset = -426
 167c9: mov  rdi rbp
 167cc: mov  esi 0x00000030
 167d1: mov  rbp r13
 167d4: call 4960 ; relative offset = -73337
 167d9: mov  rcx [48 + rsp]
 167de: jmp 15240 ; relative offset = -5539
 167e3: cmp  r9 0x03
 167e7: jnz 16c1c ; relative offset = 1071
 167ed: UNKNOWN-INSTRUCTION
 167ef: ror  [rdi] 0x85
 167f2: mov  dl 0x03
 167f4: UNKNOWN-INSTRUCTION
 167f7: leave 
 167f8: jnz 15852 ; relative offset = -4012
 167fe: mov  eax r15d
 16801: mov  [72 + rsp] 0x01
 16806: mov  edx r10d
 16809: mov  [48 + rsp] 0x00000003
 16811: xor  eax 0x01
 16814: jmp 15450 ; relative offset = -5065
 16819: nop  [rax + 0x00000000]
 16820: cmp  rbx 0x01
 16824: jna 15078 ; relative offset = -6066
 1682a: lea  esi 
 1682d: add  r12 0x01
 16831: movsxd  rcx r10d
 16834: jmp 16634 ; relative offset = -517
 16839: mov  rdi rbp
 1683c: mov  esi 0x00000030
 16841: call 4960 ; relative offset = -73446
 16846: mov  rbp [64 + rsp]
 1684b: mov  r8d [72 + rsp]
 16850: mov  r11d [84 + rsp]
 16855: mov  r10 [88 + rsp]
 1685a: jmp 15e4e ; relative offset = -2577
 1685f: cmp  rax 0x01
 16863: jna 15078 ; relative offset = -6129
 16869: mov  ebp 0x00000001
 1686f: UNKNOWN-INSTRUCTION
 16871: in  eax dx
 16872: jnz 1592d ; relative offset = -3915
 16878: jmp 1567d ; relative offset = -4608
 1687d: cmp  rax 0x01
 16881: jna 15078 ; relative offset = -6159
 16887: mov  ebp 0x00000001
 1688d: UNKNOWN-INSTRUCTION
 1688f: in  eax dx
 16890: jnz 15675 ; relative offset = -4641
 16896: jmp 1567d ; relative offset = -4638
 1689b: mov  [48 + rsp] r13
 168a0: xor  ebx ebx
 168a2: jmp 15ca3 ; relative offset = -3076
 168a7: mov  edi 0x00000001
 168ad: mov  esi 0x00000001
 168b2: jmp 15f98 ; relative offset = -2335
 168b7: cmp  rcx 0x01
 168bb: jna 15078 ; relative offset = -6217
 168c1: mov  ebp 0x00000001
 168c7: UNKNOWN-INSTRUCTION
 168c9: in  eax dx
 168ca: jnz 16402 ; relative offset = -1230
 168d0: jmp 1567d ; relative offset = -4696
 168d5: mov  [48 + rsp] 0x00000004
 168dd: mov  eax 0x0000270f
 168e2: cmp  r11d 0x2b
 168e6: jnz 16dee ; relative offset = 1282
 168ec: UNKNOWN-INSTRUCTION
 168ee: jnb 16916 ; relative offset = 38
 168f0: mov  eax r15d
 168f3: mov  [72 + rsp] 0x01
 168f8: mov  ebx 0x0000002b
 168fe: xor  eax 0x01
 16901: jmp 1544a ; relative offset = -5308
 16906: mov  [48 + rsp] 0x00000002
 1690e: mov  esi 0x00000079
 16913: xor  r15d r15d
 16916: UNKNOWN-INSTRUCTION
 16917: pop  esp
 16918: and  unknown 0x30
 1691a: mov  eax r15d
 1691d: mov  ebx 0x0000002b
 16923: UNKNOWN-INSTRUCTION
 16925: and  unknown 0x48
 16928: xor  eax 0x01
 1692b: jmp 1544a ; relative offset = -5350
 16930: sub  r9d 0x01
 16934: mov  eax 0x0000016d
 16939: test  r9b 0x03
 1693d: jnz 16972 ; relative offset = 51
 1693f: imul  edx r9d 0xc28f5c29
 16946: mov  eax 0x0000016e
 1694b: add  edx 0x051eb850
 16951: ror  edx 0x02
 16954: cmp  edx 0x028f5c28
 1695a: jnbe  0x16
 1695c: mov  eax r9d
 1695f: mov  eax 0x00000190
 16965: UNKNOWN-INSTRUCTION
 16966: idiv  r8d
 16969: neg  edx
 1696b: sbb  eax eax
 1696d: add  eax 0x0000016e
 16972: add  eax r10d
 16975: mov  r8d eax
 16978: sub  r8d r14d
 1697b: add  r8d 0x0000017e
 16982: movsxd  rdx r8d
 16985: mov  r9d r8d
 16988: sub  eax r8d
 1698b: imul  rdx rdx 0x92492493
 16992: sar  r9d 0x1f
 16996: shr  rdx 0x20
 1699a: add  edx r8d
 1699d: mov  eax 0xffffffff
 169a3: sar  edx 0x02
 169a6: sub  edx r9d
 169a9: lea  r9d 
 169b1: sub  r9d edx
 169b4: lea  eax 
 169b9: jmp 153c5 ; relative offset = -5625
 169be: cmp  r11d 0x2b
 169c2: jnz 15f0a ; relative offset = -2750
 169c8: mov  [48 + rsp] 0x00000002
 169d0: mov  esi 0x00000043
 169d5: mov  eax 0x00000063
 169da: jmp 168ec ; relative offset = -243
 169df: mov  eax 0xfffff894
 169e4: lea  edx 
 169ec: mov  r14 r13
 169ef: sub  eax r8d
 169f2: UNKNOWN-INSTRUCTION
 169f3: rol  [rcx + 15] 0x9c
 169f7: mov  [rbp + 133] 0xd4850fdb
 169fe: UNKNOWN-INSTRUCTION
 16a00: inc  [92 + rbx + rcx * 4]
 16a04: and  unknown 0x24
 16a06: cmp  r11d 0x2b
 16a0a: jz 16dfe ; relative offset = 1006
 16a10: UNKNOWN-INSTRUCTION
 16a11: rol  esi 0x44
 16a14: and  unknown 0x48
 16a16: UNKNOWN-INSTRUCTION
 16a17: mov  r14 r13
 16a1a: mov  [48 + rsp] 0x00000004
 16a22: UNKNOWN-INSTRUCTION
 16a24: shr  cl 0x20
 16a27: UNKNOWN-INSTRUCTION
 16a29: dec  [rax + 99]
 16a2c: rol  dil 
 16a2e: and  unknown 0x30
 16a31: add  al [rax]
 16a33: UNKNOWN-INSTRUCTION
 16a35: mov  r14 r13
 16a38: imul  rdx rdx 0x92492493
 16a3f: shr  rdx 0x20
 16a43: add  edx eax
 16a45: sar  eax 0x1f
 16a48: sar  edx 0x02
 16a4b: sub  edx eax
 16a4d: add  edx 0x01
 16a50: jmp 156ab ; relative offset = -5034
 16a55: lea  rsi 
 16a5d: lea  rdi 
 16a62: mov  [48 + rsp] r11d
 16a67: call 4730 ; relative offset = -74556
 16a6c: mov  r11d [48 + rsp]
 16a71: UNKNOWN-INSTRUCTION
 16a73: ror  [rdi] 0x84
 16a76: UNKNOWN-INSTRUCTION
 16a79: dec  [rbx + 0x00842484]
 16a7f: UNKNOWN-INSTRUCTION
 16a81: mov  edx [0x000000a0 + rsp]
 16a88: mov  ecx [0x000000e0 + rsp]
 16a8f: mov  edi [0x00000080 + rsp]
 16a96: mov  [48 + rsp] eax
 16a9a: mov  eax [0x000000c4 + rsp]
 16aa1: UNKNOWN-INSTRUCTION
 16aa2: ror  [rdi] cl
 16aa4: UNKNOWN-INSTRUCTION
 16aa5: and  unknown 0x6e
 16aa8: UNKNOWN-INSTRUCTION
 16aa9: leave 
 16aaa: mov  esi [0x000000c0 + rsp]
 16ab1: mov  r8d [0x000000d0 + rsp]
 16ab9: mov  [72 + rsp] eax
 16abd: mov  eax [0x00000088 + rsp]
 16ac4: UNKNOWN-INSTRUCTION
 16ac6: and  unknown 0x6f
 16ac9: mov  r9d [0x00000094 + rsp]
 16ad1: mov  r10d [0x000000d4 + rsp]
 16ad9: mov  [84 + rsp] eax
 16add: mov  eax [0x000000c8 + rsp]
 16ae4: mov  [88 + rsp] eax
 16ae8: mov  eax [0x0000008c + rsp]
 16aef: mov  [96 + rsp] eax
 16af3: mov  eax [0x000000cc + rsp]
 16afa: mov  [100 + rsp] eax
 16afe: mov  eax [0x00000090 + rsp]
 16b05: mov  [104 + rsp] eax
 16b09: movzx  eax [111 + rsp]
 16b0e: UNKNOWN-INSTRUCTION
 16b0f: and  unknown 0x6e
 16b12: jz 16b1c ; relative offset = 8
 16b14: or  edx ecx
 16b16: jns 15ac8 ; relative offset = -4180
 16b1c: mov  eax [104 + rsp]
 16b20: xor  r9d r10d
 16b23: mov  edx [96 + rsp]
 16b27: xor  edi esi
 16b29: xor  edx [100 + rsp]
 16b2d: xor  eax r8d
 16b30: or  eax r9d
 16b33: or  eax edx
 16b35: mov  edx [84 + rsp]
 16b39: xor  edx [88 + rsp]
 16b3d: or  eax edx
 16b3f: mov  edx [48 + rsp]
 16b43: xor  edx [72 + rsp]
 16b47: or  eax edx
 16b49: or  eax edi
 16b4b: jz 15aa4 ; relative offset = -4269
 16b51: jmp 15ac8 ; relative offset = -4238
 16b56: lea  rdi 
 16b5e: cmp  r15 0x08
 16b62: jnb 16cf7 ; relative offset = 399
 16b68: test  r15b 0x04
 16b6c: jnz 16e32 ; relative offset = 704
 16b72: UNKNOWN-INSTRUCTION
 16b74: dec  [rdi]
 16b76: UNKNOWN-INSTRUCTION
 16b7a: dec  [rdi]
 16b7c: mov  sil 0x84
 16b7e: and  unknown 0x00
 16b80: add  [rax] eax
 16b82: UNKNOWN-INSTRUCTION
 16b83: mov  [rbp + 0] al
 16b86: test  r15b 0x02
 16b8a: jz 16051 ; relative offset = -2879
 16b90: movzx  eax [0x000000fe + rsp + r15 * 1]
 16b99: mov  [RBP + 254 + r15 * 1] eax
 16b9f: jmp 16051 ; relative offset = -2899
 16ba4: nop  [rax + 0]
 16ba8: imul  ecx ecx 0x64
 16bab: mov  eax r15d
 16bae: mov  [72 + rsp] 0x01
 16bb3: imul  edx r10d 0x00002710
 16bba: mov  [48 + rsp] 0x00000009
 16bc2: xor  eax 0x01
 16bc5: add  edx ecx
 16bc7: mov  ecx 0x00000014
 16bcc: add  edx r8d
 16bcf: jmp 15450 ; relative offset = -6020
 16bd4: mov  rsi [40 + rsp]
 16bd9: mov  rdx r13
 16bdc: mov  rdi rbp
 16bdf: call 4a50 ; relative offset = -74132
 16be4: jmp 15d2d ; relative offset = -3772
 16be9: lea  rbx 
 16bed: UNKNOWN-INSTRUCTION
 16bef: in  eax dx
 16bf0: jz 15d2d ; relative offset = -3785
 16bf6: call 4cc0 ; relative offset = -73531
 16bfb: mov  rcx [40 + rsp]
 16c00: mov  rsi rax
 16c03: movzx  edx [rcx + rbx * 1]
 16c07: mov  rax [rsi]
 16c0a: mov  eax [rax + rdx * 4]
 16c0d: mov  [RBP + 0 + rbx * 1] al
 16c11: sub  rbx 0x01
 16c15: jnb 16c03 ; relative offset = -20
 16c17: jmp 15d2d ; relative offset = -3823
 16c1c: movzx  rax [r14]
 16c20: mov  r15 r14
 16c23: jmp 155f3 ; relative offset = -5685
 16c28: mov  rdi rbp
 16c2b: mov  esi 0x00000030
 16c30: mov  rbp rbx
 16c33: call 4960 ; relative offset = -74456
 16c38: jmp 1592d ; relative offset = -4880
 16c3d: imul  edx r10d 0x64
 16c41: mov  eax r15d
 16c44: mov  [72 + rsp] 0x01
 16c49: mov  [48 + rsp] 0x00000005
 16c51: xor  eax 0x01
 16c54: add  edx ecx
 16c56: xor  ecx ecx
 16c58: jmp 15450 ; relative offset = -6157
 16c5d: lea  rdi 
 16c65: call 4b60 ; relative offset = -73994
 16c6a: mov  r11d [48 + rsp]
 16c6f: mov  rcx rax
 16c72: jmp 15aed ; relative offset = -4490
 16c77: mov  rdi rbp
 16c7a: mov  esi 0x00000030
 16c7f: mov  rbp rbx
 16c82: call 4960 ; relative offset = -74535
 16c87: jmp 15675 ; relative offset = -5655
 16c8c: mov  rdi rbp
 16c8f: mov  esi 0x00000030
 16c94: mov  rbp rbx
 16c97: call 4960 ; relative offset = -74556
 16c9c: jmp 15cef ; relative offset = -4018
 16ca1: mov  rdi rbp
 16ca4: mov  esi 0x00000030
 16ca9: mov  rbp rbx
 16cac: call 4960 ; relative offset = -74577
 16cb1: movzx  rax [r14]
 16cb5: jmp 16402 ; relative offset = -2232
 16cba: mov  eax 0xfffff894
 16cbf: sub  eax r8d
 16cc2: UNKNOWN-INSTRUCTION
 16cc3: ror  [rdi] 0x8d
 16cc6: add  [rax] r8
 16cc9: UNKNOWN-INSTRUCTION
 16cca: neg  edx
 16ccc: UNKNOWN-INSTRUCTION
 16ccf: jnz 15428 ; relative offset = -6317
 16cd5: mov  r11d [36 + rsp]
 16cda: mov  r14 r13
 16cdd: cmp  r11d 0x2b
 16ce1: jnz 15435 ; relative offset = -6322
 16ce7: mov  [48 + rsp] 0x00000002
 16cef: xor  r15d r15d
 16cf2: jmp 16916 ; relative offset = -993
 16cf7: mov  rax [0x00000100 + rsp]
 16cff: lea  rdx 
 16d03: and  rdx 0xf8
 16d07: mov  [rbp + 0] rax
 16d0b: mov  rax [0x000000f8 + rsp + r15 * 1]
 16d13: mov  [RBP + 248 + r15 * 1] rax
 16d18: mov  rax rbp
 16d1b: sub  rax rdx
 16d1e: sub  rdi rax
 16d21: add  rax r15
 16d24: and  rax 0xf8
 16d28: cmp  rax 0x08
 16d2c: jnae 16051 ; relative offset = -3297
 16d32: and  rax 0xf8
 16d36: xor  ecx ecx
 16d38: mov  rsi [rdi + rcx * 1]
 16d3c: mov  [rdx + rcx * 1] rsi
 16d40: add  rcx 0x08
 16d44: UNKNOWN-INSTRUCTION
 16d47: jnae 16d38 ; relative offset = -17
 16d49: jmp 16051 ; relative offset = -3325
 16d4e: mov  rdi rbp
 16d51: mov  esi 0x00000030
 16d56: mov  rbp rbx
 16d59: call 4960 ; relative offset = -74750
 16d5e: jmp 15044 ; relative offset = -7455
 16d63: movzx  r8 [64 + rsp]
 16d69: sub  rsp 0x08
 16d6d: xor  edi edi
 16d6f: lea  r15 
 16d76: mov  eax [0x00000568 + rsp]
 16d7d: mov  rdx r15
 16d80: mov  ecx 0x0000002b
 16d86: mov  rsi 0xffffffff
 16d8d: push  eax
 16d8e: push  [40 + rsp]
 16d92: UNKNOWN-INSTRUCTION
 16d93: add  unknown 0x48
 16d95: mov  ecx [48 + rsp]
 16d99: mov  [96 + rsp] r8d
 16d9e: call 14f60 ; relative offset = -7747
 16da3: add  rsp 0x20
 16da7: xor  edx edx
 16da9: mov  r8d [64 + rsp]
 16dae: mov  r13 rax
 16db1: mov  r10 rax
 16db4: mov  ebx 0x0000002b
 16dba: mov  [48 + rsp] 0x00000004
 16dc2: jmp 15dde ; relative offset = -4073
 16dc7: mov  [48 + rsp] 0x00000004
 16dcf: mov  esi 0x00000059
 16dd4: mov  eax 0x0000270f
 16dd9: jmp 168ec ; relative offset = -1266
 16dde: add  r12 rdx
 16de1: jmp 15044 ; relative offset = -7586
 16de6: xor  r15d r15d
 16de9: jmp 15fe3 ; relative offset = -3595
 16dee: mov  eax r15d
 16df1: mov  [72 + rsp] 0x00
 16df6: xor  eax 0x01
 16df9: jmp 1544a ; relative offset = -6580
 16dfe: mov  [48 + rsp] 0x00000004
 16e06: mov  r14 r13
 16e09: mov  eax 0x0000270f
 16e0e: jmp 168ec ; relative offset = -1319
 16e13: call 4890 ; relative offset = -75144
 16e18: add  edx 0x64
 16e1b: UNKNOWN-INSTRUCTION
 16e1e: jz 16cd5 ; relative offset = -335
 16e24: jmp 15428 ; relative offset = -6657
 16e29: or  rcx 0xff
 16e2d: jmp 15aed ; relative offset = -4933
 16e32: mov  eax [0x00000100 + rsp]
 16e39: mov  [rbp + 0] eax
 16e3c: mov  eax [0x000000fc + rsp + r15 * 1]
 16e44: mov  [RBP + 252 + r15 * 1] eax
 16e49: jmp 16051 ; relative offset = -3581
 16e4e: UNKNOWN-INSTRUCTION
 16e4f: nop 
 16e50: UNKNOWN-INSTRUCTION
 16e54: sub  rsp 0x08
 16e58: movzx  rdi dil
 16e5c: call c190 ; relative offset = -44241
 16e61: UNKNOWN-INSTRUCTION
 16e63: jz 16e8b ; relative offset = 38
 16e65: mov  rdx [RIP + 0x0000b13c]
 16e6c: mov  rdi [rdx]
 16e6f: mov  rdx [rdi + 40]
 16e73: UNKNOWN-INSTRUCTION
 16e75: push  edi
 16e76: UNKNOWN-INSTRUCTION
 16e77: jnb 16e90 ; relative offset = 23
 16e79: lea  rcx 
 16e7d: mov  [rdi + 40] rcx
 16e81: mov  [rdx] al
 16e83: add  [RIP + 0x0000b46d] 0x01
 16e8b: add  rsp 0x08
 16e8f: ret 
 16e90: movzx  esi al
 16e93: call 4900 ; relative offset = -75160
 16e98: jmp 16e83 ; relative offset = -23
 16e9a: UNKNOWN-INSTRUCTION
 16e9b: nop  [0 + rax + rax * 1]
 16ea0: UNKNOWN-INSTRUCTION
 16ea4: push  esp
 16ea6: mov  r12 rsi
 16ea9: push  ebx
 16eaa: mov  rbx rdi
 16ead: sub  esp 0x000002a8
 16eb4: UNKNOWN-INSTRUCTION
 16eb5: mov  rax 0x00000028
 16ebd: mov  [0x00000298 + rsp] rax
 16ec5: xor  eax eax
 16ec7: UNKNOWN-INSTRUCTION
 16eca: mov  spl 0x00
 16ecc: UNKNOWN-INSTRUCTION
 16ece: jz 16ee2 ; relative offset = 18
 16ed0: mov  edi 0x00000004
 16ed5: call c120 ; relative offset = -44474
 16eda: UNKNOWN-INSTRUCTION
 16edb: ror  [rdi] 0x85
 16ede: jna 16ee1 ; relative offset = 1
 16ee0: UNKNOWN-INSTRUCTION
 16ee5: mov  spl 0x00
 16ee7: UNKNOWN-INSTRUCTION
 16ee9: jnz 16fa8 ; relative offset = 185
 16eef: UNKNOWN-INSTRUCTION
 16ef1: sbb  sil [0x38740000 + rax + rax * 1]
 16ef8: UNKNOWN-INSTRUCTION
 16ef9: mov  ebx 0x000000b8
 16efe: UNKNOWN-INSTRUCTION
 16eff: lea  rcx 
 16f06: jnz 17088 ; relative offset = 380
 16f0c: xor  edx edx
 16f0e: cmp  [RIP + 0x0000b3f7] 0x04
 16f15: jz 16f1d ; relative offset = 6
 16f17: mov  edx [RIP + 0x0000b387]
 16f1d: lea  rsi 
 16f24: mov  edi 0x00000001
 16f29: xor  eax eax
 16f2b: call 4b40 ; relative offset = -74736
 16f30: UNKNOWN-INSTRUCTION
 16f32: leave 
 16f33: mov  bpl 0x00
 16f35: UNKNOWN-INSTRUCTION
 16f37: jz 16f64 ; relative offset = 43
 16f39: xor  edx edx
 16f3b: cmp  [RIP + 0x0000b3ca] 0x04
 16f42: mov  rcx [rbx + 0x000000b0]
 16f49: jz 16f51 ; relative offset = 6
 16f4b: mov  edx [RIP + 0x0000b34f]
 16f51: lea  rsi 
 16f58: mov  edi 0x00000001
 16f5d: xor  eax eax
 16f5f: call 4b40 ; relative offset = -74788
 16f64: mov  rcx r12
 16f67: xor  edx edx
 16f69: xor  esi esi
 16f6b: mov  rdi rbx
 16f6e: call 10210 ; relative offset = -28003
 16f73: mov  eax [RIP + 0x0000b38b]
 16f79: UNKNOWN-INSTRUCTION
 16f7a: ror  [rdi] 0x85
 16f7d: mov  dil 0x00
 16f7f: UNKNOWN-INSTRUCTION
 16f81: mov  rax [0x00000298 + rsp]
 16f89: UNKNOWN-INSTRUCTION
 16f8a: sub  rax 0x00000028
 16f92: jnz 170bd ; relative offset = 293
 16f98: add  esp 0x000002a8
 16f9f: pop  ebx
 16fa0: pop  esp
 16fa2: ret 
 16fa3: nop  [0 + rax + rax * 1]
 16fa8: UNKNOWN-INSTRUCTION
 16fa9: mov  ebx 0x000000b8
 16fae: UNKNOWN-INSTRUCTION
 16faf: lea  r8 
 16fb6: jz 17008 ; relative offset = 80
 16fb8: mov  rcx [rbx + 32]
 16fbc: UNKNOWN-INSTRUCTION
 16fbe: leave 
 16fbf: jz 17008 ; relative offset = 71
 16fc1: mov  [20 + rsp] 0x00
 16fc6: lea  r8 
 16fcb: mov  rdi 0xcccccccccccccccd
 16fd5: nop  [rax]
 16fd8: mov  rax rcx
 16fdb: sub  r8 0x01
 16fdf: mul  rsp
 16fe2: mov  rax rcx
 16fe5: shr  rdx 0x03
 16fe9: lea  rsi 
 16fed: add  rsi rsi
 16ff0: sub  rax rsi
 16ff3: add  eax 0x30
 16ff6: mov  [r8] al
 16ff9: mov  rax rcx
 16ffc: mov  rcx rdx
 16fff: cmp  rax 0x09
 17003: jnbe  0xd3
 17005: nop  [rax]
 17008: xor  edx edx
 1700a: cmp  [RIP + 0x0000b2fb] 0x04
 17011: jz 17019 ; relative offset = 6
 17013: mov  edx [RIP + 0x0000b28f]
 17019: mov  rcx r8
 1701c: lea  rsi 
 17023: mov  edi 0x00000001
 17028: xor  eax eax
 1702a: call 4b40 ; relative offset = -74991
 1702f: jmp 16eef ; relative offset = -325
 17034: nop  [rax + 0]
 17038: mov  edx [rbx + 0x000000a8]
 1703e: mov  esi [rbx + 48]
 17041: movzx  edi [rbx + 0x000000b8]
 17048: call 16e50 ; relative offset = -509
 1704d: jmp 16f81 ; relative offset = -209
 17052: UNKNOWN-INSTRUCTION
 17053: nop  [0 + rax + rax * 1]
 17058: lea  rdi 
 1705f: call c2a0 ; relative offset = -44484
 17064: lea  rdi 
 1706b: call c2a0 ; relative offset = -44496
 17070: lea  rdi 
 17077: call c2a0 ; relative offset = -44508
 1707c: jmp 16ee2 ; relative offset = -415
 17081: nop  [rax + 0x00000000]
 17088: mov  edx [RIP + 0x0000b22a]
 1708e: mov  rdi [rbx + 88]
 17092: mov  ecx 0x00000200
 17097: mov  rsi rsp
 1709a: mov  r8 [RIP + 0x0000b20f]
 170a1: call cd20 ; relative offset = -41862
 170a6: xor  edx edx
 170a8: cmp  [RIP + 0x0000b25d] 0x04
 170af: mov  rcx rax
 170b2: jnz 16f17 ; relative offset = -417
 170b8: jmp 16f1d ; relative offset = -416
 170bd: call 4890 ; relative offset = -75826
 170c2: UNKNOWN-INSTRUCTION
 170c4: nop  [0x00000000 + rax + rax * 1]
 170cc: nop  [rax + 0]
 170d0: UNKNOWN-INSTRUCTION
 170d4: mov  rdx [RIP + 0x0000af2d]
 170db: xor  esi esi
 170dd: jmp 4be0 ; relative offset = -75010
 170e2: UNKNOWN-INSTRUCTION
 170e4: nop  [0x00000000 + rax + rax * 1]
 170ec: nop  [rax + 0]
 170f0: UNKNOWN-INSTRUCTION
 170f4: mov  rax [RIP + 0x00009f05]
 170fb: cmp  rax 0xff
 170ff: jz 17130 ; relative offset = 47
 17101: push  ebp
 17102: mov  rbp rsp
 17105: push  ebx
 17106: lea  rbx 
 1710d: sub  rsp 0x08
 17111: nop  [rax + 0x00000000]
 17118: call  rdx
 17119: ror  [rax + 139] 
 1711c: clc 
 1711e: sub  rbx 0x08
 17122: cmp  rax 0xff
 17126: jnz 17118 ; relative offset = -16
 17128: mov  rbx [rbp + 248]
 1712c: leave 
 1712d: ret 
 1712e: UNKNOWN-INSTRUCTION
 1712f: nop 
 17130: ret 
-------------------
Done!
